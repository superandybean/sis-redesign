{"_id":"gatsby-plugin-sharp","_rev":"777-0551f7a5391c74be1830536bee60fb97","name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","dist-tags":{"latest":"3.0.0","cloud-image-sharp":"2.2.22-cloud-image-sharp.51","reporter-npm":"2.1.8-reporter-npm.8","sharp-content-hash":"2.1.10-sharp-content-hash.614","otp-test":"2.2.19-otp-test.31","sharp-cache":"2.3.3-sharp-cache.43","sharp-glib":"2.3.3-sharp-glib.83","sharp-jobs-v2":"2.3.11-sharp-jobs-v2.82","sharp-cloud":"2.4.1-sharp-cloud.0","progress-fix":"2.4.1-progress-fix.27","berry-mdx":"2.3.14-berry-mdx.56","prompt-restart":"2.5.4-prompt-restart.123","unifiedroutes":"2.5.6-unifiedroutes.76","telemetry-test":"2.9.0-telemetry-test.418","unifiedroutes-v2":"2.5.6-unifiedroutes-v2.135","incbuild-collections":"2.6.28-incbuild-collections.83","dev-ssr-2":"2.6.29-dev-ssr-2.60","static-image":"2.6.37-static-image.172","lazy-images":"2.6.43-lazy-images.61","next":"3.1.0-next.1","image-helpers":"2.9.0-image-helpers.59","avif":"2.12.0-avif.14","telemetry-test2":"2.9.0-telemetry-test2.372","testing-sid":"2.13.0-testing-sid.1","incbuilds-special":"2.13.0-incbuilds-special.22","testing-sid2":"2.13.0-testing-sid2.1","testing-sid3":"2.13.0-testing-sid3.2","query-chunk-stats-base":"2.13.0-query-chunk-stats-base.68","1testing-sid":"2.13.0-1testing-sid.3","2testing-sid":"2.13.0-2testing-sid.3","laurie-testing":"2.13.0-laurie-testing.3","cbp3":"3.0.0-cpb3.33","v3rc":"3.0.0-v3rc.2"},"versions":{"1.0.0-alpha11-alpha.f46304ad":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha11-alpha.f46304ad","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha11-alpha.f46304ad","_shasum":"624c39cc12afbc2fc20bdb0231c64c50eb6617af","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"624c39cc12afbc2fc20bdb0231c64c50eb6617af","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha11-alpha.f46304ad.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha11-alpha.f46304ad.tgz_1486409486151_0.36212473828345537"},"directories":{}},"1.0.0-alpha11-alpha.3e341373":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha11-alpha.3e341373","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha11-alpha.3e341373","_shasum":"42c858b0e684ea9814956b11a52aab09d8f5f674","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"42c858b0e684ea9814956b11a52aab09d8f5f674","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha11-alpha.3e341373.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha11-alpha.3e341373.tgz_1486412987314_0.3567567898426205"},"directories":{}},"1.0.0-alpha11-alpha.c623e1cc":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha11-alpha.c623e1cc","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha11-alpha.c623e1cc","_shasum":"32e070d32132cae0ae7d4934faaedf199530a4a7","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"32e070d32132cae0ae7d4934faaedf199530a4a7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha11-alpha.c623e1cc.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha11-alpha.c623e1cc.tgz_1486423894033_0.8606037532445043"},"directories":{}},"1.0.0-alpha11-alpha.267af45c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha11-alpha.267af45c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha11-alpha.267af45c","_shasum":"87bb191864ad60d5c762e9e9757d0d342eb3caf8","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"87bb191864ad60d5c762e9e9757d0d342eb3caf8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha11-alpha.267af45c.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha11-alpha.267af45c.tgz_1486491973440_0.06790135730989277"},"directories":{}},"1.0.0-alpha11-alpha.2a65312c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha11-alpha.2a65312c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha11-alpha.2a65312c","_shasum":"4512973c101bd34ffa73c8c7b6fc60cbfd79ae24","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"4512973c101bd34ffa73c8c7b6fc60cbfd79ae24","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha11-alpha.2a65312c.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha11-alpha.2a65312c.tgz_1486495786270_0.512272224528715"},"directories":{}},"1.0.0-alpha11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha11","_shasum":"31a1b092a3af6d0157cba717940003be507aa57e","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"31a1b092a3af6d0157cba717940003be507aa57e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha11.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha11.tgz_1486499909476_0.9878262851852924"},"directories":{}},"1.0.0-alpha12-alpha.1dc37e8b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.1dc37e8b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.1dc37e8b","_shasum":"cfb64626fb73015c3b7fca7905e535448c2138f9","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"cfb64626fb73015c3b7fca7905e535448c2138f9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.1dc37e8b.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.1dc37e8b.tgz_1486751942461_0.9810049058869481"},"directories":{}},"1.0.0-alpha12-alpha.117c94f8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.117c94f8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.117c94f8","_shasum":"5edca1123b91522a46cfa8316cb3311b1b86b8d6","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"5edca1123b91522a46cfa8316cb3311b1b86b8d6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.117c94f8.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.117c94f8.tgz_1487030548943_0.4424933211412281"},"directories":{}},"1.0.0-alpha12-alpha.373740a8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.373740a8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.373740a8","_shasum":"08559db8ab5e17a8fc57a129d4fa72328496e6e8","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"08559db8ab5e17a8fc57a129d4fa72328496e6e8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.373740a8.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.373740a8.tgz_1487032578632_0.22952314279973507"},"directories":{}},"1.0.0-alpha12-alpha.bdc68bfd":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.bdc68bfd","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.bdc68bfd","_shasum":"a93eb98813a19578547ef648f5ae2d13a8a5d7e0","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"a93eb98813a19578547ef648f5ae2d13a8a5d7e0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.bdc68bfd.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.bdc68bfd.tgz_1487370013325_0.440186568768695"},"directories":{}},"1.0.0-alpha12-alpha.faff3fa9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.faff3fa9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.faff3fa9","_shasum":"2cf92178086b2ac0188c415f1ba1ea00bb7f38ea","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"2cf92178086b2ac0188c415f1ba1ea00bb7f38ea","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.faff3fa9.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.faff3fa9.tgz_1487370372259_0.17229748819954693"},"directories":{}},"1.0.0-alpha12-alpha.a82bd105":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.a82bd105","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.a82bd105","_shasum":"bc3281bd572123e50151d8e6d2c8cd114462716e","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"bc3281bd572123e50151d8e6d2c8cd114462716e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.a82bd105.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.a82bd105.tgz_1487376443973_0.26185544952750206"},"directories":{}},"1.0.0-alpha12-alpha.d452aed2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.d452aed2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.d452aed2","_shasum":"82490837ac6127d3fda31595e6e81a96b329ebcf","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"82490837ac6127d3fda31595e6e81a96b329ebcf","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d452aed2.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d452aed2.tgz_1487617808154_0.3540778076276183"},"directories":{}},"1.0.0-alpha12-alpha.40e6a4d1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.40e6a4d1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.40e6a4d1","_shasum":"a3c1cee58a50e15b2e9626f69c7b7d64f99a5c2d","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"a3c1cee58a50e15b2e9626f69c7b7d64f99a5c2d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.40e6a4d1.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.40e6a4d1.tgz_1487618990130_0.26869487948715687"},"directories":{}},"1.0.0-alpha12-alpha.f4d91ef3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.f4d91ef3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.f4d91ef3","_shasum":"6f3a96c1b086d70ca10db0139e4c6c8c19cfb1ad","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"6f3a96c1b086d70ca10db0139e4c6c8c19cfb1ad","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.f4d91ef3.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.f4d91ef3.tgz_1487621130727_0.2909332672134042"},"directories":{}},"1.0.0-alpha12-alpha.659f61a4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.659f61a4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.659f61a4","_shasum":"5d8b38d0d56645dc3f42ebab442cc9e2e6c466ed","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"5d8b38d0d56645dc3f42ebab442cc9e2e6c466ed","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.659f61a4.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.659f61a4.tgz_1487633023679_0.6029718706849962"},"directories":{}},"1.0.0-alpha12-alpha.e1a3cfed":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.e1a3cfed","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.e1a3cfed","_shasum":"49a84384ec8b1c4ff6a84c08345d6d5723faab6c","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"49a84384ec8b1c4ff6a84c08345d6d5723faab6c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.e1a3cfed.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.e1a3cfed.tgz_1487633362937_0.039889850188046694"},"directories":{}},"1.0.0-alpha12-alpha.70258e9c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.70258e9c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.70258e9c","_shasum":"1e3972ca039a1a1a1e3183a0759285cff00f866c","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"1e3972ca039a1a1a1e3183a0759285cff00f866c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.70258e9c.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.70258e9c.tgz_1487724391771_0.5596584684681147"},"directories":{}},"1.0.0-alpha12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12","_shasum":"0dd78bbe8b5deab1375a1df9ffb5811996b5f618","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"0dd78bbe8b5deab1375a1df9ffb5811996b5f618","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12.tgz_1487725962739_0.5078815019223839"},"directories":{}},"1.0.0-alpha12-alpha.209952c2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.209952c2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.209952c2","_shasum":"91161fe2afc6b4df9475bfa3d6d83b7896119631","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"91161fe2afc6b4df9475bfa3d6d83b7896119631","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.209952c2.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.209952c2.tgz_1487788981297_0.8363226645160466"},"directories":{}},"1.0.0-alpha12-alpha.8f812d13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.8f812d13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.8f812d13","_shasum":"2d7823c4177060474143900064c16619a5c7e704","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"2d7823c4177060474143900064c16619a5c7e704","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.8f812d13.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.8f812d13.tgz_1487790532376_0.384438787586987"},"directories":{}},"1.0.0-alpha12-alpha.10a12536":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.10a12536","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.10a12536","_shasum":"c8887e2f3933889ac63a994724591859b54e60b9","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"c8887e2f3933889ac63a994724591859b54e60b9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.10a12536.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.10a12536.tgz_1487802930858_0.8954295101575553"},"directories":{}},"1.0.0-alpha12-alpha.d82af48f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.d82af48f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.d82af48f","_shasum":"d10dd55918fcac6de155cc93e62d98805de1e9dc","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"d10dd55918fcac6de155cc93e62d98805de1e9dc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d82af48f.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d82af48f.tgz_1488825783870_0.7221067636273801"},"directories":{}},"1.0.0-alpha12-alpha.9a2a3c59":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.9a2a3c59","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.9a2a3c59","_shasum":"e150e1056b35d3195ed00feb7840f8b07af8f871","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"e150e1056b35d3195ed00feb7840f8b07af8f871","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.9a2a3c59.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.9a2a3c59.tgz_1488827182099_0.34912571869790554"},"directories":{}},"1.0.0-alpha12-alpha.72e8aced":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.72e8aced","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.72e8aced","_shasum":"ccd89f3ffc7c3b3f081971c763f895bc9675a35f","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"ccd89f3ffc7c3b3f081971c763f895bc9675a35f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.72e8aced.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.72e8aced.tgz_1488830532476_0.5758208720944822"},"directories":{}},"1.0.0-alpha12-alpha.04c05494":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.04c05494","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.04c05494","_shasum":"2a25bf3f97d0526f8b3ca485da69574fc73e3f4e","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"2a25bf3f97d0526f8b3ca485da69574fc73e3f4e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.04c05494.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.04c05494.tgz_1488832248997_0.8980245687998831"},"directories":{}},"1.0.0-alpha12-alpha.352b3448":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.352b3448","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.352b3448","_shasum":"fca1f03a057cb1f5b20a3cb3b967b15cff37f8cd","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"fca1f03a057cb1f5b20a3cb3b967b15cff37f8cd","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.352b3448.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.352b3448.tgz_1488838700520_0.7903075814247131"},"directories":{}},"1.0.0-alpha12-alpha.f205e4d4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.f205e4d4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.f205e4d4","_shasum":"73999cf2e3673da34552a02a7efb0364b241b7ac","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"73999cf2e3673da34552a02a7efb0364b241b7ac","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.f205e4d4.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.f205e4d4.tgz_1488839164530_0.7701316250022501"},"directories":{}},"1.0.0-alpha12-alpha.3a216f9f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.3a216f9f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.3a216f9f","_shasum":"9a62f30f368e1c0a026fce5c944ead5b22fbeeb6","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9a62f30f368e1c0a026fce5c944ead5b22fbeeb6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3a216f9f.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3a216f9f.tgz_1488922377885_0.9768448772374541"},"directories":{}},"1.0.0-alpha12-alpha.3f98b323":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.3f98b323","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.3f98b323","_shasum":"ce631f33dbaae350870a60e3ad628dcf007787a4","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"ce631f33dbaae350870a60e3ad628dcf007787a4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3f98b323.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3f98b323.tgz_1488943235364_0.46482980344444513"},"directories":{}},"1.0.0-alpha12-alpha.cfc93fc7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.cfc93fc7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.cfc93fc7","_shasum":"48e6d2b2eac927e5d7c16d821efa282e3f7e52bb","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"48e6d2b2eac927e5d7c16d821efa282e3f7e52bb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.cfc93fc7.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.cfc93fc7.tgz_1488944785478_0.740553084295243"},"directories":{}},"1.0.0-alpha12-alpha.e22dfd31":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.e22dfd31","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.e22dfd31","_shasum":"318b4c7b6467cb261a249f01688c99002cba7ae7","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"318b4c7b6467cb261a249f01688c99002cba7ae7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.e22dfd31.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.e22dfd31.tgz_1489435085331_0.24017668748274446"},"directories":{}},"1.0.0-alpha12-alpha.3e72cc6f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.3e72cc6f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.3e72cc6f","_shasum":"cac7340714987c37cd00d19ffc3c19d41c54c80f","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"cac7340714987c37cd00d19ffc3c19d41c54c80f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3e72cc6f.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3e72cc6f.tgz_1489436022463_0.1939737838692963"},"directories":{}},"1.0.0-alpha12-alpha.c8cb2100":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.c8cb2100","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.c8cb2100","_shasum":"8a1dafa755c3f367f973ff2d4a6f1db59c27f3a8","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"8a1dafa755c3f367f973ff2d4a6f1db59c27f3a8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.c8cb2100.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.c8cb2100.tgz_1489444161045_0.3019272272940725"},"directories":{}},"1.0.0-alpha12-alpha.4ba57c84":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.4ba57c84","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.4ba57c84","_shasum":"335b49c563a6888e8b43cb0ecb33e07a493faf2d","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"335b49c563a6888e8b43cb0ecb33e07a493faf2d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4ba57c84.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4ba57c84.tgz_1489518310881_0.506811646046117"},"directories":{}},"1.0.0-alpha12-alpha.a7e9d9c0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.a7e9d9c0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.a7e9d9c0","_shasum":"b20d14e2323a5636c7497b1e68d428d97e3c7007","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"b20d14e2323a5636c7497b1e68d428d97e3c7007","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.a7e9d9c0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.a7e9d9c0.tgz_1489519102855_0.29223341029137373"},"directories":{}},"1.0.0-alpha12-alpha.75167f51":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.75167f51","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.75167f51","_shasum":"3187d731defa3c3f45479f6624a0ca4e19533d05","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"3187d731defa3c3f45479f6624a0ca4e19533d05","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.75167f51.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.75167f51.tgz_1489539862540_0.7689348447602242"},"directories":{}},"1.0.0-alpha12-alpha.4af3700e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.4af3700e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.4af3700e","_shasum":"9d46bfa97b1a371eb11fb659a1946de7721175c2","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9d46bfa97b1a371eb11fb659a1946de7721175c2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4af3700e.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4af3700e.tgz_1489620025076_0.5784530472010374"},"directories":{}},"1.0.0-alpha12-alpha.dfc40de1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.dfc40de1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.dfc40de1","_shasum":"48de41a19dd744aeb84133f42e6ee419b9e4847c","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"48de41a19dd744aeb84133f42e6ee419b9e4847c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.dfc40de1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.dfc40de1.tgz_1489790124796_0.3603234337642789"},"directories":{}},"1.0.0-alpha12-alpha.f32320b1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.f32320b1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.f32320b1","_shasum":"d0d86332a78f6a07c1532dd3d7c9144bda0fbdb0","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"d0d86332a78f6a07c1532dd3d7c9144bda0fbdb0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.f32320b1.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.f32320b1.tgz_1490045707288_0.46844978304579854"},"directories":{}},"1.0.0-alpha12-alpha.547467c5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.547467c5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.547467c5","_shasum":"5219793bf502037b2dd2b72dc25eff2248e65662","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"5219793bf502037b2dd2b72dc25eff2248e65662","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.547467c5.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.547467c5.tgz_1490046494786_0.4174996295478195"},"directories":{}},"1.0.0-alpha12-alpha.3d7a5eb6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.3d7a5eb6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.3d7a5eb6","_shasum":"9ad36af042787bc4150a8f7dec9fe95a56cf4deb","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9ad36af042787bc4150a8f7dec9fe95a56cf4deb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3d7a5eb6.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.3d7a5eb6.tgz_1490060993343_0.838381368201226"},"directories":{}},"1.0.0-alpha12-alpha.b3dbfd2b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.b3dbfd2b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.b3dbfd2b","_shasum":"71d0daf1b6c7b7dfcb733345ac0b8954b54320ff","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"71d0daf1b6c7b7dfcb733345ac0b8954b54320ff","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.b3dbfd2b.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.b3dbfd2b.tgz_1490120517841_0.7114158642943949"},"directories":{}},"1.0.0-alpha12-alpha.4575c38e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.4575c38e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.4575c38e","_shasum":"9d6a1b8961f890c369cc1a6ff458adb7effd95fa","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9d6a1b8961f890c369cc1a6ff458adb7effd95fa","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4575c38e.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4575c38e.tgz_1490127166153_0.1810716651380062"},"directories":{}},"1.0.0-alpha12-alpha.1b1c742b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.1b1c742b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.1b1c742b","_shasum":"997fd625011f5bbafceae8a1f20da509dff2e934","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"997fd625011f5bbafceae8a1f20da509dff2e934","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.1b1c742b.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.1b1c742b.tgz_1490133926001_0.08494635648094118"},"directories":{}},"1.0.0-alpha12-alpha.545e4a03":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.545e4a03","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.545e4a03","_shasum":"9a5ecb8f5edccb25f4c6587c96e9f97f71ae60ef","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9a5ecb8f5edccb25f4c6587c96e9f97f71ae60ef","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.545e4a03.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.545e4a03.tgz_1490134154512_0.33898118999786675"},"directories":{}},"1.0.0-alpha12-alpha.4f30010e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.4f30010e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.4f30010e","_shasum":"aaae7341489e62bf3e72b50ca8f1e524b21317cc","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"aaae7341489e62bf3e72b50ca8f1e524b21317cc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4f30010e.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4f30010e.tgz_1490134340679_0.44866128894500434"},"directories":{}},"1.0.0-alpha12-alpha.e1f27e45":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.e1f27e45","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.e1f27e45","_shasum":"902eca0ea47f7c19cbf282b68c707d44623a037f","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"902eca0ea47f7c19cbf282b68c707d44623a037f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.e1f27e45.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.e1f27e45.tgz_1490293109625_0.6984260219614953"},"directories":{}},"1.0.0-alpha12-alpha.d37d5d32":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.d37d5d32","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.d37d5d32","_shasum":"5ecec0ab9c882847c38545388c31d85733ac0a56","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"5ecec0ab9c882847c38545388c31d85733ac0a56","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d37d5d32.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d37d5d32.tgz_1490399755410_0.2847034733276814"},"directories":{}},"1.0.0-alpha12-alpha.81355cc0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.81355cc0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.81355cc0","_shasum":"dbafc07854c4f5ed15e2e472ee738b084da2b1b6","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"dbafc07854c4f5ed15e2e472ee738b084da2b1b6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.81355cc0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.81355cc0.tgz_1490631115041_0.6622973396442831"},"directories":{}},"1.0.0-alpha12-alpha.dbf1a599":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.dbf1a599","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.dbf1a599","_shasum":"8b77df67f6826ed5f509d9fa353800c3fbf788a4","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"8b77df67f6826ed5f509d9fa353800c3fbf788a4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.dbf1a599.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.dbf1a599.tgz_1490632117876_0.18828283669427037"},"directories":{}},"1.0.0-alpha12-alpha.10141fd4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.10141fd4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.10141fd4","_shasum":"5b818072943b8120573ffbb0e2a1d33f5dff9770","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"5b818072943b8120573ffbb0e2a1d33f5dff9770","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.10141fd4.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.10141fd4.tgz_1490637535303_0.25236033159308136"},"directories":{}},"1.0.0-alpha12-alpha.6e55cfe7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.6e55cfe7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.6e55cfe7","_shasum":"e0ff59355b00c40ba29a802f4fdc93e55e1a1c45","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"e0ff59355b00c40ba29a802f4fdc93e55e1a1c45","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.6e55cfe7.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.6e55cfe7.tgz_1490640001862_0.8082096329890192"},"directories":{}},"1.0.0-alpha12-alpha.d7d6ef64":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.d7d6ef64","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.d7d6ef64","_shasum":"92ff3cd57abc619da8e81e190a2b028b556defaa","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"92ff3cd57abc619da8e81e190a2b028b556defaa","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d7d6ef64.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.d7d6ef64.tgz_1490654304315_0.7120711801107973"},"directories":{}},"1.0.0-alpha12-alpha.dffeaa1f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.dffeaa1f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.dffeaa1f","_shasum":"99cf4dbf68d34fe328498703a02629ea570b9ab5","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"99cf4dbf68d34fe328498703a02629ea570b9ab5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.dffeaa1f.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.dffeaa1f.tgz_1490706912544_0.8756792075000703"},"directories":{}},"1.0.0-alpha12-alpha.c155b956":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.c155b956","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.c155b956","_shasum":"2caf084fac316cb78a919fdd06af57ddbd4cc6d2","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"2caf084fac316cb78a919fdd06af57ddbd4cc6d2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.c155b956.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.c155b956.tgz_1490708363080_0.04878347786143422"},"directories":{}},"1.0.0-alpha12-alpha.80e93d69":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.80e93d69","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.80e93d69","_shasum":"07dc33855f0f1ff1a5790c36f04e164613c8cb0c","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"07dc33855f0f1ff1a5790c36f04e164613c8cb0c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.80e93d69.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.80e93d69.tgz_1490712012787_0.5470307026989758"},"directories":{}},"1.0.0-alpha12-alpha.4e93d2cf":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.4e93d2cf","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.4e93d2cf","_shasum":"28faa5a4aa6e58f83bc98a19c8ae1e64adaad291","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"28faa5a4aa6e58f83bc98a19c8ae1e64adaad291","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4e93d2cf.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.4e93d2cf.tgz_1490727991848_0.18773486628197134"},"directories":{}},"1.0.0-alpha12-alpha.351006cf":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.351006cf","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.1"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.351006cf","_shasum":"0db85a61b00afa74bdf5ad9a50af5bd6ca0e1664","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"0db85a61b00afa74bdf5ad9a50af5bd6ca0e1664","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.351006cf.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.351006cf.tgz_1490739198562_0.2342985551804304"},"directories":{}},"1.0.0-alpha12-alpha.0b4b912a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.0b4b912a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.0b4b912a","_shasum":"99d0d624d87af4503dbf2e41cce38c26813aa907","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"99d0d624d87af4503dbf2e41cce38c26813aa907","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.0b4b912a.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.0b4b912a.tgz_1491863650293_0.6115671414881945"},"directories":{}},"1.0.0-alpha12-alpha.1fdb9004":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.1fdb9004","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.1fdb9004","_shasum":"b1c739f27e22d2ad378536dd6a18e0a835e02e6d","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"b1c739f27e22d2ad378536dd6a18e0a835e02e6d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.1fdb9004.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.1fdb9004.tgz_1491871106893_0.06686699111014605"},"directories":{}},"1.0.0-alpha12-alpha.51e1923f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.51e1923f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.51e1923f","_shasum":"8e62645f5f4b5d4ffd09b4f47d2685e66def1809","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"8e62645f5f4b5d4ffd09b4f47d2685e66def1809","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.51e1923f.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.51e1923f.tgz_1492540884862_0.4761193240992725"},"directories":{}},"1.0.0-alpha12-alpha.571b4bbd":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.571b4bbd","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.571b4bbd","_shasum":"6e560d0fc7df3b69c3ebd02b17554e392132883a","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"6e560d0fc7df3b69c3ebd02b17554e392132883a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.571b4bbd.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.571b4bbd.tgz_1492562234757_0.4192082069348544"},"directories":{}},"1.0.0-alpha12-alpha.c0bba969":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.c0bba969","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.c0bba969","_shasum":"54a4d47a4a872bc9c20a6a0e2f858c9d5b1ad44b","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"54a4d47a4a872bc9c20a6a0e2f858c9d5b1ad44b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.c0bba969.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.c0bba969.tgz_1492634209773_0.8057395094074309"},"directories":{}},"1.0.0-alpha12-alpha.89d880ee":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.89d880ee","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.89d880ee","_shasum":"251a21bd17d34f1b09861638c4b0e894c48fc0af","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"251a21bd17d34f1b09861638c4b0e894c48fc0af","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.89d880ee.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.89d880ee.tgz_1492734641512_0.6721562501043081"},"directories":{}},"1.0.0-alpha12-alpha.b66dd8d3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.b66dd8d3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.b66dd8d3","_shasum":"8c65f036b0704a5ed7fe64dfaabdb3685352ef9f","_from":".","_npmVersion":"4.1.2","_nodeVersion":"7.7.3","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"8c65f036b0704a5ed7fe64dfaabdb3685352ef9f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.b66dd8d3.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.b66dd8d3.tgz_1492735049109_0.197349309688434"},"directories":{}},"1.0.0-alpha12-alpha.577b9e82":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.577b9e82","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.577b9e82","_shasum":"bf138c6ff6261848927c7f3f3af54f82bfa04842","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"bf138c6ff6261848927c7f3f3af54f82bfa04842","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.577b9e82.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.577b9e82.tgz_1492821280306_0.7988650307524949"},"directories":{}},"1.0.0-alpha12-alpha.8370739a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha12-alpha.8370739a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha12-alpha.8370739a","_shasum":"ddc2448a8694866d7ed415cca0e2c6e57ad01b1a","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"ddc2448a8694866d7ed415cca0e2c6e57ad01b1a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha12-alpha.8370739a.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha12-alpha.8370739a.tgz_1492917343601_0.86037991149351"},"directories":{}},"1.0.0-alpha13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13","_shasum":"0959f0fa7d3ee6c8eb8ee3a90a399760e717b16e","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"0959f0fa7d3ee6c8eb8ee3a90a399760e717b16e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13.tgz_1493071759009_0.35469694482162595"},"directories":{}},"1.0.0-alpha13-alpha.c6e3cbb2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.c6e3cbb2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.c6e3cbb2","_shasum":"1078843d615589e4d661d3f478ca56c74073de85","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"1078843d615589e4d661d3f478ca56c74073de85","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.c6e3cbb2.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.c6e3cbb2.tgz_1493235414558_0.20335416751913726"},"directories":{}},"1.0.0-alpha13-alpha.91dbde54":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.91dbde54","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.91dbde54","_shasum":"857a36ca717d55c6327825b490278c86b018b60e","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"857a36ca717d55c6327825b490278c86b018b60e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.91dbde54.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.91dbde54.tgz_1493240929425_0.020295751513913274"},"directories":{}},"1.0.0-alpha13-alpha.ec011f40":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.ec011f40","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.ec011f40","_shasum":"f805a97d2e91bf895647b1ffed92d94f2a3552ac","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"f805a97d2e91bf895647b1ffed92d94f2a3552ac","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.ec011f40.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.ec011f40.tgz_1493254682698_0.7928965913597494"},"directories":{}},"1.0.0-alpha13-alpha.537d11c6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.537d11c6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.537d11c6","_shasum":"55885287b7d45bfe426d1cf505081756f533053c","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"55885287b7d45bfe426d1cf505081756f533053c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.537d11c6.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.537d11c6.tgz_1493266284462_0.9720710858236998"},"directories":{}},"1.0.0-alpha13-alpha.0189ea42":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.0189ea42","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.4","bluebird":"^3.4.7","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.3","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.18.0","babel-plugin-transform-async-to-generator":"^6.16.0","babel-plugin-transform-object-rest-spread":"^6.20.2","babel-preset-env":"^1.1.8","babel-runtime":"^6.20.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.0189ea42","_shasum":"194dbe9d429a6712994982c637e43a226e1159ce","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"194dbe9d429a6712994982c637e43a226e1159ce","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.0189ea42.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.0189ea42.tgz_1493418568764_0.12214521854184568"},"directories":{}},"1.0.0-alpha13-alpha.215cabc2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.215cabc2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.215cabc2","_shasum":"fc8101d385cd13b915a1024870598f5eb4deea06","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"fc8101d385cd13b915a1024870598f5eb4deea06","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.215cabc2.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.215cabc2.tgz_1493679727065_0.11034141364507377"},"directories":{}},"1.0.0-alpha13-alpha.526805ab":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.526805ab","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.526805ab","_shasum":"65e55ab46cc125ebfb89a5b50bf651d8c37ef36c","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"65e55ab46cc125ebfb89a5b50bf651d8c37ef36c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.526805ab.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.526805ab.tgz_1493849850065_0.41986556188203394"},"directories":{}},"1.0.0-alpha13-alpha.0f0222b8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.0f0222b8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.0f0222b8","_shasum":"9fc3b34d8befc1e0c56a4855b055983e1cacdd7f","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9fc3b34d8befc1e0c56a4855b055983e1cacdd7f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.0f0222b8.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.0f0222b8.tgz_1493914158987_0.2579345179256052"},"directories":{}},"1.0.0-alpha13-alpha.7d186994":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.7d186994","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.7d186994","_shasum":"d1414824c17002cf9e043ec25bbe0ede3f7f66e2","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"d1414824c17002cf9e043ec25bbe0ede3f7f66e2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.7d186994.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.7d186994.tgz_1493915381893_0.5475499460007995"},"directories":{}},"1.0.0-alpha13-alpha.a3ef328b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.a3ef328b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.a3ef328b","_shasum":"4cae7add72c3c0b35c6ae2356c32e90efa135bf6","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"4cae7add72c3c0b35c6ae2356c32e90efa135bf6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.a3ef328b.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.a3ef328b.tgz_1493927514452_0.9950372080784291"},"directories":{}},"1.0.0-alpha13-alpha.84bd4b24":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.84bd4b24","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.84bd4b24","_shasum":"491e0527ac904bd0ba00fd865a7bbdea2ed4c72d","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"491e0527ac904bd0ba00fd865a7bbdea2ed4c72d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.84bd4b24.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.84bd4b24.tgz_1493930006405_0.019619782455265522"},"directories":{}},"1.0.0-alpha13-alpha.7efda7f0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.7efda7f0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.7efda7f0","_shasum":"9fb4c0355494dc10f652fe4a7e5f1c5522dbd32d","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9fb4c0355494dc10f652fe4a7e5f1c5522dbd32d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.7efda7f0.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.7efda7f0.tgz_1493938992621_0.3748266673646867"},"directories":{}},"1.0.0-alpha13-alpha.435e0178":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.435e0178","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.435e0178","_shasum":"9d78aa7a57f8351cc3a3d28a78f496f252c2d9f2","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9d78aa7a57f8351cc3a3d28a78f496f252c2d9f2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.435e0178.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.435e0178.tgz_1494008766151_0.9784843490924686"},"directories":{}},"1.0.0-alpha13-alpha.e4457d15":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.e4457d15","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.e4457d15","_shasum":"3388bedb26c63b9b29bae372ecb680e5dc4dbc1d","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"3388bedb26c63b9b29bae372ecb680e5dc4dbc1d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.e4457d15.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.e4457d15.tgz_1494012940826_0.44281577970832586"},"directories":{}},"1.0.0-alpha13-alpha.43a3774e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha13-alpha.43a3774e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha13-alpha.43a3774e","_shasum":"762165d0529cc7d8c91a381d3d11a5b3ce4fbbd0","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"762165d0529cc7d8c91a381d3d11a5b3ce4fbbd0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha13-alpha.43a3774e.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha13-alpha.43a3774e.tgz_1494030734863_0.11929939803667367"},"directories":{}},"1.0.0-alpha14":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14","_shasum":"8c3e6e2f378bcfd6678d9bea243f2816b7d8b03e","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"8c3e6e2f378bcfd6678d9bea243f2816b7d8b03e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14.tgz_1494033494507_0.32612089812755585"},"directories":{}},"1.0.0-alpha14-alpha.3145bea2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.3145bea2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.3145bea2","_shasum":"634f99c18dc7d57e1ad161652d1f74490f954d2d","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"634f99c18dc7d57e1ad161652d1f74490f954d2d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.3145bea2.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.3145bea2.tgz_1494264184532_0.9840303077362478"},"directories":{}},"1.0.0-alpha14-alpha.e5097827":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.e5097827","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.e5097827","_shasum":"9dac28c2303c44ded36d72c4bfec3fb3dc60e68c","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"9dac28c2303c44ded36d72c4bfec3fb3dc60e68c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.e5097827.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.e5097827.tgz_1494400025570_0.5270396820269525"},"directories":{}},"1.0.0-alpha14-alpha.5f9232df":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.5f9232df","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.5f9232df","_shasum":"12fe995a0faa56a91633e3d2e1d2e0f9e405e921","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"12fe995a0faa56a91633e3d2e1d2e0f9e405e921","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.5f9232df.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.5f9232df.tgz_1494513909241_0.3201656292658299"},"directories":{}},"1.0.0-alpha14-alpha.48e2735c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.48e2735c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.48e2735c","_shasum":"ade53c52737ec25b2455e102ef359441bf20027d","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"ade53c52737ec25b2455e102ef359441bf20027d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.48e2735c.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.48e2735c.tgz_1494528243007_0.264316646149382"},"directories":{}},"1.0.0-alpha14-alpha.42f0e16a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.42f0e16a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.42f0e16a","_shasum":"5ab11faf3a2bd139e3e036405e328fb49b833f23","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"5ab11faf3a2bd139e3e036405e328fb49b833f23","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.42f0e16a.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.42f0e16a.tgz_1494528904930_0.2968352222815156"},"directories":{}},"1.0.0-alpha14-alpha.1ebda6e4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.1ebda6e4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.1ebda6e4","_shasum":"6fcc8694f2ebc767a11066f83cbd55ec74d7968c","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"6fcc8694f2ebc767a11066f83cbd55ec74d7968c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.1ebda6e4.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.1ebda6e4.tgz_1494529922409_0.31945543829351664"},"directories":{}},"1.0.0-alpha14-alpha.a4a50ee4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.a4a50ee4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.a4a50ee4","_shasum":"0f6017233eef745e93824def5c5d998fc8cf41a8","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"0f6017233eef745e93824def5c5d998fc8cf41a8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.a4a50ee4.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.a4a50ee4.tgz_1494531152438_0.8999173860065639"},"directories":{}},"1.0.0-alpha14-alpha.6611f24e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.6611f24e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.6611f24e","_shasum":"92529050ac158b6b7ab9e70ce0d2cab33ce144c0","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"92529050ac158b6b7ab9e70ce0d2cab33ce144c0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.6611f24e.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.6611f24e.tgz_1494542044556_0.08782637468539178"},"directories":{}},"1.0.0-alpha14-alpha.ac7022a4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha14-alpha.ac7022a4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha14-alpha.ac7022a4","_shasum":"247e5f728faa022bc5c244233288a8c92987c9fa","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"247e5f728faa022bc5c244233288a8c92987c9fa","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha14-alpha.ac7022a4.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha14-alpha.ac7022a4.tgz_1494545965726_0.9592246890533715"},"directories":{}},"1.0.0-alpha15":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15","_shasum":"21e88e298106e01de177c1e31926da49aae60cb4","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"21e88e298106e01de177c1e31926da49aae60cb4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15.tgz_1494925965021_0.6154560386203229"},"directories":{}},"1.0.0-alpha15-alpha.6c40594a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.6c40594a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.6c40594a","_shasum":"d0c846cdd4323e7ba3096ce624a3f6a47352566a","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"d0c846cdd4323e7ba3096ce624a3f6a47352566a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.6c40594a.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.6c40594a.tgz_1494942928728_0.19468719931319356"},"directories":{}},"1.0.0-alpha15-alpha.17ca92e9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.17ca92e9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.17ca92e9","_shasum":"ad1ade474992c164ae168a0f0302e9df730b193a","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"dist":{"shasum":"ad1ade474992c164ae168a0f0302e9df730b193a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.17ca92e9.tgz"},"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.17ca92e9.tgz_1494955792241_0.7773729169275612"},"directories":{}},"1.0.0-alpha15-alpha.7211d781":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.7211d781","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.7211d781","_shasum":"780defcbcd173c0e7cb286f169a931a85a1d61fb","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"780defcbcd173c0e7cb286f169a931a85a1d61fb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.7211d781.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.7211d781.tgz_1495020817708_0.3829904170706868"},"directories":{}},"1.0.0-alpha15-alpha.11f194aa":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.11f194aa","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.11f194aa","_shasum":"db8d83d44cbeb1b816eab8c0f66390682ec6a5fd","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"db8d83d44cbeb1b816eab8c0f66390682ec6a5fd","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.11f194aa.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.11f194aa.tgz_1495124523398_0.5940284996759146"},"directories":{}},"1.0.0-alpha15-alpha.62fcc2e1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.62fcc2e1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.62fcc2e1","_shasum":"147750b49063c9bef5e2fed5dce7a97ad5e4da80","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"147750b49063c9bef5e2fed5dce7a97ad5e4da80","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.62fcc2e1.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.62fcc2e1.tgz_1495275095471_0.3432503389194608"},"directories":{}},"1.0.0-alpha15-alpha.336b6aa8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.336b6aa8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.336b6aa8","_shasum":"12152e06268667f3840c54e3f342d28226b58351","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"12152e06268667f3840c54e3f342d28226b58351","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.336b6aa8.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.336b6aa8.tgz_1495462468168_0.8192962193861604"},"directories":{}},"1.0.0-alpha15-alpha.6ffaa855":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.6ffaa855","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.6ffaa855","_shasum":"81b9f2f8e41120cbe6d1e5a1304901c4a90e8185","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"81b9f2f8e41120cbe6d1e5a1304901c4a90e8185","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.6ffaa855.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.6ffaa855.tgz_1495463391115_0.6203073495998979"},"directories":{}},"1.0.0-alpha15-alpha.14012332":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.14012332","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.14012332","_shasum":"9796d76812f321a238082cd54206433282da02b9","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"9796d76812f321a238082cd54206433282da02b9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.14012332.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.14012332.tgz_1495494355527_0.5224584292154759"},"directories":{}},"1.0.0-alpha15-alpha.94fac7a9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.94fac7a9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.94fac7a9","_shasum":"12c05651efbd87658354fb460e6c63e16f55c953","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"12c05651efbd87658354fb460e6c63e16f55c953","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.94fac7a9.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.94fac7a9.tgz_1495542426916_0.7636280502192676"},"directories":{}},"1.0.0-alpha15-alpha.330d917d":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.330d917d","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.330d917d","_shasum":"00a50330dcee803a27439f3777b4ac971e1d6321","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"00a50330dcee803a27439f3777b4ac971e1d6321","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.330d917d.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.330d917d.tgz_1495561370384_0.8636685737874359"},"directories":{}},"1.0.0-alpha15-alpha.4784b06f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha15-alpha.4784b06f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha15-alpha.4784b06f","_shasum":"8954037390223349f3ec3cf12ad55bd042456a03","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"8954037390223349f3ec3cf12ad55bd042456a03","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha15-alpha.4784b06f.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha15-alpha.4784b06f.tgz_1495737603926_0.761334870941937"},"directories":{}},"1.0.0-alpha16":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16","_shasum":"fcb2d9667119b770dbf47836910939b0a91f0d7a","_from":".","_npmVersion":"4.2.0","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"fcb2d9667119b770dbf47836910939b0a91f0d7a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16.tgz_1495791025110_0.8849631967023015"},"directories":{}},"1.0.0-alpha16-alpha.c28a693a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.c28a693a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.c28a693a","_shasum":"b6b0f3ec5998ac8e54fbdb194439521c3425653e","_from":".","_npmVersion":"4.6.1","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"b6b0f3ec5998ac8e54fbdb194439521c3425653e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.c28a693a.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.c28a693a.tgz_1495897244715_0.9848093257751316"},"directories":{}},"1.0.0-alpha16-alpha.0e39282b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.0e39282b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.0e39282b","_shasum":"a894d4c828e6bbf63f59a7e56f047e6a0efb9328","_from":".","_npmVersion":"4.6.1","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"a894d4c828e6bbf63f59a7e56f047e6a0efb9328","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.0e39282b.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.0e39282b.tgz_1496108865045_0.21039217710494995"},"directories":{}},"1.0.0-alpha16-alpha.b47e49cb":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.b47e49cb","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.b47e49cb","_shasum":"efb7d81b5352603786a618f9f929689806f47bb1","_from":".","_npmVersion":"4.6.1","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"efb7d81b5352603786a618f9f929689806f47bb1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.b47e49cb.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.b47e49cb.tgz_1496117422187_0.20738010597415268"},"directories":{}},"1.0.0-alpha16-alpha.a48b771d":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.a48b771d","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.a48b771d","_shasum":"3b01b6c54a0e163f72bc65149869d4b2115ba243","_from":".","_npmVersion":"4.6.1","_nodeVersion":"7.8.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"3b01b6c54a0e163f72bc65149869d4b2115ba243","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.a48b771d.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.a48b771d.tgz_1496123962885_0.18892351677641273"},"directories":{}},"1.0.0-alpha16-alpha.102adc51":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.102adc51","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.102adc51","_npmVersion":"5.0.0","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-ZtvxUYDNlStuPcLNQOfgJJu9BWdaSR3K74T51ykmnPJoaaq2F82jhkXNaOJfnqU+cJbWnJ+3Yp1TJ8CxqrsM3Q==","shasum":"a5e778c89a8c84283f0e91cf3804abd3d30b469e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.102adc51.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.102adc51.tgz_1496198271957_0.5696155307814479"},"directories":{}},"1.0.0-alpha16-alpha.d918ccdc":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.d918ccdc","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.d918ccdc","_npmVersion":"5.0.0","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-Wi/muKBoUwBOh4thCubV040UzrjKDNE7G+5UnvDK4n8qZuRKlTMRo0Qcfu8BqHbeMdO/DbcPBuxTBw8AKmGCnw==","shasum":"cb633607ddf11399e641f1bec481ba120c939508","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.d918ccdc.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.d918ccdc.tgz_1496333808045_0.6605657283216715"},"directories":{}},"1.0.0-alpha16-alpha.7b3bcd50":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.7b3bcd50","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.7b3bcd50","_npmVersion":"5.0.0","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-RJj3/StQTXLDOcIySgBslDlDSrht7L65nF0jbWBwh/L1HQ6NcbcQV72xm7ZJgDNuy7wzu7kRvPUUS+9itpQezg==","shasum":"aeebf9c32ee6cc3bc7a34c3d94f36a761e90fa44","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.7b3bcd50.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.7b3bcd50.tgz_1496342673131_0.2556498823687434"},"directories":{}},"1.0.0-alpha16-alpha.4482ff94":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha16-alpha.4482ff94","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha16-alpha.4482ff94","_npmVersion":"5.0.0","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-lLmLal2avXEdP40WIvmoJoXkKBftYDX6av+/jbykzBZr5X55URBtVN35Y5jrzUqSfniMQ8dho5g2NCMXPmoiBQ==","shasum":"7d1940a371b8b4a44419934fc12a39fa391e38de","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha16-alpha.4482ff94.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha16-alpha.4482ff94.tgz_1496353065049_0.2770546132232994"},"directories":{}},"1.0.0-alpha17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","queue":"^4.0.1","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha17","_npmVersion":"5.0.0","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-IvzExF9392/ySw75Snc3xGgYCEphmyPClWhE+K5t34wE0bULlGeHvEthXdv63aW/gE/5O0FFjmSTTR8z6/z5qA==","shasum":"6ae7a04178fd898b258e623112c5672923409b63","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha17.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha17.tgz_1496429095399_0.7897134241648018"},"directories":{}},"1.0.0-alpha18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha18","_npmVersion":"5.0.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-CU3DMPyDANKEQQUVmy7Wy8Vf2J3Vcgw0l3FvY8j1L52ft9nvs0fGo8DyjSwqdauEMWKkbrhrzlzF0v32ULYfJA==","shasum":"2d47fafa5570bd45197551dc37262adecd480c6e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha18.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha18.tgz_1496435548664_0.03588276635855436"},"directories":{}},"1.0.0-alpha19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19","_npmVersion":"5.0.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-tbBrApSbPC7xzJH1cTNNtda2TzGlqTb8XzIxi2gFVJj3kiin3Z3V9TL3k2vSbva8DgZ2NFNCQ/z4epyM8Wkl3g==","shasum":"33227100a4ee3adcb209692ec05e158f39ecfaed","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19.tgz_1496455347645_0.12235294934362173"},"directories":{}},"1.0.0-alpha19-alpha.81f2510a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19-alpha.81f2510a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19-alpha.81f2510a","_npmVersion":"5.0.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-PuHh2rv7L9150yYUI1WsYhm93Hdd+YcmStOflN/yHHAIV3IVmMqIT1OlAdZfeinVngbPNWEvVCBSn9gAWNKmcw==","shasum":"54527c44e6e35476b92f1c1c0952f1fddec18f22","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19-alpha.81f2510a.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19-alpha.81f2510a.tgz_1496457404926_0.3859647810459137"},"directories":{}},"1.0.0-alpha19-alpha.a2f3e881":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19-alpha.a2f3e881","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19-alpha.a2f3e881","_npmVersion":"5.0.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-JDVYPU3z0A8nZvhybgqxqgbKnRKG6qakyww47OjuKAfm2yKUYYjGp1X9wDxVa9E7jpXDxH3kJyoz0cT0DzV+uw==","shasum":"1111a95739ee81212b7e2b446d02713430948221","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19-alpha.a2f3e881.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19-alpha.a2f3e881.tgz_1496504278630_0.51963309221901"},"directories":{}},"1.0.0-alpha19-alpha.3c6183a4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19-alpha.3c6183a4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19-alpha.3c6183a4","_npmVersion":"5.0.2","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-0lZWbWiw0e7XPFreT5kakADIAE+WqT7eyAO8fwubU4Y700VEWhxH5KdldANEBZ9SqAd4pBC3jwWo1ZdYovSKdQ==","shasum":"9253c6e2a76d0d68424c3d125fd0860cd1206350","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19-alpha.3c6183a4.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19-alpha.3c6183a4.tgz_1496518743928_0.4884890294633806"},"directories":{}},"1.0.0-alpha19-alpha.62172e76":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19-alpha.62172e76","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19-alpha.62172e76","_npmVersion":"5.0.2","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-/hOtTorP6IaTifRbB6H2BboukIz0BNBAEfoP0NnamJOwQBVZNRfrAeY4/l6D4O6GRflHykxPNsks04Y/xCjWGg==","shasum":"dfb1411e9b832d4173a0b13f6d37a19959c54847","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19-alpha.62172e76.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19-alpha.62172e76.tgz_1496532837240_0.5113404954317957"},"directories":{}},"1.0.0-alpha19-alpha.dcf76508":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19-alpha.dcf76508","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19-alpha.dcf76508","_npmVersion":"5.0.2","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-KhCy5HVzi+XqsIqsuCARI2NrPNjUmHywoCXLC5ie+f5fS5eGs885B2E/QOyRectOs1lVBd4TZ51nxLaaYGQsuw==","shasum":"62ec706e6b461b496a7f0c1a007f695e43a4f0a3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19-alpha.dcf76508.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19-alpha.dcf76508.tgz_1496704638185_0.7421857207082212"},"directories":{}},"1.0.0-alpha19-alpha.0ae0ee2a":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha19-alpha.0ae0ee2a","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha19-alpha.0ae0ee2a","_npmVersion":"5.0.2","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-+wyxuM0EoXZtee9uTvOfa47S6KBsa/feNrzSmC4J8TWR86kFUy+mvHQIbvaCuPI51Y8/iMZlCCgLxDFRxWDdnA==","shasum":"a55c6bbf81f7ec23ad3ad4b04790cfe18e7f8963","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha19-alpha.0ae0ee2a.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha19-alpha.0ae0ee2a.tgz_1496706720376_0.017605457920581102"},"directories":{}},"1.0.0-alpha.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22","_shasum":"fe980ab21db10ebe0105cc909a3fe41766b7c604","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"fe980ab21db10ebe0105cc909a3fe41766b7c604","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22.tgz_1496896074794_0.6406723929103464"},"directories":{}},"1.0.0-alpha.22-alpha.19f7c727":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22-alpha.19f7c727","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22-alpha.19f7c727","_shasum":"cf93b140415ac708b5a93f1000ed0cb3d76905db","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"cf93b140415ac708b5a93f1000ed0cb3d76905db","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.19f7c727.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.19f7c727.tgz_1497116409042_0.4623408252373338"},"directories":{}},"1.0.0-alpha.22-alpha.acbc22e8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22-alpha.acbc22e8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22-alpha.acbc22e8","_shasum":"47cffc85f1b2ae3864ef4f36b0bac8b65f214a64","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"47cffc85f1b2ae3864ef4f36b0bac8b65f214a64","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.acbc22e8.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.acbc22e8.tgz_1497134245020_0.6417117721866816"},"directories":{}},"1.0.0-alpha.22-alpha.0be09b66":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22-alpha.0be09b66","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22-alpha.0be09b66","_shasum":"c5c60377b53686ced554568d0f1b1f39ee522f75","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"c5c60377b53686ced554568d0f1b1f39ee522f75","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.0be09b66.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.0be09b66.tgz_1497143683706_0.3537850263528526"},"directories":{}},"1.0.0-alpha.22-alpha.96b0b727":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22-alpha.96b0b727","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22-alpha.96b0b727","_shasum":"f13ef9faa35927e55b90c12e2ccd8d323fc9322c","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"f13ef9faa35927e55b90c12e2ccd8d323fc9322c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.96b0b727.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.96b0b727.tgz_1497144077600_0.49040559749118984"},"directories":{}},"1.0.0-alpha.22-alpha.2d2aa0ef":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22-alpha.2d2aa0ef","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22-alpha.2d2aa0ef","_shasum":"b20184021fb1b2fa8724eee5aedca1471cc32c90","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"b20184021fb1b2fa8724eee5aedca1471cc32c90","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.2d2aa0ef.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.2d2aa0ef.tgz_1497317155268_0.5290196649730206"},"directories":{}},"1.0.0-alpha.22-alpha.18f02e94":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.22-alpha.18f02e94","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.22-alpha.18f02e94","_shasum":"564db189a43f087d0f5b8daf700421ded737cd99","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"564db189a43f087d0f5b8daf700421ded737cd99","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.18f02e94.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.22-alpha.18f02e94.tgz_1497380843828_0.5102349030785263"},"directories":{}},"1.0.0-alpha.23":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-alpha.23","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-alpha.23","_shasum":"0fd93f3e14465616db19b8bb340f33ef7b1d471b","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.0.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"0fd93f3e14465616db19b8bb340f33ef7b1d471b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-alpha.23.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-alpha.23.tgz_1497400212851_0.1366953426040709"},"directories":{}},"1.0.0-beta.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.1","_npmVersion":"5.0.3","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-v13BoOTskz9lYA6BOIq0W/7BBdE3U6YjJW0YJdd1bk36ivg6a7EMlZUev19u0RWlkF6umDMg1K77Oq5SreQS3g==","shasum":"d7ff712227e9ee5a8a72860769f29a62a1691522","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.1.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.1.tgz_1497558351480_0.26252559083513916"},"directories":{}},"1.0.0-beta.1-alpha.82c23a65":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.1-alpha.82c23a65","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.1-alpha.82c23a65","_npmVersion":"5.0.3","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-2zuc6+zq7VyDv5qzYkkvC7eE4rLV7H8Vba5SedlnTQAig4r4Ws5+nvY0UUxJbFILW94phx4i+Q3kGrCg/7JqqA==","shasum":"9c0a4683227de2443616b98ff498fc4a3c784f96","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.1-alpha.82c23a65.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.1-alpha.82c23a65.tgz_1497629832585_0.33443564735352993"},"directories":{}},"1.0.0-beta.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.2","_npmVersion":"5.0.3","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-LNsnV5JqPD0yRdr44j06iBBulOxcL4qesuDaDzD2oc8tc6oQwgMoqV59l+YDigbQXdiDVlc1lU812MXVbxqARg==","shasum":"f16111c1aaa1f22ad5cb9c9d2de470ffba3dfb99","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.2.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.2.tgz_1497636027584_0.007820872589945793"},"directories":{}},"1.0.0-beta.2-alpha.4bef9d1e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.2-alpha.4bef9d1e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.2-alpha.4bef9d1e","_shasum":"a9ca42a46b9b30c692b505291972ab1affe914ea","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"a9ca42a46b9b30c692b505291972ab1affe914ea","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.2-alpha.4bef9d1e.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.2-alpha.4bef9d1e.tgz_1497766825449_0.8612742908298969"},"directories":{}},"1.0.0-beta.2-alpha.a1195641":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.2-alpha.a1195641","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.2-alpha.a1195641","_shasum":"d547a432cb4fc51a405ce42982809ae45a06291b","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"d547a432cb4fc51a405ce42982809ae45a06291b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.2-alpha.a1195641.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.2-alpha.a1195641.tgz_1497930633191_0.3723350304644555"},"directories":{}},"1.0.0-beta.2-alpha.38d760b4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.2-alpha.38d760b4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","qs":"^6.3.0","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.2-alpha.38d760b4","_shasum":"9c83b195900c0e714720135f836bb40bc31692a7","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"9c83b195900c0e714720135f836bb40bc31692a7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.2-alpha.38d760b4.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.2-alpha.38d760b4.tgz_1498005352527_0.8306505056098104"},"directories":{}},"1.0.0-beta.3-alpha.404a27c8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.3-alpha.404a27c8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.3-alpha.404a27c8","_shasum":"5bce3282450bd8e59c26cff3c4d0da78fa5a60d5","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"5bce3282450bd8e59c26cff3c4d0da78fa5a60d5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.3-alpha.404a27c8.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.3-alpha.404a27c8.tgz_1498095496096_0.6777133722789586"},"directories":{}},"1.0.0-beta.3-alpha.1cb4cf8b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.3-alpha.1cb4cf8b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.3-alpha.1cb4cf8b","_shasum":"953e6cb9d57dd9b1aea988a9a8a83e914b2a0dc5","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"953e6cb9d57dd9b1aea988a9a8a83e914b2a0dc5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.3-alpha.1cb4cf8b.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.3-alpha.1cb4cf8b.tgz_1498110096995_0.3546772648114711"},"directories":{}},"1.0.0-beta.3-alpha.15f49df0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.3-alpha.15f49df0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.3-alpha.15f49df0","_shasum":"bc72b78d49bfecd6c83036a1f422e50644e6610a","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"bc72b78d49bfecd6c83036a1f422e50644e6610a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.3-alpha.15f49df0.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.3-alpha.15f49df0.tgz_1498147305539_0.8433653141837567"},"directories":{}},"1.0.0-beta.3-alpha.a694e4ac":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.3-alpha.a694e4ac","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.3-alpha.a694e4ac","_shasum":"66b3d1b8cb108a619141f6af453ee36cc1eb0787","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"66b3d1b8cb108a619141f6af453ee36cc1eb0787","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.3-alpha.a694e4ac.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.3-alpha.a694e4ac.tgz_1498148343580_0.9979335751850158"},"directories":{}},"1.0.0-beta.3-alpha.590c01b7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.3-alpha.590c01b7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.3-alpha.590c01b7","_shasum":"2792e104445ceb20a3e107a523e2beed522ede64","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"2792e104445ceb20a3e107a523e2beed522ede64","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.3-alpha.590c01b7.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.3-alpha.590c01b7.tgz_1498176413363_0.7386345665436238"},"directories":{}},"1.0.0-beta.3-alpha.9451bcd6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.3-alpha.9451bcd6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.3-alpha.9451bcd6","_shasum":"601d5a5719e563c43ab3c027e4db856a03dafb6c","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"601d5a5719e563c43ab3c027e4db856a03dafb6c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.3-alpha.9451bcd6.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.3-alpha.9451bcd6.tgz_1498182340168_0.7945916333701462"},"directories":{}},"1.0.0-beta.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.4","_shasum":"135c5295fe4363373373832c9b976f5d40395305","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"135c5295fe4363373373832c9b976f5d40395305","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.4.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.4.tgz_1498259536728_0.6295951108913869"},"directories":{}},"1.0.0-beta.4-alpha.83182d4c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.4-alpha.83182d4c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.4-alpha.83182d4c","_shasum":"d58f1f8296f6c9190cf82656863fcce005ad2f72","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"d58f1f8296f6c9190cf82656863fcce005ad2f72","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.4-alpha.83182d4c.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.4-alpha.83182d4c.tgz_1498263585444_0.47366460016928613"},"directories":{}},"1.0.0-beta.5-alpha.c64a932e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.5-alpha.c64a932e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.5-alpha.c64a932e","_shasum":"6b8e2efa7579e6415be7a32b4ed9e032bcd39812","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"6b8e2efa7579e6415be7a32b4ed9e032bcd39812","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.5-alpha.c64a932e.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.5-alpha.c64a932e.tgz_1498530821100_0.31268273782916367"},"directories":{}},"1.0.0-beta.5-alpha.1a65ba72":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.5-alpha.1a65ba72","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.5-alpha.1a65ba72","_shasum":"59de8188910964b15759819580eddd59e9c83821","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"59de8188910964b15759819580eddd59e9c83821","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.5-alpha.1a65ba72.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.5-alpha.1a65ba72.tgz_1498536919751_0.04125949880108237"},"directories":{}},"1.0.0-beta.5-alpha.fb30fcd6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.5-alpha.fb30fcd6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.5-alpha.fb30fcd6","_shasum":"6446d5845d7f4e473c19e0fed9285b1b9a0b42c3","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"6446d5845d7f4e473c19e0fed9285b1b9a0b42c3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.5-alpha.fb30fcd6.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.5-alpha.fb30fcd6.tgz_1498710028230_0.8784259839449078"},"directories":{}},"1.0.0-beta.5-alpha.08bddd92":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.5-alpha.08bddd92","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.5-alpha.08bddd92","_shasum":"e9a9c9341a58591500191e54285e65a6053121bb","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"e9a9c9341a58591500191e54285e65a6053121bb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.5-alpha.08bddd92.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.5-alpha.08bddd92.tgz_1498864265060_0.32667307974770665"},"directories":{}},"1.0.0-beta.5-alpha.c16c2913":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.5-alpha.c16c2913","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.5-alpha.c16c2913","_shasum":"594e908b743296e3bf0d21561c99438e51c13060","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"594e908b743296e3bf0d21561c99438e51c13060","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.5-alpha.c16c2913.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.5-alpha.c16c2913.tgz_1498936918049_0.6218721475452185"},"directories":{}},"1.0.0-beta.5-alpha.dfde8a10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.5-alpha.dfde8a10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.5-alpha.dfde8a10","_shasum":"88d7273dcbfcc4bd15ad957b7eebdf43ffaa2b79","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"88d7273dcbfcc4bd15ad957b7eebdf43ffaa2b79","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.5-alpha.dfde8a10.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.5-alpha.dfde8a10.tgz_1498964720563_0.1443440665025264"},"directories":{}},"1.0.0-beta.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.6","_shasum":"a2a7f60f9a2faf15a6543706e8123196b90197c0","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"a2a7f60f9a2faf15a6543706e8123196b90197c0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.6.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.6.tgz_1498977781670_0.13067908817902207"},"directories":{}},"1.0.0-beta.6-alpha.320adb17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.6-alpha.320adb17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.6-alpha.320adb17","_shasum":"2932eaa6541d3034c130bf3fc1e68c10bfb873df","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"2932eaa6541d3034c130bf3fc1e68c10bfb873df","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.6-alpha.320adb17.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.6-alpha.320adb17.tgz_1499125253877_0.6000293444376439"},"directories":{}},"1.0.0-beta.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.7","_shasum":"81ab439f20bd8fcd38e353d471cea31b022944f7","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"81ab439f20bd8fcd38e353d471cea31b022944f7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.7.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.7.tgz_1499127153050_0.7823701261077076"},"directories":{}},"1.0.0-beta.7-alpha.60d2ce84":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.7-alpha.60d2ce84","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.7-alpha.60d2ce84","_shasum":"bae150b9ab43e1a50cae594ad0389bbbcef771e2","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"bae150b9ab43e1a50cae594ad0389bbbcef771e2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.7-alpha.60d2ce84.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.7-alpha.60d2ce84.tgz_1499210676103_0.8872961250599474"},"directories":{}},"1.0.0-beta.7-alpha.7dc2afa2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.7-alpha.7dc2afa2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.7-alpha.7dc2afa2","_shasum":"ea04c1f995e1059717a7d310b478ca7e9653c22f","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"ea04c1f995e1059717a7d310b478ca7e9653c22f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.7-alpha.7dc2afa2.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.7-alpha.7dc2afa2.tgz_1499282855040_0.2500523424241692"},"directories":{}},"1.0.0-beta.7-alpha.594d939c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0-beta.7-alpha.594d939c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0-beta.7-alpha.594d939c","_shasum":"e79be014ffe67d2589ca28b0dcfd79467c333e77","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"e79be014ffe67d2589ca28b0dcfd79467c333e77","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0-beta.7-alpha.594d939c.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0-beta.7-alpha.594d939c.tgz_1499358609313_0.5342128660995513"},"directories":{}},"1.0.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.0","_shasum":"d3ac7712d286e64ad760e84c96489f5ab9a5f6d8","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"d3ac7712d286e64ad760e84c96489f5ab9a5f6d8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.0.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.0.tgz_1499370209776_0.9386909087188542"},"directories":{}},"1.0.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.0.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.4.1","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.0.1","_shasum":"b961f9783815557edf67d862c82eaddfe35337e9","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"b961f9783815557edf67d862c82eaddfe35337e9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.0.1.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.0.1.tgz_1499370536570_0.11476242169737816"},"directories":{}},"1.3.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.3.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.3.0","_shasum":"c20421bdc80346ced11a79dd7b1bb4ae6c878019","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"c20421bdc80346ced11a79dd7b1bb4ae6c878019","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.3.0.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.3.0.tgz_1500445915052_0.4155368770007044"},"directories":{}},"1.4.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.4.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.4.1","_shasum":"3d397862a86e682baa0eb8bf93bb3b7102b08333","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"3d397862a86e682baa0eb8bf93bb3b7102b08333","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.4.1.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.4.1.tgz_1501090431074_0.608601052314043"},"directories":{}},"1.5.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.5.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.5.0","_shasum":"e7112384c37548180feb42e850530c137189dfbf","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"e7112384c37548180feb42e850530c137189dfbf","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.5.0.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.5.0.tgz_1501183659294_0.12415931955911219"},"directories":{}},"1.6.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir .","watch":"babel -w src --out-dir ."},"_id":"gatsby-plugin-sharp@1.6.0","_shasum":"430f18acd7478088b4695b85939d38d48d6acf87","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"430f18acd7478088b4695b85939d38d48d6acf87","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.0.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.0.tgz_1501869519750_0.3901837815064937"},"directories":{}},"1.6.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.1","_shasum":"102da228e0f13fcf6bed4ed71d8be3d29d9d8a48","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"102da228e0f13fcf6bed4ed71d8be3d29d9d8a48","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.1.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.1.tgz_1502460194054_0.2694399831816554"},"directories":{}},"1.6.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.2","_shasum":"70f39346b1d7df806ced0149ad3b71150e07b0a4","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"70f39346b1d7df806ced0149ad3b71150e07b0a4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.2.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.2.tgz_1503107545768_0.05937616853043437"},"directories":{}},"1.7.0-alpha.22c8a6f1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.22c8a6f1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.22c8a6f1","_shasum":"a3aabbed025fc4baf1667cd6dd960ec0ae9952c3","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"a3aabbed025fc4baf1667cd6dd960ec0ae9952c3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.22c8a6f1.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.22c8a6f1.tgz_1503591145946_0.7013242321554571"},"directories":{}},"1.6.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.24.1"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.3","_shasum":"63cfb260303f239bd41068d127eb7958d359192d","_from":".","_npmVersion":"4.6.1","_nodeVersion":"8.1.2","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"shasum":"63cfb260303f239bd41068d127eb7958d359192d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.3.tgz"},"maintainers":[{"name":"kylemathews","email":"mathews.kyle@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.3.tgz_1503685311749_0.2726268423721194"},"directories":{}},"1.6.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.4","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-pW2RJ7gAp1CxRuEuzsNP0qCokY4SImK5LFbaUkhIk0hWskREigcNUacSB5jKAgOQLb/+gX3frZM2hlwcaNJ/8w==","shasum":"53d94460b8b6526a499a0918fc2a3ead7a999d57","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.4.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.4.tgz_1504133919553_0.8572105369530618"},"directories":{}},"1.6.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.5","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-XXfiGySunjput9722RMIsqSMJbL4Mu5zq1VRySgR0ugFiZm1rJTgI6vCY0g2crHduvk4iEyaM0XthIS4MrjjVg==","shasum":"5b5da1ec92739322e15208b4d4816e3b4578525d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.5.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.5.tgz_1504222893773_0.9796583522111177"},"directories":{}},"1.6.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.6","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-8gdbEB5dy+9dE53iD53Bn2CrEXEXB2ayIXmfZV1UxALnKUoVvMFf/cvwcyzBkcmTulNRTqYRllN6w7ZhfpsIsg==","shasum":"654ef59534fc82321d9d13bdb2a9c838134b898f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.6.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.6.tgz_1504303650280_0.8829656057059765"},"directories":{}},"1.6.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.7","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-LyoIdgELvv/5Wa+6O2AfY6Q04FQJgOKtupD5leHMIPG8mvjuZxA1u3CuKti2Fn6bUStLAOCbFpCRQIOOcVtL1Q==","shasum":"688e22dfc6f3341fcb8efebed1bae5e05ff02fd4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.7.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.7.tgz_1504794266416_0.37096128333359957"},"directories":{}},"1.7.0-alpha.76b32701":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.76b32701","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.76b32701","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-xnji3A4qjzW6/t6YXzChBdvcYst7Dsj+S99pAfWL/U0fn7CjilbqF1MhwTqIB7N41bCfwu9QyTm3XqPbyN8mhA==","shasum":"f2754462fc1fcc4a2b50350f9dbba20d4bd8110f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.76b32701.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.76b32701.tgz_1505498472933_0.7248357848729938"},"directories":{}},"1.7.0-alpha.2e1e7782":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.2e1e7782","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.2e1e7782","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-ms3ax2CBitVkhVK5Wpykv2iiLha+SFFRqjfIUTkiTtfJUnS5bkYDXvz6Ojo9r/1LXf1MLpYmNiTCt4t+BFIMdA==","shasum":"abd99a8eed5f40dfb592eb1792b5d8dc9b894ac2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.2e1e7782.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.2e1e7782.tgz_1505499165582_0.049437420442700386"},"directories":{}},"1.7.0-alpha.93f2e2a2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.93f2e2a2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.93f2e2a2","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-XyOMxXxLWr4z41yKI2gbLee7Sa3EOGssXeKNtuqeiASJQ0UGqldvfjRGP6rlLppBy2lKLAfAdWTdBqdOxOyrMA==","shasum":"ce98c8d6aa09ec0d497bd93d3236e96d15ccf68e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.93f2e2a2.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.93f2e2a2.tgz_1505562615521_0.05689510703086853"},"directories":{}},"1.7.0-alpha.5db7a275":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.5db7a275","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.5db7a275","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-p7ilXtDhXyLHkd+hfg53YgU7zff9+05Hgp84JbRms9qFqmhH+h2MFdkp2XZ25+2zMP+lqKbXcc/tpUmiD6oEWQ==","shasum":"e786ebc8c9fb23d8fa05d48169d6759a39785223","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.5db7a275.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.5db7a275.tgz_1505569567538_0.26032864465378225"},"directories":{}},"1.7.0-alpha.1460dad9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.1460dad9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.1460dad9","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-2VudAr9IsBkr+dp+SXQiI0vMBzOultI4mH3BiL9ww8bpcH+o/Om61nWwo52/iheFyPQmc7V6YvTD8Zr122bbxw==","shasum":"ca452a4739d1551355bef0077ee0c2a11aa45b02","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.1460dad9.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.1460dad9.tgz_1505737738455_0.5567936489824206"},"directories":{}},"1.6.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.8","_npmVersion":"5.3.0","_nodeVersion":"8.4.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-lSP+UCWMRS/b0GvywcjwucrmQeMBTnK00hG1MBy8uLkDsnzz6LPKz2PM0+p07bOOetBZNt+pe8Xqa5sI+bmfgg==","shasum":"289f11f3f54c5cdd51f78f17403b8f318fd68cfa","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.8.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.8.tgz_1506115605940_0.5808271018322557"},"directories":{}},"1.6.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","progress":"^1.1.8","sharp":"^0.17.3"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.9","_npmVersion":"5.3.0","_nodeVersion":"8.6.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-qf+mH0x9iclpsf/LJdxEb57lWGdyoybsexokYY6TuwdSboAYaHB3DfrCKhnxW7ubznWKL6wMboQyC4z5h3vEAA==","shasum":"4b1f39fa68f952112d95cf5f5dfbdfc320458a0a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.9.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.9.tgz_1507349299015_0.655089630978182"},"directories":{}},"1.6.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.10","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-RIJXKIaoVkWj1to84xf19IGqXQWwK+ByVQkkoFQ30FoTScSdtH4QZMK0xbVd8ingATr9ZNaZhXTGTRTBdjaJEg==","shasum":"2637986beab6c1b2c303e9dee4e313422ba744ba","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.10.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.10.tgz_1508517248292_0.5717769772745669"},"directories":{}},"1.6.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.11","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-9pXnqb0bm0pCMxcMR2CQeZDYfju/rf7zcZxmodeQn0XWIldmZ7CXqD2DpyGUsJIMKBlK9Eg9QWKjB9t8e6vmjg==","shasum":"d1feb0fbc2c08c5d803d4cc82fa3454a8d6af9fa","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.11.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.11.tgz_1508962073969_0.36015887139365077"},"directories":{}},"1.6.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.12","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-7VWrMXJ4aly+8ApvMVjqZ/zFv6+eyv2kzRTnJb5OALueUzZXwubm1HNieTqaGg3gxqyUr7CkxlBkkJuQzEJ01A==","shasum":"2e11f9afbd13c131a2797fc4eca6b6db15c24538","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.12.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.12.tgz_1508999179070_0.6663377832155675"},"directories":{}},"1.6.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.13","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-GeGl+7fZnKGjpQo54nVPFeBLC36nlPtkSzUrZ1VN7o9RUdsw1X1DbpHCLqgGTmzvS7Ra7iBzsy9jG8GgJ4/QIA==","shasum":"2c1243f31efdc1fa8b75574a505aef5343a890af","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.13.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.13.tgz_1509054385083_0.003780689090490341"},"directories":{}},"1.6.14":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.14","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.14","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-h/rtE3IzqXCAUDVcrN0sv662yzgIK6+XVFtwHWgWmWfZ6jiiWwrUbhBXL8NJvMtZ/NnxKMh+W0r5Vrj6xFHlWw==","shasum":"7eb6bceb04dc6607d63db7e71155f8c7599935d3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.14.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.14.tgz_1509554819196_0.5776793514378369"},"directories":{}},"1.6.15":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.15","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.15","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-Qn+AwN4Xlj8LYbEnNQx9GNk/nNxbUzCm6rUmhh2jkdbGX8VWWOdthndEZuZR9uge+TblWqGKiy+vUsyRsEv3sg==","shasum":"7b95f0da40721a413cd0af04f2b0523441370d34","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.15.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.15.tgz_1509559305713_0.9545634733512998"},"directories":{}},"1.6.17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.17","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-9oXr44SYRpsST6wBRYr4CHzu8mDKPWy9QWiE/NOEDJV+Mp6iBj5kK40jTBjQJfuQWsubNA5aFJz7FDlRlOp1/w==","shasum":"abc97abdc121ad4ea646f913b14bafeb5e553c8f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.17.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.17.tgz_1509568171554_0.5252083272207528"},"directories":{}},"1.6.18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.18","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-PpNmLJvLiNyEIcvdkb6hqSUfh3H0kkrnDn/35TZ28U4UJjUKB1rO7zRf4Nc5I6W596qEzYdk2+V8WMGCwXOA5A==","shasum":"1dcb1394bb28fd902403771cdd4bc9ffe7a61864","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.18.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.18.tgz_1509646006905_0.6397320858668536"},"directories":{}},"1.6.19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.19","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-Mf2bscKx20hYx/37nmfzCDUUzmg9yJCnoc1Ha3cg8tRJyjHX+MEpC19cDDkRLdBtiBwN4Qtmn/KibnC5tBkhNA==","shasum":"0766d52a40b6870cbfe7b064bfb8f51239beddc4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.19.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.19.tgz_1509732827249_0.2664697647560388"},"directories":{}},"1.6.20":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.20","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.20","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-23UX3dVMgCY5mGovjjUs7VSwY+TSW29yBLc5DdKaDj3OGzfvb9Yo2d8G5KWp7pwUr/TNlstD+rN1p8v2ZsThYw==","shasum":"5bd14a0b840485ccf71964c83832cf749827bd67","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.20.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.20.tgz_1510042549439_0.1405869983136654"},"directories":{}},"1.6.21":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.21","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.21","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-JSWX7eOTzg7afg3DxdU8iePE6AALUsbf1AfCMLJDlcsydMih78k3bZX9C87aqhAcb7ZtH3b4bga8GPlzbbPcKQ==","shasum":"990e856153b65be28316c23ab29b4e78dd5634de","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.21.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.21.tgz_1510681783477_0.5291342881973833"},"directories":{}},"1.6.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.22","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-u7zjalCp1pfi0BzsFKRQvuABhxc2fLT15A+YIjVeVDBW5hBCoCP5X8d/9tgdpqkm7ebZozxjY4UbjxdJIhn9QA==","shasum":"7d1c71a881e89c4327450b15820d4614eb72e6e3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.22.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.22.tgz_1511914179001_0.876471437048167"},"directories":{}},"1.6.23":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.23","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.23","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-iD9Gn6iaZMipOGlw1Ri+Ye7FHOHbxaSiOCStnn2PwclkzYYPyOqD/pIrjanE64WSTbz43usWy268lCLvFYg+Gw==","shasum":"6f53013ee72a6b4613587ec07485cffc18e40e9b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.23.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.23.tgz_1512866730766_0.9484734400175512"},"directories":{}},"1.6.24":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.24","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.24","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-rz+qzrTbua+eVYUDy2Kg0CR4TbOj/wbw69LJlJSJKZ+vAUPFgILM16VvrcbmgIrOWi9z2YUJDQh7JTM4gEbfJQ==","shasum":"f885a384b222f655534e45788a99863a038bf107","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.24.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.24.tgz_1513281477730_0.16019556485116482"},"directories":{}},"1.7.0-alpha.f20ac0ed":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.f20ac0ed","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.f20ac0ed","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-up5L2Dn2fikououEr906q2MvNyIbkpoqN00/0Eo7Slgf7F8mq/NF0uKjM4d7jc1Lddn4L1+ILUai2v+3qdBXJA==","shasum":"ea4f61aebcf99aebd8c9996243385481b6015bf9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.f20ac0ed.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.f20ac0ed.tgz_1515695949631_0.565658037783578"},"directories":{}},"1.7.0-alpha.a0a09c94":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.a0a09c94","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.a0a09c94","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-6gfr1gHihWYNKmpAHmpxcCGH8s8WBftnY7VOkZorD/t7JuFgOifTzScW4DU7WAIIjcp+Gw5Ul3km/2SX2MpdcQ==","shasum":"bd6bc35ab2c0ed6fe422b81c19d49d2da82e3be8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.a0a09c94.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.a0a09c94.tgz_1515696482688_0.8467789993155748"},"directories":{}},"1.7.0-alpha.b50f2063":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.b50f2063","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.b50f2063","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-29pEsRpODDxCAhxmwROvXSPiB2VYT5Ld4emeNj+eEiBlRJPXEo+Q5E8o1FkyHkD5FbPYOi3BrGqaWVBQz5GGyQ==","shasum":"b90a99dbd4403483b6ed45f20db68f4a91f2edf8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.b50f2063.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.b50f2063.tgz_1515696907487_0.47340236813761294"},"directories":{}},"1.7.0-alpha.03b9df85":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.03b9df85","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.03b9df85","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-9lQ2mTijHsQqaVFvEc+qvPIPGyFB5LWFfLcnFGdBTzwPwIL6siLAjjex5+rONn4MKYKltN/Ro+mpTsWhvXsFSA==","shasum":"15ff3872e8374eb6f2191f02ae606802d14f4400","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.03b9df85.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.03b9df85.tgz_1515767775503_0.5214909696951509"},"directories":{}},"1.7.0-alpha.e9df8e57":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.e9df8e57","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.e9df8e57","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-BKpTKMDmBKFo7TSV7ONwsgn8sy/wcspbF7V1lZFF1GDw/Ep+lHsMi/rBmzHwIwt1ScCYDK7/TIs7t6cF7/MoyQ==","shasum":"629f2c6f4f67db12afeb019319b8c5a22117d4b0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.e9df8e57.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.e9df8e57.tgz_1515768450818_0.1644374574534595"},"directories":{}},"1.7.0-alpha.8c822451":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.8c822451","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.8c822451","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-+xEDN9xt/yKFujMCVnmh9IjqcoSnVIsQycCEfgfz//5Y+0JjttZwl7Fl3Lo7uPez5GmCwAPdDFYLz2zfr6+Obw==","shasum":"d11d8856ee5ac0a4e5ca2f14760d2400441a8144","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.8c822451.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.8c822451.tgz_1515769257783_0.5708109890110791"},"directories":{}},"1.7.0-alpha.e5586916":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.e5586916","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.e5586916","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-Ilb/M6w2p68WJKKuZK6jd9JtUuPE7yuoOd520GwhFtrK1V0vg+I2hLsRZh0kWuOBFSRqPBkeSGTTLNpT/ZvzFA==","shasum":"3b5f1bf69a9f76e8ec2f431543284ccb1292a179","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.e5586916.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.e5586916.tgz_1515770551290_0.8930023668799549"},"directories":{}},"1.7.0-alpha.9da1bca1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.9da1bca1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.9da1bca1","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-fxIhDVHwOzLj9ys0YwjJP0kLBFiTiNnt1tXdb+3NsytNXfWYHFsaeeGPCAjLSlJuGVBeT6OjVQQxB364gk8QWg==","shasum":"a147fc15bd85fd1fbfdfeca499bf56600e2e9d5b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.9da1bca1.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.9da1bca1.tgz_1515780456658_0.5217453751247376"},"directories":{}},"1.6.25":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.25","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.25","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-iWAfxxJ1SQ/3/Tx/sSUH8AmVr0XKhN6zq3gToYknMdj8DeVLpBozZaIR98sxsEjUCG2nz9ZhYaQMfBCdNp7pFw==","shasum":"c6c67276ac4ed7ca9ac2b15dcdcd199f12e4208d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.25.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.25.tgz_1516133361422_0.5947462443728"},"directories":{}},"1.7.0-alpha.aeb05561":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.aeb05561","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.aeb05561","dist":{"shasum":"2b7a0c6c91bdc7ca8e0a2d2af1115cb6ee02605c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.aeb05561.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.aeb05561.tgz_1516240387489_0.8159720632247627"},"directories":{}},"1.7.0-alpha.7b47e00d":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.7b47e00d","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.7b47e00d","dist":{"shasum":"1ede5a3ee9c8db451b0240999ee38f555f7ce2a7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.7b47e00d.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.7b47e00d.tgz_1516241408182_0.5607432364486158"},"directories":{}},"1.7.0-alpha.f5c1df61":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.f5c1df61","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.f5c1df61","dist":{"shasum":"521c88d76925840df9bca57099d75ca126a24a3e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.f5c1df61.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.f5c1df61.tgz_1516296632860_0.5684389090165496"},"directories":{}},"1.7.0-alpha.926cb6da":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.926cb6da","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.926cb6da","dist":{"shasum":"b68d4cbce2bf3a0788ce358431d5f7b6b4cc3be8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.926cb6da.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.926cb6da.tgz_1516498942645_0.9762935684993863"},"directories":{}},"1.7.0-alpha.3f307d61":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.3f307d61","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.3f307d61","dist":{"shasum":"5f01b0f207cbf0ed95545c1737e73de6efa4a5ad","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.3f307d61.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.3f307d61.tgz_1516501382652_0.4753969155717641"},"directories":{}},"1.6.26":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.26","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.17.3","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":"^1.0.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.26","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-+IAGC/fciiEyiztfi+MI+OPdL3MfRJ5+BYNcWKVO4sS6SAO3LEaLucf5b7w/CZ7kMc/NHpxwP6POE1OhjWTrMg==","shasum":"55f0b3274ac0fd1d230c7b6a2e8b378d4a259667","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.26.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.26.tgz_1516735144663_0.48197651328518987"},"directories":{}},"1.7.0-alpha.d1544e1b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.d1544e1b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.7.0-alpha.d1544e1b","dist":{"shasum":"72eee89ecaccbd2bf27c8656cc46b5c84d47a2f7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.d1544e1b.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.7.0-alpha.d1544e1b.tgz_1516839269002_0.1583396706264466"},"directories":{}},"1.6.27":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.27","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":"^1.0.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore __tests__","watch":"babel -w src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build"},"_id":"gatsby-plugin-sharp@1.6.27","_npmVersion":"5.6.0","_nodeVersion":"8.7.0","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-9L92Nj4hu5AX+GRjl56yMdzUpdj4n9Z2H1XSvX2XhTfsxYhywpIT1tMikcVXOYm5ZxUKjFyfs3TrH3tkEfL1mw==","shasum":"28b697d19417ec1bf5ad0d4d805d5c634ed12c46","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.27.tgz"},"maintainers":[{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp-1.6.27.tgz_1516918978883_0.5305650767404586"},"directories":{}},"1.7.0-alpha.53bbd4cd":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.53bbd4cd","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":"^1.0.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore **/__tests__/**","watch":"babel -w src --out-dir . --ignore **/__tests__/**","prepublish":"cross-env NODE_ENV=production npm run build"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.53bbd4cd","dist":{"shasum":"2f478ec848d0827f695df06325e4dc12e59e3aae","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.53bbd4cd.tgz","fileCount":7,"unpackedSize":39383},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.53bbd4cd_1518294890989_0.42437053323501717"},"_hasShrinkwrap":false},"1.7.0-alpha.2b695217":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.2b695217","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":"^1.0.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore **/__tests__/**","watch":"babel -w src --out-dir . --ignore **/__tests__/**","prepublish":"cross-env NODE_ENV=production npm run build"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.2b695217","dist":{"shasum":"2b5e71b103f826d3431ca4e12fc0f50a938f8b84","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.2b695217.tgz","fileCount":7,"unpackedSize":39383},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.2b695217_1518302211021_0.15280025685979748"},"_hasShrinkwrap":false},"1.7.0-alpha.32ef58da":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.32ef58da","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":"^1.0.0"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore **/__tests__/**","watch":"babel -w src --out-dir . --ignore **/__tests__/**","prepublish":"cross-env NODE_ENV=production npm run build"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.32ef58da","dist":{"shasum":"b7deadd0f0316b30c781fbe7512e5f2648384a88","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.32ef58da.tgz","fileCount":7,"unpackedSize":39383},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.32ef58da_1518320690875_0.3494358904740795"},"_hasShrinkwrap":false},"1.7.0-alpha.5182142b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.5182142b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":">1.0.0 || >2.0.0-alpha"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore **/__tests__/**","watch":"babel -w src --out-dir . --ignore **/__tests__/**","prepublish":"cross-env NODE_ENV=production npm run build"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.5182142b","dist":{"shasum":"98b08a672070b8dc44d3bc35fcf594e6867b4c6d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.5182142b.tgz","fileCount":7,"unpackedSize":39399},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.5182142b_1518322362092_0.676100262345021"},"_hasShrinkwrap":false},"1.6.28":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.28","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.28","dist":{"shasum":"4f485f4be15d2e64a7876455aea1fc9ed80b05a7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.28.tgz","fileCount":12,"unpackedSize":69077},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.28_1518484326018_0.8524845535315895"},"_hasShrinkwrap":false},"1.7.0-alpha.6ab84875":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.6ab84875","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"peerDependencies":{"gatsby":">1.0.0 || >2.0.0-alpha"},"keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","scripts":{"build":"babel src --out-dir . --ignore **/__tests__/**","watch":"babel -w src --out-dir . --ignore **/__tests__/**","prepublish":"cross-env NODE_ENV=production npm run build"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.6ab84875","dist":{"shasum":"f091b577fbf30440ecd4bf2d06b454ca4d80f80b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.6ab84875.tgz","fileCount":7,"unpackedSize":39399},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.6ab84875_1518660413879_0.2922463111246485"},"_hasShrinkwrap":false},"1.7.0-alpha.9d4de2a6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.9d4de2a6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.9d4de2a6","dist":{"shasum":"56656d22e58f1dd60fec1bc604d89d481c8f0420","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.9d4de2a6.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.9d4de2a6_1518726752114_0.35132774987161186"},"_hasShrinkwrap":false},"1.7.0-alpha.9e381f74":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.9e381f74","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.9e381f74","dist":{"shasum":"f4968a39ee20a53c4b828ac176c9f2eecd73de7a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.9e381f74.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.9e381f74_1518729160566_0.09876899960021523"},"_hasShrinkwrap":false},"1.7.0-alpha.dd504153":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.dd504153","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.dd504153","dist":{"shasum":"96b25e6677bc9cfedd67213aaddddddb80afc3d1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.dd504153.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.dd504153_1518730189010_0.20918346089447293"},"_hasShrinkwrap":false},"1.7.0-alpha.b68b7f5c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.b68b7f5c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.b68b7f5c","dist":{"shasum":"e9fd1c4a276a2179139f16d58a54b5fdc1fa625e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.b68b7f5c.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.b68b7f5c_1518732053254_0.41713748877210954"},"_hasShrinkwrap":false},"1.7.0-alpha.bb258cb5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.bb258cb5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.bb258cb5","dist":{"shasum":"f093d8dd2ae744921ebb4ab8c0030b13580e7827","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.bb258cb5.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.bb258cb5_1518740986234_0.5376949159495887"},"_hasShrinkwrap":false},"1.7.0-alpha.e28a1c8e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.e28a1c8e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.e28a1c8e","dist":{"shasum":"90af5cd0c4a26f1badb8c8d4a554080ec7b148ec","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.e28a1c8e.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.e28a1c8e_1518743471450_0.21517668479729912"},"_hasShrinkwrap":false},"1.6.29":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.29","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.29","dist":{"shasum":"6e1df0ea3ac165decd579e574b8e53e49b6c787f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.29.tgz","fileCount":12,"unpackedSize":70112},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.29_1518813865384_0.6525890181940819"},"_hasShrinkwrap":false},"1.6.30":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.30","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.30","dist":{"shasum":"c9c76c24687ed8c55e1524bae90486fe512586c2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.30.tgz","fileCount":12,"unpackedSize":70223},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.30_1518823354657_0.735711973799156"},"_hasShrinkwrap":false},"1.7.0-alpha.067e672c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.067e672c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.067e672c","dist":{"shasum":"ca9ba1d3c8ceb300d30e27e15f4f67c37cb23df2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.067e672c.tgz","fileCount":7,"unpackedSize":39637},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.067e672c_1518835519816_0.8418884278388428"},"_hasShrinkwrap":false},"1.7.0-alpha.d0b8dd9e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.7.0-alpha.d0b8dd9e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.7.0-alpha.d0b8dd9e","dist":{"shasum":"520ebfb0c77a988488cea34a8f24ab28c158d0e6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.7.0-alpha.d0b8dd9e.tgz","fileCount":7,"unpackedSize":40013},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.7.0-alpha.d0b8dd9e_1518894317523_0.6415029838854935"},"_hasShrinkwrap":false},"1.6.29-0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.29-0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@1.6.29-0","dist":{"shasum":"b2f009acbe463029fd9cd1268c8de20093f478d8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.29-0.tgz","fileCount":7,"unpackedSize":40001},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.29-0_1518895872291_0.5835533454509205"},"_hasShrinkwrap":false},"2.0.0-alpha.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.2","dist":{"shasum":"4b63859ce4cf88cc719303111804a25d39ef4d75","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.2.tgz","fileCount":7,"unpackedSize":40020},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.2_1518897622117_0.12291719088546382"},"_hasShrinkwrap":false},"2.0.0-alpha.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.3","dist":{"shasum":"601129c6857b2a08215398b8e6be03ac1e7dd9ab","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.3.tgz","fileCount":7,"unpackedSize":40020},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.3_1518897746814_0.2720962627063246"},"_hasShrinkwrap":false},"2.0.0-alpha.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.4","dist":{"shasum":"cb691916eac8395c7b3790ecb70d2afbbbca4d6e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.4.tgz","fileCount":7,"unpackedSize":40020},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.4_1518898074350_0.7705166782063879"},"_hasShrinkwrap":false},"1.6.31":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.31","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.31","dist":{"shasum":"aa136442a92f20df4629e8b4ddc11735c6ed6d90","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.31.tgz","fileCount":12,"unpackedSize":70760},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.31_1519069178207_0.4669088465485285"},"_hasShrinkwrap":false},"1.6.32":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.32","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","image-size":"^0.5.1","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.32","dist":{"shasum":"023ae785663ee7599a278536cf4f3861752cc0af","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.32.tgz","fileCount":12,"unpackedSize":70772},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.32_1519245681476_0.8062884176744392"},"_hasShrinkwrap":false},"1.6.33":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.33","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.33","dist":{"shasum":"05044062f59232567bd8a3f8e8d5e199d210409d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.33.tgz","fileCount":12,"unpackedSize":71562},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.33_1519342627482_0.8244571016277151"},"_hasShrinkwrap":false},"1.6.34":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.34","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.19.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.34","dist":{"shasum":"11cd60af3d3a9c8e77772476ba200830f7e71eb6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.34.tgz","fileCount":12,"unpackedSize":71902},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.34_1519431030661_0.7417538219257527"},"_hasShrinkwrap":false},"1.6.35":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.35","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.19.1","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.35","dist":{"shasum":"3ef8578163b47842377f14825c98d27dc32f061d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.35.tgz","fileCount":7,"unpackedSize":44983},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.35_1519687690664_0.7257694346308967"},"_hasShrinkwrap":false},"2.0.0-alpha.e66c6c9c":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.e66c6c9c","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","image-size":"^0.6.2","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.e66c6c9c","dist":{"shasum":"e58c1805fe394e98b6731b11498629f63061cb07","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.e66c6c9c.tgz","fileCount":7,"unpackedSize":40027},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.e66c6c9c_1519694704001_0.9000278457475872"},"_hasShrinkwrap":false},"1.6.36":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.36","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.19.1","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby.git"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.36","dist":{"shasum":"9c180786f342d6a720dfeec939cb79327fb9a7c4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.36.tgz","fileCount":7,"unpackedSize":44983},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.36_1519799871914_0.01294433342983381"},"_hasShrinkwrap":false},"1.6.37":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.37","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.19.1","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.37","dist":{"shasum":"26801f6a7075508b10aaf1a016acf74b7be20aa2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.37.tgz","fileCount":7,"unpackedSize":44984},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.37_1519850409187_0.24754280922337601"},"_hasShrinkwrap":false},"2.0.0-alpha.2cbec6d6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.2cbec6d6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.2cbec6d6","dist":{"shasum":"e4220438a81f70fc5e8619afe01e5bb88d971634","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.2cbec6d6.tgz","fileCount":7,"unpackedSize":40986},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.2cbec6d6_1520059608363_0.5202815682013775"},"_hasShrinkwrap":false},"2.0.0-alpha.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.5","dist":{"shasum":"cf4e80733a3a7959e555250aa34d801a81831e5b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.5.tgz","fileCount":7,"unpackedSize":40979},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.5_1520061849715_0.47676058247079034"},"_hasShrinkwrap":false},"1.6.38":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.38","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.19.1","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.38","dist":{"shasum":"4906b236b846b383adbd30359493f76cf3bfefbd","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.38.tgz","fileCount":7,"unpackedSize":44998},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.38_1520148216140_0.11627394083454146"},"_hasShrinkwrap":false},"1.6.39":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.39","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.39","dist":{"shasum":"842a814f0f68470b703830e36c51c95083678265","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.39.tgz","fileCount":7,"unpackedSize":44998},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.39_1520279707638_0.65244828362151"},"_hasShrinkwrap":false},"2.0.0-alpha.f98688ee":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.f98688ee","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.f98688ee","dist":{"shasum":"8815b3be5fb5af0f3d73aeb2e46c7a375d0feaa0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.f98688ee.tgz","fileCount":7,"unpackedSize":40986},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.f98688ee_1520389554806_0.9351892674370916"},"_hasShrinkwrap":false},"2.0.0-alpha.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"lovell/sharp#prebuild","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.6","dist":{"shasum":"209b6e5f0044ce7359bc017a2be6419d402c1768","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.6.tgz","fileCount":7,"unpackedSize":40925},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.6_1520390082676_0.2532306424945516"},"_hasShrinkwrap":false},"1.6.40":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.40","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.40","dist":{"shasum":"6f1fecb09439ba5b9e8ccbeaebc018faf38c5456","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.40.tgz","fileCount":7,"unpackedSize":45019},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.40_1520445987543_0.9872276636476758"},"_hasShrinkwrap":false},"2.0.0-alpha.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.7","dist":{"shasum":"abbb9e48aac583d081935b39e85fb997a81528df","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.7.tgz","fileCount":7,"unpackedSize":40911},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.7_1520466910289_0.9535534170885245"},"_hasShrinkwrap":false},"2.0.0-alpha.9fe50b00":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.9fe50b00","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.9fe50b00","dist":{"shasum":"9d746e1957d495f355a95dbabceec0843f9052e9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.9fe50b00.tgz","fileCount":7,"unpackedSize":40918},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.9fe50b00_1520478270383_0.0017277952804954921"},"_hasShrinkwrap":false},"1.6.41":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.41","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.41","dist":{"shasum":"87dc28d226d70e63408bf31983268efdf10e8b1d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.41.tgz","fileCount":7,"unpackedSize":45019},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.41_1520486633265_0.6303550225822652"},"_hasShrinkwrap":false},"2.0.0-alpha.34eda94b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.34eda94b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.38","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.38","@babel/core":"^7.0.0-beta.38","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.34eda94b","dist":{"shasum":"f1260f8d4476a9b358788e77422eca27071a5fae","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.34eda94b.tgz","fileCount":7,"unpackedSize":40918},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.34eda94b_1521321744718_0.8720990918132234"},"_hasShrinkwrap":false},"2.0.0-alpha.12622d64":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.12622d64","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.12622d64","dist":{"shasum":"fcdeb9dfa4ef7d2437ebb7eabb6211b13ce5b252","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.12622d64.tgz","fileCount":6,"unpackedSize":33846},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.12622d64_1521331222744_0.32106198731462676"},"_hasShrinkwrap":false},"2.0.0-alpha.84bd71b4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.84bd71b4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.84bd71b4","dist":{"shasum":"347412ecce121a92402f619abca3653d8c5e1bb4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.84bd71b4.tgz","fileCount":6,"unpackedSize":33846},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.84bd71b4_1521333613045_0.6669455914257187"},"_hasShrinkwrap":false},"2.0.0-alpha.6ad61a13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.6ad61a13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.0.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.6ad61a13","dist":{"shasum":"1dcc31f93ceb5ceb4726943920661b4603a42629","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.6ad61a13.tgz","fileCount":6,"unpackedSize":33846},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.6ad61a13_1521654585885_0.402325565887913"},"_hasShrinkwrap":false},"2.0.0-alpha.5f47082e":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.5f47082e","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.5f47082e","dist":{"shasum":"8f6062ef1b867a80c64091f9c0c5a7919076f04c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.5f47082e.tgz","fileCount":6,"unpackedSize":34240},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.5f47082e_1521845272864_0.046216264723135225"},"_hasShrinkwrap":false},"2.0.0-alpha.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.8","dist":{"shasum":"f1df4f048bfd8ac0cf7974d501a7c483d1d7b20a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.8.tgz","fileCount":6,"unpackedSize":34233},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.8_1521847151317_0.1794326729767184"},"_hasShrinkwrap":false},"2.0.0-alpha.95fcd4af":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.95fcd4af","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.95fcd4af","dist":{"shasum":"b4c84018c90b4bead4c69d6de30b41f28cff9812","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.95fcd4af.tgz","fileCount":6,"unpackedSize":34240},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.95fcd4af_1522290165771_0.8175194500221985"},"_hasShrinkwrap":false},"2.0.0-alpha.20252dc3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.20252dc3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.20252dc3","dist":{"shasum":"f01a9f94712442e613901789a49f6ff59f68f203","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.20252dc3.tgz","fileCount":6,"unpackedSize":34240},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.20252dc3_1522291472157_0.15693054542185592"},"_hasShrinkwrap":false},"2.0.0-alpha.4a09f745":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.4a09f745","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.4a09f745","dist":{"shasum":"07c0dbc68be7a319f93a416940288c8824774693","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.4a09f745.tgz","fileCount":6,"unpackedSize":34240},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.4a09f745_1522966501885_0.42058719244697573"},"_hasShrinkwrap":false},"2.0.0-alpha.76793cd8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.76793cd8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.76793cd8","dist":{"shasum":"e69f18ff83e248a767ed99cbd14277cde59f15af","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.76793cd8.tgz","fileCount":6,"unpackedSize":34240},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.76793cd8_1523139152525_0.38514671994404015"},"_hasShrinkwrap":false},"1.6.42":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.42","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.42","dist":{"shasum":"c2c900ca80ff2b19d3c56ba8dcfb24fbd664d397","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.42.tgz","fileCount":7,"unpackedSize":45018},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.42_1523410513700_0.9275818078313431"},"_hasShrinkwrap":false},"1.6.43":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.43","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.43","dist":{"shasum":"045e1d00c4453a9e5cbf99358ad5a5f6c0e4bf3e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.43.tgz","fileCount":7,"unpackedSize":45055,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2MTQCRA9TVsSAnZWagAADUIP/30oiXhMkD5d1nVrUV/H\nDxU4XBhbpc47NNIVK4NB2WO3W9wR0AHAkpvHecitb9C8mZDNekZd6o3JyamP\no1aEh5+1p0WyzKMvR3/fHc3GxZql61k9Q0q0WpxM+Y4SCDGN9xwOkALK8LC/\nTnarjStij4MGULMw4aCYHETXaP+eePhAUkI+z++vu/q/0nOPo7Oty6+EvpNS\nNx8r2vzI6iK1eED/5sWU7ZXPWIhrwrKu8FDISJz/Sx9Yq8FKTFDZdlPiDdBd\nBX+LTo+olwt7W3K9QKz6Xv6e2OErwI1Y641KxbhAvhGFLJqmbcC+BTSiBr2O\n5AKd5J75g6rR6EzjGSCRaUocofrZLhZuwQ1yBFWdMwnoiOHXn8ufkCraRCKY\nbu/yzU9/jJW/QAHmEW3BxNgMTgTcVBnY31+1voPMiQLzuTBn2CKQ0xiPnF1w\nWMUnR2fz5YjMJCOy5icFYbWlF1/etPWzeoGvFCC8AG52s4UW+j8DiUU97ZMF\n1heppUllLzg69tnP+lsclgXFpAcGtlL9eSTkB66UJUBXqpCKkLP+W2QrFyz7\nViW5gbqVbywtesI7DnyNw0s5AVjYQaSeQgDqk666prvcjAgWfvyNQHBlJr/t\n7bcuR0RSEjKBy0mqPpd5LIGqBTjPlLh+eFKzSstxIUf0r5R5gIjKGS9hU5NV\nNIhQ\r\n=sCDc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.43_1524155598089_0.8367957893467746"},"_hasShrinkwrap":false},"2.0.0-alpha.5c9569c0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.5c9569c0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.5c9569c0","dist":{"shasum":"8a7a13a0860d71d37a2429527df0bacb3af4ba6c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.5c9569c0.tgz","fileCount":6,"unpackedSize":34240,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2MpsCRA9TVsSAnZWagAAEhQP/jOebEJ591tjzV907bAY\nCgch4KnasSoNGvQBU8QjWe1/pQup1OXYiUkYQUnzRTbA8fSH4x6xKqj7v17Y\n3x6spjYctne4sM91LawpuUSJ2KY9jTPNG1OzDvtOjcAJMvlIezCs8+RfiCs6\nmbVxjVuZ+g951m/FJZxsU99o4CndtBQZcKaohmMCH7mmZzEYBCf+Ye2YnXrQ\nL6joWxs+oPxY/W5BWn3IpEtd0B7ai0N5lFwjPlXOoACCuM3CYUQoteLMIWJJ\npDG5WKc4EEa8lgr6bi3ruVpt/b8Elb1ibja/wqOJN0I4nOh+RuzlPXwxFErl\nRgBZx/hmYzaiUx9LhHRlhafJXHT2nCzq+4AbbKbNTYweP6UgkwLP9/Q+6nPH\nOV8DAQutpmZFLiwQLEajmiNgOrolhENXt3UkxbDPk+Jx2rUBvltkQFTCYRfj\n1yjZYXRJU0xFyS5bV0J0mCRg+uHNHCUHURMSW2kr/PXN7roT7D+O1lKpbAGJ\nhP8BiS9obo+ezBkhvwRewQKddaCRiBCXZnghxlthvWHZw32Vx8ZKmE3UWUQj\nvKSIF4xK59IDeAaZC+QmOt7/ONBIL8Ac82x3tbENa+EjXM8GbVwC5gDyYS4U\nOmEfIvUlywsLq6pTapcO2d7fmfFc2MmNqO6UoDOw+rYtP/v6ci7uPo2U/s/Y\nQaHg\r\n=rYyI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.5c9569c0_1524157036130_0.6160356427122426"},"_hasShrinkwrap":false},"2.0.0-alpha.523a4286":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.523a4286","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.523a4286","dist":{"shasum":"1bd9cc742a923b9552179ad7e432b0144edc4cb3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.523a4286.tgz","fileCount":6,"unpackedSize":34240,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2Su4CRA9TVsSAnZWagAAf7oP+wRhIgXQOgc68/movVRH\nIIJugxNkBtRSXjkOjXCliY3iq8j9W/c57n03FtUJJaLxAKajBNj8xKQ59B94\nZSMuzPhsv+0/0ceAgPcLOmjb8mywj827dos/WgWAPwiNy7Fz7zp/KPIuc+7n\nYACWhyVyDRBE99Fk3O6RNerQn7L8w3fBUrrCyz/qRUdcF1q9nhq2Wxsb7Blf\n/Y/RH2c9EqoY1VDDdHEPIPEcaDIljLAKPtyA84zHT7kRMEl/KUPG10DC5CEx\n6Iy6fotuglS70Mra66PNwI2IvLOW89eCluXb8DaV9UGggYgUh409Mxbq7+Q9\nR0zBWZd0SqKqtR9Ln0UR1NTCucM97o6nPvtyHRfZyaQ7n6Il9Z5Qys1RBqen\nwWXe7hGqp72coc96tjw/QuCSZ/ORv1ViHixvp1CVLFVpU8W97to9WOyimmjs\nt/Vc9IecUg8rHyDhB3Bs2c0SCHs9lmC+MDekk7tjbHAAM6cTt+ruavaYBi0B\nlFOftSpjUrpNFBXRrangA7M5AVopwQoAf/0ap+rosNjmkxBrUTx0CBF/36Yj\nYFFdthvrVN144xO538rCbnh0RRggnM+CDAeGNErMnaDITPz56JLuWtAHwZfu\nJfOXkdM+WBiDcQnQnssMAVnkKJshrpI6tvTB6pdPBg514fuHF6yk6mfEUqqr\nGy5R\r\n=Dv3V\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.523a4286_1524181943476_0.981360823199579"},"_hasShrinkwrap":false},"2.0.0-alpha.5421f383":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.5421f383","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.5421f383","dist":{"shasum":"5c7e8153778435c6872c985c184d018237e8bc3a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.5421f383.tgz","fileCount":6,"unpackedSize":34240,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2Y5XCRA9TVsSAnZWagAAb5QP/1tL8rPRzC39lh0So0J4\ngdM1FYFtQu4dc8B1xOXWK0tCWGFOP8LznPEVbKVPxkJwhWwhqgH5PL4LMSN7\nqZi7XVHuiPhuCYWcUPdK4utWURHVF5DaHx/hugNfLFUg9sC9NXYfUKlzU20w\noVbJW8+sfQ99qk/7idtl2SVBCd7z7JVCL5WrxjQk1PTkwwdeyDDtTCwn9ZYz\nYpADH0UBeYD41Mm3gjxJD124R3pgdP3wyFjc9zMNdYyfYMkBFaplHVur4hYk\n0nGQQ4t9Keqm+C3IAvRoYS3nEHpnNKbGabj2CAWouFrIqwGVU9DNEfCgqxTp\np7A5YYuubb1Bv9pw5Oistic9HYQQqTVKw37qwkhoLUD7GTxfIWdDEuv/tMP/\nkroEljpAx4qormOcV30/NI2NFts5OgvwYUiZKJCeTHDhTHO/IY8YJiA5yMfn\nMXrZ8hmCo31O399QVV9KPzzfW/CDQJPPxreaw09G5RF9tsXK49cn+qWMc+AN\nDqn5kzrXOlc2pqa5nmX2dEX2mIaQ2uG8CboUNT4fxapbMBVZKqLY9yKsKlY1\noPltFpGVXWHBpvpLRT8Q5ITNpTvBMXt9I/jaozOqS5HXrdgEeYH5JZdpvJxZ\nGLC5qvitLBMuaR6m4mk3rpXK4lRc7hLy3u7xH/bxpCqFlFHgS5RN9VhD55qY\nBXU+\r\n=FrM8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.5421f383_1524207190209_0.8097133267465915"},"_hasShrinkwrap":false},"2.0.0-alpha.e9c3027b":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.e9c3027b","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^3.2.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.e9c3027b","dist":{"shasum":"ecf2811ad620a47f15ea23a9c43ed604a3de3cc1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.e9c3027b.tgz","fileCount":6,"unpackedSize":34240,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2injCRA9TVsSAnZWagAAF+MP/jJD4Qauw+hJVwO5Ih4f\ncSVG70eScCRzt5NsVAHEg0KXNREdGt0BMkWejSEi0B5fpkCHvrg7V40OaVWc\nBUdD4YoKdGsOHqw24pVugBuwLtIOw6xO9cVzFN+pH9oGg+of0jhTUuohIZgD\nt8nErjOThtsDvQYVYkCjzgZ0qRd6QeJiZUp8KGBX3ymsOVBORDQVB4Dgd5S8\ns9PcFXe/GGy61AUDy9qKI9/pEEgn6crea4S9PtLSH3ROJcfiMLAybgu1PuNh\nOBZiJT3nQzqxpZr/SYD429c3wvK0wy4ynlLjIVaIAdyuQGxNcU1HRwxVMxNQ\nu5+HoJARYRy0924dwrj62rGAyH2mEhh+ad/rfpXtgy7K+sfKRIchTV1Akyfx\naPPbBUsLJ95sJsh5dNSsAtRysXRh+RlWr0sG5nOwcfR6z7MvOylkpvzZsTJc\n+uE2+C3On2V0qBJQJREaRIOk1PsUcsKlxrriE9Yc0YVf5Kz5DuXutER601ws\n9unYKC85gmxIcfX1aMBhREPbsjZzU72jQY6Aht5JrMHKe5RfpTb78Qxqx/r5\nEOmS7TX+KSiWced5aWRFVCUKKLVyWkwGxIS35SVM9jBVy6U/MwbeaQRq9Wzi\nxxStclVzIKE8GEYnA9YnSCvbXre8qZMseqZ0NmQVf/X+VSUOhNwGvFN1uXSk\nkgmj\r\n=EnLY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.e9c3027b_1524247010831_0.3109909928006276"},"_hasShrinkwrap":false},"2.0.0-alpha.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.9","dist":{"shasum":"f838673aff8aa99430003b963a97178d9e2c2686","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.9.tgz","fileCount":6,"unpackedSize":34291,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa2+tLCRA9TVsSAnZWagAAFNEQAKGRoFVN3TILAWNH+3QS\noMvvtJNcjVh46zV0eiA0RJ4MVtoq/7SCdMzx8h+s+HnhwsXwj1ippb5kLf37\nY4NqVKv9URZzUFDFsF5uh5NKVLzG8+7DBnJqLy0N92828g5cQ7H+7r1AXXQy\nrSyX9RV4RsJynbMmhvOZanVIJrWwnCTlr9x9+sD0fRDI/zmUOM2J1R6XU7th\nyeB59AhmmMXbgUZB9omDGyzdGWcdj9VZsiAEHh8wyCLfn2wevmSjpsleRz8L\nN8LpBiocutfKVR0PixaZWoFNmPwzUlpOuUtrqNWq2zUmifuwBtmi+dr0gwMP\nEyAzcAinT5+7yxU9qwKyA82Go4kTWNwMVdEWjXbaCKLtYgI2b5QIE65bmXbW\nasZHTm9vNeRFeY/wGMVLfq5aiRKzPx/O5QHT4T+9Dt69csJJSRxdjcFOKXLb\nBO4WVkCn1IiPb+f8nVeMDOWoPdEMbYtmCT8ixwNIGD5xfZ1kT3hGKmn7zyKk\nAyucVPd43Ka26s+beFNXBxtyAYFAF8FJ08ZViIlNJbNCN2D+5C9H7WAtkUbu\n3hkWiSIESGMsA6dn9hNW1/bgBi8h0R6mRWkUfLT/3p48j+79146oZX2loKyI\naQQFaY36VGZrcyiobZfuLSiiN2r3/UemMYfotgPIpZT7uCg/+LdxT+Th1ssL\nPJjy\r\n=lsAO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.9_1524362058845_0.18836003647983124"},"_hasShrinkwrap":false},"2.0.0-alpha.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`];\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.10","dist":{"shasum":"6a421492672fe5720425f2f167d39e11ac6b9654","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.10.tgz","fileCount":6,"unpackedSize":34298,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa4Kv+CRA9TVsSAnZWagAAKvsQAIKXDE8tCvLOthrdcRtn\nAgXU5nQZUDpRF3qQd/OUyolSmjAJ9fVB1UJ2tjmShdI2v53QqHhJOS1B3OV3\nDY26c30h3CI8oDS7pfeW/8TWD43PJbF+CdOBnOusyldVrEY8lJNDdV/a2/51\nJSof8b3lmWEuTaROKiBngs8RcFzOZsfo5xrG0iXlh62tZ9RLX7BzY5IXuebI\nS7Ynm6wmFah4dnT3Qv9fvAfEVQ01J0TNJvkNLZV/RgjxX4Y0bBMjA0L+TkKX\nT1mRdG2UUCgGcMY6ef1aisN+opTvNRWTgaYFG4rHtkTgUUcTjGwjRUyMWmst\np0pp0y8gW6l/S5W8FUnyvp1LLanHRHv75wUtm8BhDi/LZApWOzTHwWm9wP5C\nhX3laH1wv58ANguMnKPNqOqB42L55tBGmCfJGIXbrHi6ToPXuXadWI67pgUU\nYKt/sjCRXQRxcNe5QmizRAbnHLy33i0TF7cf90Ks1aUay0oGNnwae62pmhE1\no8RM0HIG1DE3FPbVCtDTtaqaJ4cfJnq3XHRxygsmRoTkDwy/irMBEBoJwwNc\n9cupDOhaZ2fbAQ3q7GVpgINW18sBZTbnTIzZn+uER6IeJOJ2dLsarS5DRCy8\npondhOku0E+IFIZMNPnJ/gFodAnzI5FfcTUB4aG/y+bY/Mk+iX6K2ULN4vjG\nZSec\r\n=ZYxT\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.10_1524673533780_0.7307731495048397"},"_hasShrinkwrap":false},"2.0.0-alpha.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.1","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.11","dist":{"shasum":"3ef34a7f726e91b2122fa8ae2b5b48771e3e3265","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.11.tgz","fileCount":6,"unpackedSize":34297,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa4hhHCRA9TVsSAnZWagAAX/MP/1db8lr99qmElh2rwfrN\nesWK1UsPJ9BRkD9W9/GhM4lQMiFdR4960R6Qh3z1/LjEo34uFlhvgFM0VpmV\n5gOaeYUgBgFoskMfYazJgNdQxHK+wlJOGYD3WZgvj7CEIG7jX00RYJ9wA4Ka\nWnffswZ6XrM2vc63HWN4JVHBbpMMDtNnC6dM5PcqW5nUq3KUpcjREv48nD1i\nS6QiPiAruPrmRJkhtkBSjGCUmpO+M99mXpURy12F9pkIvqQvcnajM0ebCwZ5\n/HP4/r7OTUi2RdCCY10b9UZb1GguTidTRImvcqzZj7C9TezDbu3TR2HoyUDv\ntwqg8rZcRTDxYqBXrlTgZFuwfazmCcSUzpSCWMpYZ2jbM9pJUMpIY4ZVqFQp\nwjRn9QKrcjsu6dlWpoKKlhfJ62eKwyGQwKiE65jUHr5NtRQy+rY4WE8KHtUZ\nLUpbLzsfPemVVcXSROa219naDwHvKHPJ+gVAPGvTtBqin/zN/bL/eYQcNwiw\nongFrGTP++ydK5FuLB9Tbdz9ooLfDo4rSjIKXrcbwkzriHXu2ZVHoa+gK2bI\nQ1urS+eFb/V133Ea2IsbJVaezOu79ghNpTp3uNepIljIPYsP0uRxTR+8Sq4l\nH+tO0T9g24Q/hNCQSyt+D0cSc7D08N7aHCKH/G06fZQbnWwvPxm6GrBuPcnJ\nChhj\r\n=RDBi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.11_1524766790419_0.44574358187193464"},"_hasShrinkwrap":false},"1.6.44":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.44","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.44","dist":{"shasum":"397e53e2962e5e1dc870408610aad7d6d2d64cb8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.44.tgz","fileCount":7,"unpackedSize":44619,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa6AgTCRA9TVsSAnZWagAA41gP/1s36CI9+RUst9aOEBkv\ndVCk92KvKYlq5NhWV3UEmVqBTz6g+cIWuSiW4+AgMuj6k5SWAOz4xcgNaiSN\n2iDciuGGZguL/O2Li4oGlxWNE/Kid47XFTyd0YVt6BceL3topPdv6Un1tFTO\nGMJyQ7F2zsdVw60enFLnRmu0YhZQr3Z2I37dKYkTgNLRNiwEIUSGod+//LL/\nR32SyZUgaPXPsgnfoU+glQI4XyMo5d2/qy2lbX4OfM+4zx7WrWUiXDuUUvbQ\nQSfWb3HqSoOylDZhyUAyb8HNM7NF2s+p1laIiJ8xRDvgS/ww2IyttG3XmDj1\njmd/ZV5T0hEN9jTjbOMqd8+echgASnVq7zT8QcvLSAQuyUAkbIIvP7uhNRfV\nVQFSGQlkhz+iFRuTgWYXSu9ZN1dVkFiOtHt1BfiOC71iOUr9oqV0e02W+WUv\nwOjHWq5AqnUMeWc0eagKA/HjbHs9HcJRTSQ/UQDCZ7RJY1wOTbaT+9J9VZcv\nDiaILdb86sqbUiYusipAkGl97Let5jRFUxmeU9125SqE6JbG+1t5Tl4JkCX3\n89B5ZUbtBZde8Rms/ze5ZlVSgMHZHUmy2xy5peFrH4qGEpj2qoF1Owk4DTlD\n+bdgE+c6tpdcpiHZY2vmGQS4Sw2GOdAS8JnH4q5l157uBT/iZeEld/Ej2ZUZ\ndI7D\r\n=KUkb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.44_1525155858172_0.8039400601218609"},"_hasShrinkwrap":false},"2.0.0-alpha.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0-beta.42","@babel/core":"^7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.12","dist":{"shasum":"5c307a919ea2158f8e0a24c46337f4bec9f284cd","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.12.tgz","fileCount":6,"unpackedSize":34297,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa6kPHCRA9TVsSAnZWagAAd04P/2mv7sy4pjM20X3AQvKI\nt4PCoBuQsmZItFaOoD5Q4F7hVDMz4GsuWCf0tVjPLhfosEVuIyNX4jzAUTwU\nDDVe5zt3z87Jk4vCaowqERYyFLmOshjOdVl4p/kNPNYjW1rK1WWeRHyehmCg\n5CcRpHYLBCDWznVw8/FNxE8ThueJq/bi/CT9KhxPWvJ8DvIiB99KKnL35+5J\n1zqfBYXAuNPviNSVj2v450YBImJNOSKEGpSCoqv78atPBDUMipnsLjnAgIDn\nQtmNd7DGJphaA0bTLGYYgFhzIM12nRWOhOR5LI4lbXL3JFNpB9sCBjCO6cIL\nxqy1bwC5tB6gP9KBKnNwMGLoGZ3RQrNifyV9CHAhpSWFifNljFHK4TuE6AIR\nWxwtla+wgOHcn8g6vSDaRI71B+Svo+PC3veN8WIBZuByS1oZdszMc4W3skli\naL0W5Ssy+zBl0m/kgNgiIGhedi8bvp9TYBEI+Gy1b/HYfdCQzJZca50/2jlm\nAhOqm6rVoD/8RRcJsNon4XJpJm7YAyB6gk5jjpSvLKahwViE1o/9XdpUW5Ca\n8hrJPvBznuo/F6Mp8tIhdBa/oxiuvU9IemGLxc4GdJ8D81XnfPTw+vdcD7rS\ny4tDZHCSqYxrfkYIH+Zi9KNKshAax55idobrP1h6neGAWXkZA02UnsiBRUFF\nn+Hm\r\n=G/tx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.12_1525302214566_0.4699247231038992"},"_hasShrinkwrap":false},"2.0.0-alpha.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.42","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.42","@babel/core":"7.0.0-beta.42","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.13","dist":{"shasum":"021f7e0a9d719ba18bc5934cd6643d19f8cf1a2f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.13.tgz","fileCount":6,"unpackedSize":34294,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa9g6mCRA9TVsSAnZWagAAErwQAJySMwRBZKr+2U7q06CT\n5LqMHjXJWzRFnIkdhPsOBJGgtGWH2uXAk2QBo/BUWOQI4ydkuV7tsrNErWaj\nkZHXuSVNfdR9zdZbJBJn9JCsXJsFQjdbJr/aGOc9cOM6jxYesDYpQHUsET/q\nnm8vDXJrKpBt/vFvjsJleMUHdhxG5ikReCoiCfiGDaHsjLOSywrrO61JeO/q\n6ty5OV1MAw8epyb0eoqtd3iY8VradNGlDjcKWZRYzJWTIM0eCqjxubVzsrZ0\ny7nlsMLbDkYmpaYgaZ1OK5BiIs66nI1E98aTfI76iX5vW+3nEo/3fmfj/IRC\nvD/RbgTdp32UAWPsvzEv596sKWJrFX/uIe42hGUaBqvAMMYPL43mmMf4fBoz\nwM5X4pU+hWTbu4pZMl9uXMVxzeCUmWgSu6dZ6KhFxKC1XkqSJGGP8383QWoQ\nrR1TaJyz0pdTxvgD9m2HhIf+afvzJaX8Qapc/V8V++B1mIxgr/iM4MJWzddc\niCR5Ur8w3LPUL3CGgwiCZ8eulflH71JboDIH2+M+/vekqxE/Y5miIuxzo2bk\nYAgcC6NipGhg5iL9nSHLOI7tnfcNRl87Qx7rdApq45iwQhLNA58LSdjT4dJS\nIV5xosWd3tdT7oH2lAsFjaQYL4p1m7qcpqKEvKPh55SlbNHweztE8yqQA80e\nKH5z\r\n=vV2L\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.13_1526075045771_0.2896049996531451"},"_hasShrinkwrap":false},"2.0.0-alpha.15":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.15","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.0.0-alpha.15","_npmVersion":"5.6.0","_nodeVersion":"9.11.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-A6VZgKU/hMKiCTddKlDeI+mV9/DFJhbFKrWt3Sw9SxMYAqGFOwLGZJJdZ2yS7rOEfcnXwmWDU7Ms76ZIbnPOnA==","shasum":"4098f9afdcf0347c4b62afcf8b6a16337b89b650","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.15.tgz","fileCount":6,"unpackedSize":34348,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+z/bCRA9TVsSAnZWagAAYvIP/3ZKxzTSayDdxhwJvPl7\nxrBpPNBtUhKvVeRV0qSEPX0FjCQW5BAUdSVNc/Z+UyYq4A3PoirLStn0+ehn\nbXNqObDMH90UWiIOCLsqb0BM2+bClY1PiBV01jUROEAFjlal5dDWEY6/5ezh\npVDBLjvuR+GzZt+rRkf4XLunztkzirvxWFbQmrBVr1430XGR7YpF33Syo0zS\ngyqZE3xh6pWm9tNIOvSMVe/X787VUC0DoBjk0mwZF+PzLaopzEPGQMKPHkM5\nGVDnkvOgCtwLAF8myJQPgzQiScYPeY70+f77efyFgVwmLCsmS2auSAoPWMJc\nL/u+6HEfp4GpTrh+PdXWA2IVMWSg9stjnWhoQAOUH/KQqxYV6khAugj/1eKk\nuAGnjCgaBwXDFT41CIoyeCAAM6tcwYDC7fRQzQ62dl54cImipth8TgnV8yB5\n47bLtFgavtNcSiRXm+FIZBuDDu7gQZBc5ADmtDn66NkJrBk26btVegOiwDpN\nX+hT8XOQdmOssTEV9qWEsDEDet762nefdLcgANmVPZaGOibqydF3B+bJ9x3M\nszENO5Wo/Xh54rJzZ7fDdrIejZQna2JvooKNhml2XmMDsN4vdqrVLww+HYaz\nH7VG5H2gCVRVfl+sWZ/uINDXGN+8o/f2UEZnrZBX9vs4p4pETEdqS056PP/V\nf+TH\r\n=1BK9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.15_1526415322183_0.8823175040893645"},"_hasShrinkwrap":false},"2.0.0-alpha.16":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.16","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### responsiveResolution\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### responsiveSizes\n\nCreate sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, responsiveSizes returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nresponsiveResolution(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nresponsiveResolution(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.16","dist":{"shasum":"5fc54b11479c2fa4761cddb953b9e578292a00f7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.16.tgz","fileCount":7,"unpackedSize":33894,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa/vK6CRA9TVsSAnZWagAAIHoP/joBZjJe+lEhxW1C0Xk4\nBa0WmTMjJIXT2WM9F978KLCaLMnyRIAtlmSFqEQ24UiZQkK5X9wSr4pq+svV\nWnqfb0H7MsQQktD6YMf6ujehODVnVPKiXYMe18g8mKmsEqVVVWYCGk+ORGmi\nV7/H8aAVi4WMxRlQtd0M12cltAvmVknwkWed73RupDjHuabrhk4kJ+gPDgkp\nA70dTzrn1MqeBwuPm+B9j4N7pHLJlN+BwVUzT5cOPAQ6uitQ6sZIgXvQG6Sg\nyrSfTh6G6tPZbEaihSqFu/6u9bLWK5EfjHgKD5wCDh5XCN/M0LuRORR8CTLv\njPIRhNqJ/eZSgGfq8cYoaGMn8Nuf5KMfEial3ujDpSZswCcU1uAUsziXj7pG\nzaPo0l7gfPrWQFn9lp7ZpJLU7mShgKi1f+FCdzQQRnteNnz+CIbCah/Sh1yM\ngLfF5vEovkwkyW27YflntfhtGqcHS/n/oZ85tzIU1HC+KCIcy91i0wZfGk6C\nfYAIs72fdzd/MONhl4KZk9vxzXP0JFCwOl7z+DGOvO6d4X/XhYJ1RZ5d9TX/\nhm2i0PccszM97gs3REqOm5n21koqe+eGBCNpErEbXZqPGN9Zbdm/iUcK563h\nvq3jWsWFaKUAVJoz20N2HpsQS3mHbzItY5A8VAdMM2YChmNEKf8Bw3clOnHU\nLja6\r\n=pxDx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.16_1526657721475_0.31004445356739563"},"_hasShrinkwrap":false},"1.6.45":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.45","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.45","dist":{"shasum":"453057ffaa396bdccb2255d66b0740a426df307c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.45.tgz","fileCount":7,"unpackedSize":44684,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbD+zJCRA9TVsSAnZWagAA/wQQAIRCc+N5DCp2+udTER4I\nnnXKgg5OwvI88s6cNKH/ZhwxCrJOCIT7Qnm3qYNQ63CFs3PqEYCAM5YSoDzD\nOF+jKiN4hRuFf4FKYWJo4q08TsvdDQkdf6j4TomDRdVgoRIfzkWjTNwpuldm\nT+5zZTJyGkClL7Mqt6R+IFKcjHIy5yWwB1AcD/xOL2uuIQNvTvc5GqVEnyfg\n9U4TVqpmlHhPUemWUwxoYIgOEnZpE9HRJ0NOXeB2rfNhu01HlwjDzy3Tbcer\nEndq8lWTogUp1BL0UG5R39/V2pjZAHPoSefoSwXXnIN5J2DU9O56VXpgZey6\nCP1ui2qYAUFO0Xp2ELsG3Kzgy0OC4beO3aQfpw+qWqU68Mcx3M6ODrjbSBh6\nhD7l173A8TgXTTSqYDug3HGDBK4Da1AvXiRBVm2GUlFz5dfdS6JMjNhP6Vxf\nnegZLJKMwCQA1dz0m7lG/ltpjXxhKCVMPaZKYBK8KRK0hA6ycqLaQzlCluuT\nCwXic7GDddHM8Lcl0mjR0h8tyteWLgOlV+e/ymFjvsP/kZkestGgoBqbvryN\nrbKoQGsvj7/A8PdotfQfeNNpA3ZPExyY9vyPbmO2haBVQxbJP1g3PPTzUobN\nNnIWT/ZYdJXZ3fwK1ufRmLNiX0Cyk9r519NEQ5EuVbvPM+KZ7fpnf8SlzWud\n/D/Z\r\n=WeY5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.45_1527770311931_0.45246515583620384"},"_hasShrinkwrap":false},"2.0.0-alpha.17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.17","dist":{"shasum":"3b08ce30ccf9e9ed5fcbbbc04784c37fdee4a23a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.17.tgz","fileCount":7,"unpackedSize":33732,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbD/SCCRA9TVsSAnZWagAAGugP+gMufAn6lsyjRP/W4kde\nDS3zm+6yMf3+tmp7x1GP/HifSBTxBdGoa5T/FpebEtX7hsnLGhwUrhJcCCx3\n2Ou70jmtHjYk/zTwU+Ig8Li++wyxFSlcl136NtEPwbYN94WQ3IJXBHVn8RFa\n+OojgrPQ9gd35mY1UENEVWINgjQxLNazGLj/7BCd1VEanAgla4ky538ArvCi\nF9V3LNGM7T8naH5+X8JzJSVmv3RtsCc2bBTmwWr1t9YLk7PufzOt1fZE0/uC\nggAEf0vM+pEsrGILg+NEkhabgthGnanxfL4IuKTEWaBuo+4uZ1eUGKO61HcY\n/ojwbNsgcQKkpaugHJp+9EbE832pOBgJbUKX1N2UZ4cKa0uDLCnzYunyKwM/\ne1wWnxb3jLTrvUIsGoPXSJwRHbjOCC1ISWphU8U46/uiMQ167dQk/GkizTEB\n0vudzTY1CKZ3nSkI1hjaE2R7H69YhYnUumaoHdQRxUk5QfN06x9eRBHgyfaz\nHhc0l5SSCCVq6qGbNJNbOSsh1Bnu69moCz8WgnLup+2RcZ8ZBmWBjZOvKs73\nbLlBuZBRIrIXRHQxBWGHqijwRefCaQqVhrYguSmMUqtiZON2ZNEBToCtw/F2\nz7HKfJresWlQ3riErmqOwDDSEopE813i+9u5hTZj35K3Qkl2FEvoZrwRtNtp\nP5qg\r\n=kRL7\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.17_1527772289976_0.6206086673728406"},"_hasShrinkwrap":false},"2.0.0-alpha.18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.49","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.49","@babel/core":"7.0.0-beta.49","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.18","dist":{"shasum":"06e33b0feedd227888db360275e65651d9c0a0c3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.18.tgz","fileCount":7,"unpackedSize":33732,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEAEeCRA9TVsSAnZWagAAO7YP/RcBh3or/Q6Jb2bHlbzS\niLHH4xwFl6ol6/defA+in6wjZs/xoSKeTEbPL2kCZAU5bMpWOA+CHqTSsvzH\nY4JZaHofM9IRYDdjBfQGwItdBq46+J2vDvM7PtKTW1O2gqmHoDRsh5xg7RER\nPhLD6xRSuSl8acjSqtztjJMVvjDM2fizP+mK5ygQLZozMCjKMCA4AswiITUw\nNLEjIzzsVZ+hm2Px7Gbyhmu6ja4gqK4a7yFgpTpGSU5ljiGyF8bKZTJenoTf\nUp/LNu4B8bnpGNpI5OpXHL9h26kEtOSoPg8z2cHF3xdvEowOgPE0AMhzii2A\n639OC4MCChFVakQqp0vptz993oaTweArwrIjgJch3P7gvWkhe9h5z6bfzAVO\n2/aoXmBp+Ch39WQioCoh1ei9B//kAfeOWUDX8bVkIb2rSU8hy1bahjTYHI5r\nyoZS3gs7M97qar9pQN+hioY7KnBsgmn7XtpGxopkvyRoi2a1Bv58q8AXOkLy\nFUTO80kq08RJcz/aIzEAmteg+EsZE26HHjYM593AR5jaA2GkWj469Ll0OENN\n8h61Oxy3yFXRqA1FAx1+q7den5QYqrE1DrNVRYgspPIUibgMrHQprQFvRMfU\nEmkGi5Hr+fzbcXM4wN2mRImkzczPiwDigFVeeZ+nR11wu3anAdBa0BG8LTnz\nrdMn\r\n=zBNa\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.18_1527775518252_0.535011200908811"},"_hasShrinkwrap":false},"2.0.0-alpha.19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.0.0-alpha.19","_npmVersion":"5.6.0","_nodeVersion":"9.11.1","_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"dist":{"integrity":"sha512-1dvWoqq6kz1cnk9fzsS5giWJUrnI3M1unb3wLPYTobpWd47X1VlonWwnYFVt3PNwW1JS+bfFb4yt0zl0xnDObQ==","shasum":"59a3397ce37b8b9c5d1e684d287e4d6cab990efb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.19.tgz","fileCount":6,"unpackedSize":33732,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEC4eCRA9TVsSAnZWagAAhxoP/i03RtM5UJOVGuLv5QNU\nbZ0wLbV6F0AZNwS4t6ztvQ89Ua/65FOlUmXmGa8uE1vOA2qa+TfOlRN4OmTJ\nvygrA6VUX7p4ZSLfOwzuPjZ4DOU9G+BxucUo2RLdC0vbaeGrB/Wr69oMiorE\nrFt2IldQTbDc1UprKroAkLdn7rcGYP4KnXRn5ohEOfPgzt6lzt+IouCb5sxw\nYxEKMwL+V4HwVMjkIPBUZWLWEEbyhFkey6U9I++6+lcYyk/MAiN+jn3WaEd7\nGVP+7NpVHiiudq0Ivf/cq4rK6ROp9jXM7kbPO1Nkqyl418570rTO1yfUJ/d3\nvVLHZrLSAhCUfVibKaOx/GsI6dGHQNRiC1G8keVCAsCT2wvAZb+FJ9y7nTYl\nW3tWGWV/Yic68eZGzgaQ7AgJBHJuEyiMSYNpdGTs7jW5KgjntYjbIiWcEzfP\no6UkagCQ9I7kNSsrhDG2l1hccg4IaGCfFz5pxQt+tXvXzksVNF0NVq1a2CKd\nbsT/Jw9zuk7+VKbaa+R4FPGollMAA4whIVZwttz0FSxJqO9zw/+OivhirvFy\nmQo585Wf0MJBqHJdQd9cXAXY0AZcQXxUb/8VYo9OT+g2DwWuqNSyKSvaybBC\n9eCCopsJPh/BiYJMnugPC1kAabZCu6uL0tmZ343Ed/tRHnF+5CXP0NfKZgz4\ny07J\r\n=HwT7\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.19_1527787037183_0.05141903945370152"},"_hasShrinkwrap":false},"1.6.46":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.46","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.46","dist":{"shasum":"3c253e0e37c93429736e8b547cf24095fd903ae9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.46.tgz","fileCount":7,"unpackedSize":44619,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbEEL5CRA9TVsSAnZWagAAPjQP/1NqD1WsyecwQj1Ic2/+\nf+EB74r4m+d9CMFoC7wvDrNslp7WLanf00DueGEqdW6iTyVMZJ0KiqG8LxCc\ntyA/xToSf7dofs0hARdXfqzu8dtKRDjKKry9QtLUIdqP+zxuaKEs227vb+ig\n5tj8CSvKoBRDepzFNkmLkHVcXVtLRt89Y/owApl6FrnVwg79OqqUDBxCZlNT\nhesA3fw1J1wBPGfeohOy+i84kTE7CSJPxwE8hVkGAXK6RsuLJ9IOb8CCmexQ\nB1vNPWIoKitox0SWyh7YgbFBWz8rAeAgg5stPm0I0lTnWvK6WGyZH5dwMA+k\npqgp64yJHY9KNNM1jELMVtxtTd8zwnAJeUcAP15vcS8NUfOVsoFVZXivYqNE\nhluJj+SISWWWEKMylg8vDOloWY+ayd0RfaYCTfgLUm0aP9NVPuc4LNvSs7i9\nthDctEAG4rpEZLzLTOJjoTUtrEfj12f6hDE83DEMa3IWfDfm699pLoaTtQb8\nsM/UfBNe3ZugTt5np7LPWgnIiGZwvL8iOr4/Aen3ihNOpPpVhBVes5F7glqU\n4tryeu6SR+LcwJKBQH1GLIyEkJuk5XE6ljcgArxjzBKw1r3i0lNj4RU2iVDN\n/LKJm/dNC4KB1vmBaw2MaP7sBChDGBQZA2WZMh53NyhRhObUnZXdOAzEjjnx\nRfIp\r\n=k8mA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.46_1527792375933_0.5311719449365961"},"_hasShrinkwrap":false},"1.6.47":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.47","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.47","dist":{"shasum":"bcad9de7f5f269d2415266583c0c3cf48611e165","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.47.tgz","fileCount":7,"unpackedSize":43788,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbGF3PCRA9TVsSAnZWagAAKw4P/jSvNxS6Z5iTxCOFUsFs\nqSUBfsrQujFPUHe6wUupzLXmunmI6bbk85tgCMFnN5mQb+YNuwd7IWD4OfWX\n6UxknGAF/cMKtGFdoZsQcFLeZNm25Q5eF5ht27lRg8gml78hOQO44AKcCJ++\nFD1PLs6EFkruzM1nNlGMJq8z7hcdK66qbrPH5AJ16LNVp6iuMdiKQcaKsXjB\n6uIjpJ+Kruusb4JpFx9309KB+mMf9Gx0sTscpogkdx2fcFRDa9qOedZbFuvE\ng5+YSYxewXyEwG92kUh5zObYSZ+8ZcmTJqaXHLqSQFvnAfO5FKYiiD8ugiQ/\nrQQPaLY+hW3z84YxEW6eKhmqp6EMtcLKVIIyk23HYGfi49jzyv6IzI/yqPcF\n4i3B5eNepqEpOneL6u8YqEplOmBZzusAExTTHrLUkNLHM4CrC/QgJ4hwuMRN\n6T2OxqKRISaMxSMYLvc8ygp7haA1hNE1prW3s5UUIt0u8P2NZu+WMQez6TLH\nsMXgLD6EWbd2i0RPVmbQwNfKqVzvAhcZul3evm80jaecT2j5wicvcU4QQWXZ\n4IkqLOEiSGdjhFQvQy9r0QVe6K7yaCrWdWumTWx0AfhqIhvXswHMweEnPsha\nKUr0/3YmP0VrbpwOas24vKStLykwj0b905TpTWl7vX9677gncnLHdw4kTUzq\n0dWi\r\n=LxuG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.47_1528323533903_0.3585329980167482"},"_hasShrinkwrap":false},"2.0.0-alpha.20":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.20","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.20","dist":{"shasum":"9a5637f5edc3eaf4f363c82328fb4e111b867577","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.20.tgz","fileCount":5,"unpackedSize":29779,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbHpQbCRA9TVsSAnZWagAAbLIQAIiCHNHWI+9FhSsuu521\nTZkRVpnDFcH5P8gSvsTjiBkr5dZTt67UhkNTuKoHNJCpkM0qi4xQJ43Vtg7w\nyv768x/bgrfNAgyg6EOPXQCoxMchmxN5H992XJ2IP2imuDIBjP4DzCp7zv61\nHMr4Pj1L3STw3OisD4HM7kEXqe4oGDsKocpDeEx1Hd6TMOr+2DXqFd1PcyeS\ngLAwGkol9TTT7+HVS/B181qAeehsycoRSyKfFfXYjBklE5dTl1R1DZK3iEmH\nKguS6Q2T0DOrY0gIMK6ud5rOr/rUFecpZHCIkfcKxGQdHTqz0MqT4cs+zTNC\n1g/4AY/AenwUwzmn4ERtCO2CKYv/igBmlEMCQz+QvLcrVqg6qj29U+Vmj80v\ns+z15YExjXI5ojdCOLPo745uBpaQR4wKpCDd3IKv2/pr12O4Z5NAy4deTvzp\nYfJ4utYD43U3Zh96bzFvsbXlQBG5PUXBfvnzx2tuDrvqYUOJeeU89f+Oa5Iy\ndF6u1QnBEjsDOrezYn7Xb4HwSupI07Riq+3R0vzjRzLcfhg7YjsaoI7ygXoI\nwVJQX2Fv8oRlKnoH+alK6zn+TxnLW0hHH/fxaTaIokGb8OBfuT7mr3naJhxW\nqPd1mJZwTzDXBGq9y1supwAURJUdW228wax8JctEmPhNklhIBFh26b8UEbtM\nvKIn\r\n=eC24\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.20_1528730635060_0.7520463745002579"},"_hasShrinkwrap":false},"2.0.0-alpha.21":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.21","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.21","dist":{"shasum":"27c536ab0acddb41d21dc9cf535f9fc9ac0fde07","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.21.tgz","fileCount":11,"unpackedSize":57037,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbHql/CRA9TVsSAnZWagAAGjAP/2w6ahdMG/prBHb+Uv4r\n2pBM4IMl1rW9B9PNbElbWmIZujJ1niTNEjwiTqCSxzexlzQ5h2WHRjVu9ldY\nCIDgYH+Y5IqsXaTXphfIxp54+2MC3KcabZYLpOQSX8aBiq/tXiihUiMBolzE\nnx57CGKBMTU8FOVJ/r4gJne8nx1bmvEOQgW2EY2HW82MqhdeM0RouP5mj9cv\nCGjh19gNaEY772O0vLNYr1nFQmwtkMeUoNleJzO4UL3LUnfzU0WD31Y3I/ek\nu+W02YHL56gORYOh1hvAS2O0z77fI5sL4DzYOhtF2ax4ITWmArE9V2hRW4q4\np8E7lMCTCTjD8Ec20KVy4JzWNKznpFdt5Rbjx8mjY20MWynBIrA2pOw5vxAG\nh3y0wbOB6mQnsuwhGRfJdcUsxbl23kdyCUz5gfcPnelGekC+8nhE254uppLI\nXYnUggXgy2jO/3ruhAeLyEbqFCpyRvkqGsHxa1gnW4KeRUMmpJpZZ8S9iAZb\nMBEztje2g4bKJmAr0CoVYqkVjR3kE8lqm1PQfwEmAgjP+Qy4YbMgkPU+mkmO\npA38CdkCZn7UyKQ11hAp8Zte6OahC2csacncaRSHq/cvIG1+rbTwb8nk5FU3\n+GNU0RJgAQeDu++FrkPKM41s5bEoKMfVr+AFwNUg0AA4GP5pLTxZSEikrUFz\n4XD1\r\n=tz5o\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.21_1528736126417_0.45764138892386574"},"_hasShrinkwrap":false},"2.0.0-alpha.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.47","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.47","@babel/core":"7.0.0-beta.47","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.22","dist":{"shasum":"f1a54a0a440913e37b97c935803c7c65f2b4dd76","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.22.tgz","fileCount":7,"unpackedSize":33245},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.22_1529176145605_0.6251560234439157"},"_hasShrinkwrap":false},"2.0.0-alpha.8ac171a1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.8ac171a1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.8ac171a1","dist":{"shasum":"5eedf6d3185a48a9fe55d5c59c10a43f2f4ce447","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.8ac171a1.tgz","fileCount":7,"unpackedSize":33251},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.8ac171a1_1529177139661_0.14826382273918304"},"_hasShrinkwrap":false},"2.0.0-alpha.e328d33f":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.e328d33f","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.e328d33f","dist":{"shasum":"78898ad984d85d4b4197f4130b05ffa22d2b476c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.e328d33f.tgz","fileCount":7,"unpackedSize":33251},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.e328d33f_1529177585096_0.6094352416755384"},"_hasShrinkwrap":false},"2.0.0-alpha.80a21f04":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.80a21f04","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n* `jpegProgressive` (bool, default: true)\n* `pngCompressionLevel` (int, default: 9)\n* `base64`(bool, default: false)\n\n#### Returns\n\n* `src` (string)\n* `width` (int)\n* `height` (int)\n* `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n* `width` (int, default: 400)\n* `height` (int)\n* `quality` (int, default: 50)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `width` (float)\n* `height` (float)\n* `src` (string)\n* `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n* `maxWidth` (int, default: 800)\n* `maxHeight` (int)\n* `quality` (int, default: 50)\n* `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n* `base64` (string)\n* `aspectRatio` (float)\n* `src` (string)\n* `srcSet` (string)\n* `sizes` (string)\n* `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n* `grayscale` (bool, default: false)\n* `duotone` (bool|obj, default: false)\n* `toFormat` (string, default: '')\n* `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.80a21f04","dist":{"shasum":"713cc189feb754ae9d75203567031fea23f20cf8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.80a21f04.tgz","fileCount":7,"unpackedSize":33251},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.80a21f04_1529177837714_0.022735893368089677"},"_hasShrinkwrap":false},"2.0.0-alpha.23":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-alpha.23","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-alpha.23","dist":{"shasum":"b3adf88fa90c5806f76f2fa095fca0a8e5ceff6c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-alpha.23.tgz","fileCount":7,"unpackedSize":33245},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-alpha.23_1529191981160_0.7683867767626498"},"_hasShrinkwrap":false},"1.6.48":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"1.6.48","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"async":"^2.1.2","babel-runtime":"^6.26.0","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"5.0.1","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.0","svgo":"^0.7.2"},"devDependencies":{"babel-cli":"^6.26.0","cross-env":"^5.0.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^1.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore __tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore __tests__"},"_id":"gatsby-plugin-sharp@1.6.48","dist":{"shasum":"9bb7515da9c7753b3065c51b2d35a0de5b9aa1f5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-1.6.48.tgz","fileCount":7,"unpackedSize":43788},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_1.6.48_1529200395072_0.1157662830346069"},"_hasShrinkwrap":false},"2.0.0-beta.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepublish":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"62bf108b5be5ec7c1d16b92c424209514a66ec90","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.0","dist":{"shasum":"35da4d7332c3d2e66bab227cbe5d18984d28b42f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.0.tgz","fileCount":8,"unpackedSize":33733},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.0_1529218440281_0.08326683782178534"},"_hasShrinkwrap":false},"2.0.0-beta.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"2914d2ab77b13de04cec7bc5250b6505f2d67a62","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.1","dist":{"shasum":"b62701119cbfa51dc96c1d09d1111c2ba5702f56","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.1.tgz","fileCount":9,"unpackedSize":34007},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.1_1529223178254_0.6428353007135723"},"_hasShrinkwrap":false},"2.0.0-beta.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"202a8dd21eaec6602cf7a3902a8683341071af27","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.2","dist":{"shasum":"ea7e42d1ba7adbeebeeffe3ddafc675d6eb2fc33","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.2.tgz","fileCount":9,"unpackedSize":34282},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.2_1529527535487_0.15449086255537425"},"_hasShrinkwrap":false},"2.0.0-beta.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"d4211dda83db9af87530d65e843803db94370b65","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.3","dist":{"shasum":"60694118f8acd899d87c816c554970a6ce710a02","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.3.tgz","fileCount":9,"unpackedSize":34638},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.3_1531277897997_0.09250436311218557"},"_hasShrinkwrap":false},"2.0.0-beta.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"eb5c9cc730f98c2a8c441096fe974f021efc5e44","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.5","dist":{"shasum":"4e09abdd5b59753ca642ed246c0402d2409ddbbe","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.5.tgz","fileCount":9,"unpackedSize":35223},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.5_1531448724532_0.7440275884720813"},"_hasShrinkwrap":false},"2.0.0-beta.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.51","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.51","@babel/core":"7.0.0-beta.51","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"917ca71bb9e4c2d0d62bb644978de1a94a18e0e8","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.6","dist":{"shasum":"e9702d40bcf34b1f3ed93ef129c276e20e92062a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.6.tgz","fileCount":13,"unpackedSize":60063},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.6_1532098097143_0.9128594816655444"},"_hasShrinkwrap":false},"2.0.0-beta.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.52","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.52","@babel/core":"7.0.0-beta.52","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"0d9f892e5df04e7c38e3ca8cc32946d35e5dfc0c","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","_id":"gatsby-plugin-sharp@2.0.0-beta.7","dist":{"shasum":"3a185451ccde6c8a0badff82e449b42da162b6ad","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.7.tgz","fileCount":9,"unpackedSize":36539},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.7_1532188812727_0.17951064917533022"},"_hasShrinkwrap":false},"2.0.0-beta.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.52","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.52","@babel/core":"7.0.0-beta.52","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"e29eea37fdbed81fa043303be7bc00740c5e3334","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-beta.8","dist":{"shasum":"97b1aaa3832769c2e49b892840f25bce35576d21","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.8.tgz","integrity":"sha512-wjDgw/X9l9osla0WRsRy4EGqEU3hy5FGoG/wq7W0dbWonbgTxiICfQcnLSFjoUwkzI3OFc/ZonRFHwf3CFqU/A==","fileCount":10,"unpackedSize":38022,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdXf3CRA9TVsSAnZWagAA1VAP/2xib9HBeIPQ5XkZwj4H\nHNFy8zdvT2AK6K+k/sBnTBJLRtJg8UFsY4d6MAn/8Jj1JYK/00cCirU+mOn3\nRbNcSsJhz+eMxiwlTna3IK74iZHxjskwRIZzlI8duMf3MzDTfMDhokL8KgM2\nDUw4TfUL1oYfQrEKyMgzCaXh+Rk/ZYM2sCzElI7TuCYmfAvcItf3UUTvP8F/\n7vBtGwMqso1TtaZnjKL0i5hEUxJAgAAUkU6LS6PR4LaH6ziC76Xe2LzcmmUV\nMNKiOPUG1583+O+c/d5BWUm77jbkL5yxI7SSRHvoZsQBKhSK6nJvS730nwia\nhJXa/KR7976bzcytKK0b5OcaVQbPdhjHJUoYOZ4yxPyZg1/r8QHlW7dl0Pvr\n+WpctFNjQgqhbWtND+8YwKAo+iNfKPpuTQx13EC27Mg0/zCZTAHCGIZD13ge\nFUcH6sqnDxIdGxDmke1RGl0NITKSziJL3X+HKSPsM3J/6o1KTBkHFcFfsqAM\n6sAYFw93HDFFq0OoHZoyTW+PPABJ91WhcB1t8vBWMCld8Vzc63fr9kXZwrtQ\npMjnpuleKyfbLnQzPkVWXeCgdXM0qzae1agNQfML1fZOB0ahU1L+nSbyOiqc\ngobNRh1h2L3rnlJp2eP6hq2Yo6CXRmbriDSpWG6W+VUNz8qDONzg2LfeScQ5\naL0+\r\n=zZ45\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.8_1534425079124_0.8120390828374326"},"_hasShrinkwrap":false},"2.0.0-beta.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-beta.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.52","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.52","@babel/core":"7.0.0-beta.52","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"feedd76675775e59570dec1488e1c0cc72f236e1","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-beta.9","dist":{"shasum":"2ac33084ea0ba417c531122c06d540eddfe1eaf8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-beta.9.tgz","integrity":"sha512-YyNyVIJecm3Ra4YCMJf9dW5MQUtFX1gy9DaRtt7tPCEbRVwgANNPU8vfO5RG0Z7jKLscO91CDjmPvC9DBzh5wA==","fileCount":9,"unpackedSize":40276,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbdZAQCRA9TVsSAnZWagAAjY8P/i/lGkk4WWA4XlvakKYG\n3aDh4zPW3FLsykE90VtrZ75r+zyzfLOXQiu1IprkOoNnyZppOkPXj48sEl2D\ncyML5uyCrQqN8atrD9HZgsVvQQ1tD79Y0YBTLkOdjW4FqSX/utwRIqOy1NIN\nhwBxEmE5CLuT4oRV4soorS0vJIxk5mcf+US4nWv7FQLufGj7HmPswZsqz5EC\nu1ZiSTcb71lJGXqN9cTVssjHRg8tQJaNuyYNjjImhKfgXY797t2IsrhhR338\n3XhRzdMc0cTD7IK5wuh8bWpwzTkQ0oSr1kWJS5XT7Pqx7LMk+JeMzdIM2AlG\ngDGNznEN3zBo0wG5Y7PI13gnGfTK8dq4lAkuM8ZuhAL3kq4/pTatTrRL8ydI\nJPTgeI1Up/zL0nnLk5Dp5Rqnz7qXBhenGcoekWhDCSGMvd3y/ew086NI9bIA\nQkxzf1E+eWZnbtRv36GRI8JVSeanO84VOZXpgwbRpC5GVzzKu+gL19aOv3wx\nhc+OAr44CjLlcogU1U16WNbXz3fakbL5t6Y/LhbHJ1vG8mw+e0zTFc9VOUkB\nvZPBQ10hYsxz8+DG/QpmpMvKtUmx2mPdju9npnZ0m1mfMPvEehm3vE/iaq5t\nbrpaGK3YpQ+BavSIXFjlekaj5cZ9sfrGEqOPSgZcjNGR1jzt4nO+rJXpzCNQ\nwkJ3\r\n=f/aq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-beta.9_1534431248133_0.635804585461835"},"_hasShrinkwrap":false},"2.0.0-rc.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.52","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.52","@babel/core":"7.0.0-beta.52","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"1b29c4482828a533a32017a624d5a01c8a8a01da","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.0","dist":{"shasum":"a37de1092bd8dc6e04725172194507b8682cea96","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.0.tgz","integrity":"sha512-yJeoMufwNlaSTaC0jVfXNAL5zNA7fg2DqEvMssLNCg1lzfmVvNLR4Qxam4KKKPvcziG8jjEf0dZlFcOMgT8ITg==","fileCount":9,"unpackedSize":40542,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbe2PKCRA9TVsSAnZWagAAiY8P/1c4BF3F/3SlR0LIARyv\nYha0QlneqGIkfKSPyID6NovpMwyK+LCotzwAhhKYPRQHuY3NI9pSWLLyZ/ta\nqiknGl1vEY7Ny8MDm5FEWSPLXQlp1W9HZePdXfB+R47onHzWPdKGYWqvGL4t\nzpQIvBmhzmuyKS/iUxMv91SmkmHJb+TGztTGpRxdJluXyba0jy5qrygB/zLL\nPPqLp24uuU82bwX8RoFQ15IxVBIAS708W3c1ieVH55QA4OGa3fr7TRO9AjFc\nHMHwi4sS5a18lQNnwzEcfhznD/FUMlqO+88V3aX5A8MeppvA3sPqAwT7+5Oz\n9BtTslb6JuD2bcg7ZD6FrQxoIQCcym7DIV3WF7XzDnfs650ixakeR1F5h/f2\niO42OS05Gy1YCxU9T/zzViX39YcxzGdPv9v/8KQ5QmR2iEqBv6W1yHZBEO2U\n+SE6+83oy+09Odq9+1/FYf6vZ+mT9RUWQ1ramclXPi3IfRfYMucOmx41q5hu\nBFzk6IbUK390QMxp6WwsclXhwX93YlyAQFAvK7meQD7t/yNpw/4vAV4NmrNn\nHE+ANZmYdjhWqkWqJy0V201Zo76adVxjk2ut/gk7AL4fFDMB4G70DkNqMi3d\nBhWUB8FfRErpKxfl7Pd6421ykVFOOvLu0GNXcUfUnFB0TWnHbwV0CSKB0YH1\nKqWs\r\n=xmWr\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.0_1534813129509_0.20947666992069625"},"_hasShrinkwrap":false},"2.0.0-rc.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"7.0.0-beta.52","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"7.0.0-beta.52","@babel/core":"7.0.0-beta.52","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"cf39c4630bd2f8fbbf44dd55dd2910553221040f","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.1","dist":{"shasum":"7f7704e4c7f6182b3b4d1247ea72a6ab0d0637fc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.1.tgz","integrity":"sha512-27ohOntX1WLrwwQDpDlVvM0s1kuMzHX4KUVkzr36TkIMr0Jd7f1UH0hNRFx/DCJcE1L2xrIf/XLHPExqkikQ/A==","fileCount":10,"unpackedSize":40880,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhtL+CRA9TVsSAnZWagAA1Q0P/3WKQ3SiJwnap6i7PmSZ\nrbBELFpcHIe301jGz8kKctRYX0eLCBRlVvgGy9ZGqC+ar/HF3DPi3EOxHEpn\nhcQULlVVdUaaMBKSvR3ADJNT+233l/tc+Ne4AJzXmkam0xng2KhQK6VKgI6f\n35RGF4AX+2nQreMixbOPm+u3kauNu1WGkeiq5eXlqFNzaSuJEYZRiO8gyFXs\nqvg+gCwdqIsVKCcSqfHY7xj5wsrEZ2W1hG1h3foXePvRb++sU3yfXGePLp3g\n3xX/QV4x6C6JoxTqqHkTMVbbT9YKTLYwICvZeI2LGiJRETkAs1UgRsakQklG\n3BZxvFUJwy2EKW48n6QHc0dzE8VtXKAMpbVcLo2pe4wad2CGNunhF3edfTXV\nXZpcYZ+PlUuyJ/zpMybn/4wtDQLICqNCul4BCK1vvwWQIHImYO71oAI2DfkV\n/80uabRqIwyL6tjVzNTtEDGF41ccK3Wz5Iws0z4xmxvQgz/ksovQmLfDnRJ5\noptcul5VyXKTDat7BQ0bjQmTe+qxm4oJklSi6+lOIUDBJ3TDzN7grZFJHTUb\nn1UdKZ0vmmNuOieIJNnYVnt9a2R5LGdEzvPFdbPa2vDgYikEgF+/3SjbIjuC\nqardnQynSEy5hfXk2zaXK3kDAAbdSBbgfv1HkPICLcujlbCbyyLvV76Cjchj\n9A7S\r\n=huX0\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.1_1535562493572_0.5172592020405362"},"_hasShrinkwrap":false},"2.0.0-rc.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^5.2.2","imagemin-pngquant":"^5.1.0","imagemin-webp":"^4.0.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"a8a4c69c97d9d7f59a7bfb50e7d1fbd463d2e012","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.2","dist":{"shasum":"bdcd54ab4473d1a7619c3766a3f5eaf6b5c67aeb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.2.tgz","integrity":"sha512-2UDJeUSu4e330zz9ej5k54ntqWsYuom8qPuHCX1kG+5YheVU6VC7lalc1wjPiVGzwzy3uJGkIXWoJaUIloQNCA==","fileCount":9,"unpackedSize":41125,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbhuX1CRA9TVsSAnZWagAATYIP/AkIWUelJoblZSdgYBt6\nF2gAiXPgHPizv10ajdOmi8QJUfYvUMlFmZPfSNw8snn1UeUA5wbbuwtAUNLA\nbETUEBOuS04wz0Afb9xZr+O4DKPt69OpdzQa30VbGjrexBiL68pD4uuOWiST\ncdq6EADyPnJU+mQ8XkIjF7a1mufUIUJXG3W0oxi/s3Jwt4UyPPqaHeNoh6QF\ngyHy2BnRyaqkZqasUmObresNlUVxdvF2yVAL0BYQOM++KBbbGMVh0OGxopBR\nSKYWh6qUUyK/yeDN4WVdbm1Qgp3BHtUkS3y4pxdlPcTZan/z8IsvSx87ubFB\nlqV5tdbkaHdGJtx7ONLUtiqJ6HFYoZVA/5wLmdi1aymA06E0gSrMwTnO9e7S\nISluqNyA1+XwHEoNEU+0Eey798y6oEDNYqJ3TMv5HuRukTpSuoeV2Xo1JVoF\nK55s8JXNHt8uV0ngR60lspfjnLx6ZTxSKc8zWiXC46uLDO1fFmCEsYV1fV74\nIXgCag11bYYpoofN+PX8SFavKH/OWPFDFdzF8VEDXFdiVjrzucWNZ9Uyruqd\n+igC4nRFGmn/EaTCBVU2JznJrdt9hTqwAQRW9cPN1yWzq9JCL0IRH2fgsGBp\n0UFT4i3U3wHOl+4eMA+HmLjOms4yEwCdcQVJJQ0lEKtRcTWU4Q4KbrhNZSmk\nkGj2\r\n=UkYh\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.2_1535567348663_0.034367381983964274"},"_hasShrinkwrap":false},"2.0.0-rc.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.4","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"1c2d869709fc2d7e4b445c31ff5e3a9eca5d3433","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.3","dist":{"shasum":"4949a144b1b642a9dd9ab5aa214ccb4c0c80bf9d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.3.tgz","integrity":"sha512-IVj3zSoWhP+/fD6muWpJnJ0aAYGYOlP9HN8lASexHTG2NvnXy16Oo8cvzNfpd2TWA5aJt7ZYIXs6sY/bTIJdAQ==","fileCount":10,"unpackedSize":41391,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbiVqnCRA9TVsSAnZWagAAq7cQAI5kxOVcLbZZee82S7tH\ne6Uo/gYhzWpPX0Xvk6DMKzzeiO8y1uRmfWejxO7BHBgzW/qxAFThar/CsQPa\nXVVn+Es4TpY7m4Sr7P3iufxCyl5cPaJ8DsRetEhf2SLfYL9yKK5zZzOituhc\nev4I57w3zfXyz+RyJAyfw0/lZd6dr8NS2zcYDkxLXBQFuVRLkw/wDS+0fw0N\nIJY2+QbS5pDb1H5KI3FR31azRtZK8M6QSnFS1OYmrlN+TjYIpAzorUFFfmM3\nrOiXdXdwr8P7D83Gyzk/3eD6SPHMCmqTdGemB0++FHZSUXuXN1UZJowI4ICn\n3cNANP7SzcfVd09MGfZkqQq7Axvw+2vo+U4NRc62p5hXWaqD22Dx3vyUgjFZ\n2kjp6FVrqL6P7eDdNBVGCysDPLx595JjwMjulFVmrIJJawmScR6DfbD0NyJp\nhH5asziKYW0nRX9S0YPIHhmjDYIXZMMeHnfL1vINHKih27c7vijPjgdZtRtY\nKpSmPAJi9bC8YpuS3jUm6T3MXaOt3lY4kadXmbQCGdpIT6kn3CMpDe0tGQqj\nDrv5WweK4yf3FSORNbexNt91Uhb7RHdMsGPAVgopytMmqXUkBY7zWcBSrMMy\ngddRPLWxmRiX69Qfn6XSkyxtTXo8p59ApTVUum8Ai6C7JsjR0q71HeO0N/Lr\nsnbJ\r\n=L3nb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.3_1535728294554_0.741082116383609"},"_hasShrinkwrap":false},"2.0.0-rc.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"19055ed19ee453e5d80c985a6bd3527c3f0b5da9","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.5","dist":{"shasum":"bdedb526335aa8873ed3bf2fb8a5741bed234e15","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.5.tgz","integrity":"sha512-1LkDV2d5D8oT5XV2I5lRbpqrs+m5vvkpzdbDPd3Wq3K/aCwGdGxDWGIO6gc1xhOOq1it4cjKbXT34bCBnj6Ayg==","fileCount":9,"unpackedSize":41924,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl52WCRA9TVsSAnZWagAAxnkP/i/kepU2s9LlAY1SNory\n8G+i79oHtrJtyMuGpdENaA4/4inHflLIaczCOtviu6+Vyl2k2uVZtGpJjFBo\n1I56r2i0fFhd1LR3P9XBkxnWK37FH2c5styfyCrpyCBCe/u7+/qcCFQ+3Msq\nYxOn7Qqboc/O/3pV3uwQtm2qATEo94BNRX/TZwmVSipoKd5qMUZQxCDDzzog\ntVsSpUWBi+e8IXFmvCjyIDYFL05l/3lEVxaDDq9MHMuV0wtBzSJ1J8S8YDqz\nwCqr2KSrZokzjewdwACMd5GF1QJMiLdhd2d5/t88f2oHlXKCRwun8Du+GEu0\np9jOb1HwJzts64HgNIrb+z0U5/3qkf4a0R9hd/sXjKcnUyRxiyy5t8SNGl+h\nUv+CLuBvgw/Q9cUMLlII6UMQfYMvQZ/rLsJf1qCrcnQht8ujzQoKaPXfuIRy\n8uiv7+iDNJdZ0Y6F7I7xJeHAczFYYQy8Q3zvD2gVH46HPP1txFYEdLCk0ptU\nTdHozOqBgmjTorsuPoREMIjSzvnvsyxGwQ44CQ7XE7g+UNx7UShGKFkabqzI\nzfwT3D5FyoE4vbOtHYR9DCJKcnRJpGv+VgWU0Du1O1LNf9SsD58r3VpmFTuq\nBpA9RICBcGIVD/CGCMYRAugx3u3WYjikXeuz6sQt7C12V7tc806rEf9/VpAs\nE2ft\r\n=ZsFj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.5_1536662933498_0.6219075490537718"},"_hasShrinkwrap":false},"2.0.0-rc.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"5bd5aebe066b9875354a81a4b9ed98722731c465","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.6","dist":{"shasum":"ba6383e0a4e55ac8dbd22c9b4dcee75ed7add23e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.6.tgz","integrity":"sha512-mQ71M1hSaOGeWV8fdwIGfNElQUEcfz8hpsNKN9nMPhVbxIV4LhpX39oIAmcJyfI8N5RVMnjUfDfYWrfi7HJM8Q==","fileCount":9,"unpackedSize":42190,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl6WeCRA9TVsSAnZWagAAXeAP/2Tpg/RCLBgsUba4la7x\n2fHq+YAVkIEvGQ7WXu0R8f64Im87iz0+FvcxXHp4N8TpBUxjb5uAJ0Y+OHnp\nfQPkCUJWuWI1rYH5Pj8OjwoMRAH4nVW+0YknM8H/wk2sytcMl1pEV2Qq7wwh\nG/mvELs9+w278dysqgez2euk05oCAMGAw8QfVYd7ba+LQvpduRRDT27IWHJg\n+U7Rk7fTs0A4BPSwrvqGhj7nuI84iFqlsJyQm/Ge2zbD3JQDpKk8oSe2eyCK\nUXNHTJHoDt5j6Aw7gt1X+iYpCxJnG7ozotkyzwvvQI6kOGKICnj4WR98q0A/\nLRVilZCv52/IYXyGf1ZyNF1hR7MDPGm7CiF7U4A8rzqeH+0CcbaKb4q04ZAO\nl3NG4h4Qv7du5uInetPqSAQ0g1ani7bHS+STc//i4e4g2l2deGCHJ/PnHPvz\npGK3A34O/RaXL1AQ7MxKbXtzdVVVnFUMc9j4sDg9ai4TNfg2Jp8oqtynGRBJ\ncz9W6VMpskFPBTjpNGzx3elp2uIbRuGSDeSopC87/A+l7Ye86QlAgmuptbip\nGlvS2dBEGjjQGyyMGiCsaCzaa/BIXtOIlvEoCc7f167pF3yjNmt8/7/vp7lo\nr/qXaYp/pc9r0vJ+2TcgiHtJIa5BkqF/OnnJI9NaTiO7u7pTkLrmrlkJMWSG\nezJ4\r\n=E8vk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.6_1536664990093_0.9229621086071356"},"_hasShrinkwrap":false},"2.0.0-rc.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.0-rc.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"dffb07d2aa98b411ca5cda99b237bcaab32cd1eb","readmeFilename":"README.md","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75].\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [`gatsby-plugin-sharp`]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n","licenseText":"The MIT License (MIT)\n\nCopyright (c) 2015 Gatsbyjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n","_id":"gatsby-plugin-sharp@2.0.0-rc.7","dist":{"shasum":"a08fac164c60c0b73ecd8d8e74e102e9e4c54c1a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.0-rc.7.tgz","integrity":"sha512-vg3DWo2cpVCp6HCuDv1pnC//K4xisctfElYE1wtp8ZApCNBd3+Yxza2PxriBMB8A2t1lCDT5vVE5OgwdICxI1A==","fileCount":9,"unpackedSize":42456,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbl7EgCRA9TVsSAnZWagAAfI0P/0PMA+xP1lyHkGXW0xky\nU4fmuuL6Zpsj1BD/U3XszNrmTLLGXNJjZ2l0jEm+1ybNIKbIR5d3eeUXSnro\nn+9spJ/or+HUpH124fZtLTqpIvvXoo8BE86mPuqEVOk8zPQbFn07V38AIxX2\nsPvCHlwCnRuVXJBs6y4dvHCF572/X3N8KhCkMXvObz7FC7sxLABpos3HaiP8\nqPa7ZFialPVc+27X6iTE4QtG+Qi0xmSHfPQm4ZTJZFVAiJKFlOba55ScnRC+\nS7bW6rFV3r/dk7FZx+VybU+KLKofWsB8nIduGn9uJn3WLNzbw/6Dm5HY/i72\nWEgmlgPXo5bHPmsmI/QCkVwcob0jxsYUnoiAXTFGDl4+dTrEJtVGzygfYGtM\nt3Ks4VSRJh2jg7HCvM3X/Fe40Q5Zoof6UaRrDzM0ZjsEtyN4h0/UtsUs61x4\nk3h04wTcfpVpjTtny/gldDXo7CQ6NY3bs2NIRinteb2W3szm0ENfOZTNty6d\n8mZ2PJeG00kYzypiHnWdlBgfp9wxDVz20nhnVfyIs+zzDIig6YaqmaQci7nP\nvvQbcMmq7k1zMrt28zsjX/FHCsPrz6SxTsYnK8UDoZ3QP8SfQCRlZdZO07kY\nCTJTtHuY8ySMcZhCmbz1G98h3DLB4q4v+UhPfuX7my1BTMUnwWuBpiN3FpfO\nMfGp\r\n=IvL/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.0-rc.7_1536667935536_0.3356635183086034"},"_hasShrinkwrap":false},"2.0.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"dc95450df6e853d04b0b8c7bd1b6e1a17aaae6b0","_id":"gatsby-plugin-sharp@2.0.5","dist":{"shasum":"b14b9e72fda65b37f862cad46d4d41ae133f11af","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.5.tgz","integrity":"sha512-KaMT0pzo+abATq28Cza/EqogPr+4LKVxq5PdxU+N0dV5pSdqseFuPVMx28E0q5bj1X5jeGj3rKW4Q5n93NCllA==","fileCount":9,"unpackedSize":81720,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJboBGrCRA9TVsSAnZWagAAZDYP/3awI63EbSWs96oPq5VP\nUOpXHQV+sIGtJeXhP/pj1fNOq8vAxRXQXQJ6vfbflWIiKg0O0iVJhNrDJX09\nHoCHO6hRGGNPL6fbBjUmbOBkM4/lttvGg2sJsk6LCB+vDksfky2P7j+Y5EjF\n1UwprPF1dlf+VWiT7MN8sLpqS7c79xmx/OPBMU7ukGVvwcuimfpa3s/YT0ru\nKrvTgAPFh2syp0jzijRKlWd7ztxQPjhD7H9FIGvacupmvNcNRF0WMRxCsXUA\nAbq57XHx7g4cB14EGRJth7Ldu7keP8MrV8pM56f/rwGod1JttpjgjpoF6uU/\n4CUyoHsLvnhhMg30rVpToVX4Pb3B/PQ8S84Seni/fPamSIIExotLE25dGCpe\nsMJiIl7ZyqVhgfIzUYZhCLfpR06cw2N3TTCr2q4Lq3b5pmPBp9z3P/2toQLf\n8AdLgykv1Fklo6oul7I+bCTNBagfN4BCEYnbB29Lg+fsJ2C7LZhTDBAEUZ3a\n8voA3BTi0qcQ+EB88+Vg/Xi4aVcT2G7vqSQeQUQbEtuvMLfwz+9zRfjyK80t\nvCUlRbIrmgFpvAC7etSmQImlfORAE2MqkgGFhXPYuIkvXgIdv0bHc8oimt/c\nDcCuWPmp9vbO1rtWEy2ajS/sfDW6bDSEavQ+Yk8QgHSudnrJNxZmoVuWzmgT\nkn6n\r\n=x3vr\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.5_1537216939047_0.8733369243678863"},"_hasShrinkwrap":false},"2.0.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"f0165839a52e44d2c3cb6a1e65b0c1174fb2406a","_id":"gatsby-plugin-sharp@2.0.6","dist":{"shasum":"6d0b7e7102fcedbe8d0018e53d366018ebc84fdf","integrity":"sha512-ie3vPvOkxoX+DLG/xyxg5Ibha3RqtnWZFmchYWPOdJDofKMA2rIiCMkTspSOA17yvfJf0AiqLe68Uri6ssw0gw==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.6.tgz","fileCount":8,"unpackedSize":44388,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbtQNeCRA9TVsSAnZWagAAy4kP/iCc9D3RvSMVtMbW8IR/\n0Zn2liyboj+ozCnuAnNoA1USsHepizMf3w4Jdig0ZvqVn/AREBCsEGX3QtMA\npeVyLsvSva7z67n56iWYlI4FQJp6VEwV4fGoUu249Gi5/CNW1ANIDqAIEGdl\nQyS4de8Ct35FjAxu27LUHoRmGo063KflmXFkaqg6WG+ubU6ZUWqW0n42Wh/O\nt8EfCeFTzvHnm0l+aWyXIde5+cNBOyMbPU6vlE8Ics0y9qP171ggnrx9OKb8\ncryuyygmjtWj/OMwAiHUTV+kK0yLVnbYtGyWOQh49o6Rx1nkv4WrkjKYOUlH\nk/Tilhmad6pFG4tL3mebTWxAUZSeCW9kwFXvbuOilvf1FHpIv4YNSQTRLOXp\nE+ea6roTGyGkZzVUUWp8zAbmzXdRKmjqieNxJWmvgQRiwXBqVbgFJpqIA48F\nGzadgPDK7ZJxLL3mt98+HubAKVJM+PliqWou1oZ8lqo8zXiw4KG/sEwokEf9\nVYkoXA917fzXJ60iC1x3KQ74QPTEXOTwlvg6Zq4NRgPztOv0OsR3TD8K8nvd\nYIs9Jg4c54Ws1WVo3+x5GWRjHUD8vjxccYEajnvUQIfTWvKqbmmf9K62QwqB\nY4KLXDpkGRp+KwYsxxqf8BC1KjG3pkOhO40XHV02X9QPDb//cke3/GQCOaOK\nX+Kq\r\n=h73x\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.6_1538589533566_0.9568744998664693"},"_hasShrinkwrap":false},"2.0.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.20.2","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"9b09293d8150dd9ba7cdbf2a5501a6904a56ee4c","_id":"gatsby-plugin-sharp@2.0.7","dist":{"shasum":"ee24e5ffdd52958deae84a18732dc3c36fddec27","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.7.tgz","integrity":"sha512-jXgRtGSb9Bc6D6nKlLaT7NhuhsQ1HIix/7NYs0LV3oTViGNXs7VEUne4+LlBPDuhqCkmb/N31YwToER1MZxx0g==","fileCount":8,"unpackedSize":46119,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbxTS4CRA9TVsSAnZWagAAl4UP/RmQU6Akc/Wdnm224YNc\n6s6+do67OK/fVN+GBxBolo0WFD/xOJF71pIcb0Z5Tfyqm1aoOhbkHswdu9zC\nBVyVGZH3nQMywzJCjGVhFFhYQXzTSvEsGtnM15zMSRUQPn8UIiu/9PX6m4H4\nJdhIlRHZg0ZOzzGwzCc8Jzr0TsT3Fb809Nu3fzTrAKah/OoYC0Z4q0HNQq+7\nEa/Yk9faCX6hzKpjNhOPquDH+A43NhwDd6EzRyCG26Vm42Yx7jbRx4bsqNfx\nkzWtJcnA+77wrYiakf+Df4DHl7gKYHbeEcSq8JeJM2X4tC4zfArmL3Nnk3cX\naHscFUMYkwyiwQNBq6bAEvBb5OZT3nbhfX9lHHA67zlW6jjTtErh6JcO2dv6\nsHsm+47+mlJ2TxAdUWoTCQlmZrJQy2A79/drdUP5d5yphwJE+SuTwFcWhLht\nThfcklygdfJXoMRgj4WjUP6vYDCCJSw12LZNB547Qk042babjssDyg0r17pP\nqBXpsQDv8477bCUAUuN8FwnTvxqqG/tVVGDLMmfJwiEcAaqOPffetGDiNHwN\nf2Wfey4+dIGrWrOfsyuP1h69sFeYaXW1V+t0dlKjzVD4t6grfvs79CIkOGOw\nqorak/6bUW42XVqSPOczhas8cjIDxB0ADLM2uI+/4PjfaGwrHTaiu/ijuv5g\n6qr9\r\n=aae4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.7_1539650743682_0.460289746643773"},"_hasShrinkwrap":false},"2.0.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"c80f7937b2d1729388b79eda1e3538e0e4863564","_id":"gatsby-plugin-sharp@2.0.8","dist":{"shasum":"a2e1172108a0383362f02fb0be3c5a6709d76fe8","integrity":"sha512-Nk0TAMgi0gtpl8s7fDQE9lCjXrTmHM2UKif1H51LqlZe+vya5b8cGLCTdmFNLDAsiavDwJP7L6r3uzcrJ7xMmQ==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.8.tgz","fileCount":8,"unpackedSize":46427,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb0KZkCRA9TVsSAnZWagAAdmgP/3+bnRPMo3k1E6B1IgeH\nfIPVbUVY6X6/x33zyE07gYmo6QqUYMK/Kxfds36c6FY5dF3RKMhetOpa4DbW\nRmFAx5kqAZyb6FIlN3VZyyZ+E0R0eh2HU+Teoe2YXA+SlXm5ZcrrZqvAD48j\nNoN048Vsde8F2KcMcxqyc6Sn2dBMmmBwwycN9xoPnl9Fcf551V7HxwxUJidV\nw3zEwb7m+YR8FpdznOLrtJ/il7XIIBLm5jtj7UZfINYyO71ptKiaIbKbPOGg\nDYAVp0o4PItagxgmzLrdy//9lMl9iqpX01ogue2qgs8CE8kml8mSyDh3coiv\nPNrquSCWonzqro+opaUGr6t1YXjkUQrVbttnnh55tNpHQ1E/RH0MNHXkrqtn\n50+NxIEGbehe0vooDSj7WulXcI/DB5Pf1zAEY+m+oKNJRlZ30eO5rpHm2tfj\nP75+2ET+arRC7IQnhODnM7LsC1PE+hnZeuGkuTELRJuG7eQLai31TRt1Xud7\n0fJTaBRKvdMbJT79xRpvrUpKi20pIKz7vUSmh05aBhvxrAWe7E8/rpcsB7Tz\nnqwbRY1l0GSHUaahhWMfGRb58pUTT3F4ya6J0FR/YtQd/SB3bnGoLaZCEqPg\njGE2cmUe2b773ADVVRuRYXDjotWrCeJr4TTce/tKFm2Uox1miJtrOGuMhdEQ\nb4KR\r\n=Sqm5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.8_1540400739928_0.590359107503059"},"_hasShrinkwrap":false},"2.0.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"dbd71c33ced0829c5f4bc552127ef80b4a7398a5","_id":"gatsby-plugin-sharp@2.0.9","dist":{"shasum":"c0970226b7175534d6cd9287974bfe0bbab51ab8","integrity":"sha512-NMCLLoP8k9nmmbkD3wFZMkcBv/IZZW+N7vF/hRxZythwNLJl+so3vumW53q4pEluO1wtMEXLlTwTPz2iJ1Qkaw==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.9.tgz","fileCount":8,"unpackedSize":46724,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1yYbCRA9TVsSAnZWagAABq8P/1vo7bZJNnd1wGDyu9Ws\nywunQ50qz6VXokaKxcmKNyTnKcr12S2806H8FBd3AkBaI5hCrxyJ/q+hIthM\nKWOUW8LLHoifcglNHcte2JWAvfC7rs/iX04d9mrKCa3piTgpArK//YJYAJL6\n0AKl1spzBQilzRH3FT6UYtHT9ydJQHr9fI1R2blRKEg1cydFoBbxQ32XI6Gg\nwVKWv1shSp5XHsb8VUlP1BBPLo1sWEC1V7AjgiiVZakpujeoI6tCZx79ll5S\n/HQ28LIlGtQuejC5WPWMbJ1lok9jln/g+JRa82PZitaw3W+nXUmf5z3O+HDr\n+ZTqFuYLFntTQgtRlQ1wb9dYxCBvIZciqsmVR+kvAVodQg0AxtqV23pmP9d9\n5VrVnwh9KnODu1U60fGFOhTihqp14TLwANOspo7/4jxVA66IDNXQzH0tyn/p\n1BYoaPIRWNlJNV6uT5ewoT61CDbsH0EAOXnI8Lmh2gV8Gfrx9VIL5dkB3uMI\nqnRmfihwknE4zACzZnluvlXnw+6iCzN7kEv8lX15bR5eoWSTCMgpaISYxJVk\nw9MF/hyYzy2r7tIXvUoMluC8+PwToh5CIIc50rqKY5PdEMfSic3TTtwhPNt3\nBnMsTvzebWSTeaPn0QpDqU7zazT6Ua5jZW3SpwagbQs5QkrnISQfBJjioUQ9\nosUt\r\n=wzzp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.9_1540826651060_0.9592209125387967"},"_hasShrinkwrap":false},"2.0.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"343f9e645cf5f6e011e962c69472a2c0144c699d","_id":"gatsby-plugin-sharp@2.0.10","dist":{"shasum":"5ce703a1d9bc8f70a84a940914404566e747d6f2","integrity":"sha512-pUzV/unNX2IFSNlz9u3a/uDevcJMCcril9So7bY+kZrQIb5RbDd2vnZiMebzv7RxfKVa/tpIbPbrZcEaVWVvvQ==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.10.tgz","fileCount":8,"unpackedSize":47477,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb1zMICRA9TVsSAnZWagAAZS4P/1UVq0y0ua3xCst6B9Rc\nA3hEHyIqH8m07a/bCHH8zBUcRvZuJUr2U4CrWo16+Rb4pIQgRits8Z02U9Va\nfBzNCpuMKFJaeD/ZZ7fexoh4u1snPEys0ZOsEl7brMj/T2b5ffikr5IpLajE\n+sV2kJtNydnFH3hKrQ64D806NF/tp9tXIjnbdgRp33GOl2nJQSosG8xD1FlI\nVfJFg6p3AbetQsT5OPdsoclNCOCIXSSQqac8Pw5NLpXQHeDpuMmUiESEGl9q\ngQ4Qk5fpz1RKRnBpBOkFPisqztfiU8vHPtrP1z2SxspWsf5/gDbKbYi33Evq\n+gK/cBeRvI9Bd0jd7JHXc4dOeEsyGc1nj9ZB/muWqr8rE/DMeSNrOcrJ6flg\nWHF1X0lqJM+uKsdBtePl6f8rdVPf0Qkzk7dAKIvdJgA13Kk2GRjRqZuWNIgl\nu+qdSRcxEnhIl6CKFWQObeWTFkhHzGm8C/HBS4611P1Xyxe5r74GezEvkBPo\nH5vIZ8J+anSl27xu5wcUEojZnpsNaF80C7/uKHVxQ4TtiQPg+KBXFj/kR7ya\nSgnmm2tim6rgd2zvEgx7//vnwKdGbeeKFC46JVG/fNMCrBIzVM3M50t212Cj\nkW5DGyVeetfMHcNmx36+BjuSLRvyLGvtgrElhFpnNwo8dR7U1VvWlsINJZMV\nnP3A\r\n=CH8/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.10_1540829959083_0.6527695691847866"},"_hasShrinkwrap":false},"2.0.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"c3304546e1c855753500a3156842466be7668903","_id":"gatsby-plugin-sharp@2.0.11","dist":{"shasum":"64087b46642f9e4f925072ac82c1ff19610f1313","integrity":"sha512-XEmAfaiJ4x0uvDdsGxt5i1Kgf7qgvxKgPQIItLBW7Z+5oTnlMf7PpBu5DzcjPIEn9DmBW7EMguc4WtRBbGy8vg==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.11.tgz","fileCount":8,"unpackedSize":48129,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb2x04CRA9TVsSAnZWagAApwUP/RHByIKWhF7HWWwpy42x\nCO8DA+Ybc1G9tG7IArh62DEdubKeYXpRHqGrXapvmQ9dkuuQLc5tEOQZ0SP5\n5mrQN8k4vb+1Z8J+s7pK8zTYhlxfTXXQ5A7WgtadMvFnFnX9P0F33cHYCDPy\ngzUhnrSCeEK2OPqpfcvDYDq+InDX0j2zh8btlFUJDtQinHAWgyaohsrkvLK6\nSdrfwY+eKWumQcLjDyqazS6lEnpO7Bx0RWuSnrQDdWGS4iDWToBOVlINKwcR\n6HBFe50hYAjcT2sEvRqi/NYdxwyn832MhRm7ywbwH9OUM+vuvzjvyO0+RQZi\npxh9JYSXVzOSMsu8tGMaWzPIwMbMsajydkFgsXKEADaIVwWHDrYxZtaQmibW\nTS9v5rmPmA3hrq+u89k/GHhy8TIiFus+nALVDX+AkFHHHIAzsN737HG7P/mP\ntCPthB66aAfd4AcDAhzzuMyDGNxL+8T/EPormrhKSqlO643g1pMDop+AEqYt\n8+J8S9Of/Uh3K1VxCQHNWcg2Gl2hjqDLTo5weEg1t6NTb2O/Ol4M+vaLV5yl\n3iWUGtsGS6kUcNtqObfA6e7Fjp3yHLm7v9tZkJwBx1BLxmeZVpciEWpV+Tbf\nlLWpOcbVdjp8R6d4IN5M62qRUzdiddg0g6yHWTFno5n1FSwki5sdVGPo3hhx\n8vtT\r\n=yEfs\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.11_1541086519370_0.2338517664021078"},"_hasShrinkwrap":false},"2.0.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"9dc09b706240945446516c1d17f552634e9b7886","_id":"gatsby-plugin-sharp@2.0.12","dist":{"shasum":"c791b29f153e481b8287605bf171331daaba7cb8","integrity":"sha512-E3LmPQVY7n27oiWJRvw+C1V9ijR9V3Y2xBl9dFL3NoueLyZmlk0hFRG8gTpCr9e3va04b+tV33mATetcy7mLHw==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.12.tgz","fileCount":8,"unpackedSize":49614,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb4PD0CRA9TVsSAnZWagAAJKkP/Aka71ym+U5Qq1ZQPgav\n+KQfpLdYH0bg2G5bl1yTVPL9Ov94MOUAJtIBBpD7Ari96PFjdYKpjlLVYtRn\n+kLCsXlzPmEAU0ZrWfch82kJlVyUcyW5sd/N3Fk/CZqnKhX8wbSno8nfq2Zc\nTk+Mp8UgbdODJsJq6GZJGnRoy0NUWO0a6FKelB5QGvOVOK/lyp6444jJZw7s\nKEffajxzHOZMWGZafNJtzCuprGPwo2CikFJ8fWui9jQwmubKWuyazupNyV6X\nmelEhUSVrRRc6tg+urCYyoZ2uFjYkHdCUcyZ3OYJteVSNPd7Qjsj7Yfo8+VT\nTr7E8307OAQq+aZQTnNJ8XRQ6pH2czAxUHXA4z2KdklNa771dmk1dcFui1ND\n2JjxZrDrhwe+sbxqaeTUfABPDjCl+eD4Smb5jQ7g8SvfnFkTUDK9GU8wyVAU\nTHiOxq8D57Mt2/8/L6iStcJ9iMwc+NSCDppl3drKL2mGowX6nzH1Kaylasan\nYu4jBkRvyTnUuRJDXiwPkmF2fIqBcwmwmlKrULphL3p6stRhVSKIc2K2lkyZ\n+/ER9HNJxBw8qa2Ptea2vJ9KGKFh87kwO0Bv8jjtOYDmV4kMZ0ygUlLQRvi/\nzP9kRXzDNoH+iqGD3ylIhZut8prHUx33aC3nvlyZtN6b4OSHZYD4jEn5FoqI\nLm9w\r\n=KoHe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.12_1541468404133_0.34570131693697825"},"_hasShrinkwrap":false},"2.0.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"656b006c71c8d46fca24a5772e662c0208098ec9","_id":"gatsby-plugin-sharp@2.0.13","dist":{"shasum":"37678879e118987841453ef2f1250a0760402646","integrity":"sha512-g+pbO/T2OYLNXIurKp3O4otrAjNXD0EFTVB9sUCNEJ6tuvPyzbZKsMGBt3LTnUdyXZCWMImJ3bG7KBVyBNCFoA==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.13.tgz","fileCount":8,"unpackedSize":50848,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb9Vo7CRA9TVsSAnZWagAAuY8P/RzgcXlA1Fl0+usLTfFk\nrGTa6zjYQNjwVsctrCRu24MmVxhvy0pGwOFIB+i/XAIKXQubXhK2A8SR8Kuu\nSA8zkOnw8xCtLSkvBUgK9iAGTCqoHPH0QA77Bsuqtaqe/wCoGZ61+uydbZx7\nLpB6lZi+iP2E0AZSql1/HW3SDhlNnfuaZXOVso0jfEqpo6bq38YVgZAIDriK\nWvatQmje0yIuWvuJu9l83fDZ/SRkC6Al9JGMOzUQgZG6k5QRyhiUTHESHWZt\nJxksxQQmYwXIOBh3da/gMXWRxxe3cEh5hV+RkvMvIKhKOOxyIE/XYmraI8Hx\nt0HQry38P0yfnZfNekCtgpN0oq5kZsS5FeaqQsDxIjrG0ZRkCzCFg970/+aU\nx+Vs+q2GUtUwOi/cRh+SeReo8eFf2yxqRm2FSwXH/Z2Z2JoZOpebbgLCeCEZ\n9xhei1hBmvDS1g9yDuz4LAieMEdju3q6k1bMV1PC0H+5waLoeDye7NhJsnaG\nVczu7fn83kIQjR7lLuFwvkGGLzxAaTxK7ekhdpLXB1DwgUSFuPKLMATwb9yp\nWAAPmYADnY5XTYfk+wC3YWpGyNB65qHaP9739Qr5PUWGwLsESOqZZmmp3iKp\ngXcRbBv5QuDBnUczzEIMO0J2flU4tudy1Gu0HdHYw0uiJDEw3JGMZ3OXKVW0\nANwu\r\n=vMXw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.13_1542806074508_0.025801382036789944"},"_hasShrinkwrap":false},"2.0.14":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.14","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"a3e548956009fecbcbd5e55f11e7803cbf5253d0","_id":"gatsby-plugin-sharp@2.0.14","dist":{"shasum":"1cd296ed6e117de19812cfbbb4632c74da6a0063","integrity":"sha512-vCn5fCVbI8LJUD95W3MD8LILfmf7kKVQ+Ctr4eaXxId8R4dNR30s+Hy86MA/yOmPUtUTSKIoNw4fqjgywTLyDg==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.14.tgz","fileCount":8,"unpackedSize":51099,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb/9gLCRA9TVsSAnZWagAAl4IP/ifHc6yyuD+RtnaQKeuy\ngLcDL1kQloLWLbsfhk8fOd6W+fjCw52/GdKazuHuwoKk6QeQ2PPytkvrRno4\nG4vSSnupT1PXDQKnBeJTY0WM3HAa0gfQbR9pzLzvrcivPfJPbB707qzUI7YS\n/8hVtnDyy1zqGtVx79K7DrfwplwpdbN6OMXmczMUCoYmd58jS7WwAxgPlAEp\n8+cgqtjENQa7xar+hs7Tvl9w0+TFZsmEE55cf7A1WK5IyQGkkXjFRlmv94G+\nqMOLUeG6abNghCjs9lVOsviRlE4AiaVeiUhovH6u5Cykr/xFST1SVl7Pm9Si\nM8Wmb3nS868A97huZIIti6PWpVwpscVhEr1PTPppsmp47QjuL+B9NPt2JbjP\nANSDtSDZiidLNcvLKeYKy0g99Y9L4jmpzLOHxHCNAHqtemokv9OuhhsOjvv6\n1BMdH5mNMeQbtbcdCSJLGsbaMa3mfPd9AdWtzdsy2EN1J7Or5MtFcJcE8HAi\nN45j+g9+5xl4c7yFkwLiEte8pKBhdokho0K1Gywo5livChFtiIDtx0VL3YPM\nXUEjKnX/UK8+n81Q3Hkd8TV7iu9vX0XVklbSRMT++S+skIPFl46l2i6G+2Tw\nHj0a5fFZYFXCWo1uvTDDbnorVHE2+AnJ9dcC+5B50/BTfzB0J1+ROVH8kCll\nrhxF\r\n=mws4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.14_1543493642872_0.723038469517495"},"_hasShrinkwrap":false},"2.0.15":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.15","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^7.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^4.1.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"11afc1b9721190a5a516ec2da88593eb81802276","_id":"gatsby-plugin-sharp@2.0.15","dist":{"shasum":"dc2ec6790ec544e05d600affddc29b5f2fe55375","integrity":"sha512-MjZL3wonmlf6tdTOAPNbLNXPegKZ6DSQkoEwNistVSG6kplfBv/50ThNX+ExCVG4y/XaMGCv1QF9vCKMpDlOpg==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.15.tgz","fileCount":8,"unpackedSize":53324,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcCpyACRA9TVsSAnZWagAAYjkP/2GEThXHG5cITUj2ZRQ9\nhvjBWl7llznoRs+UMOwxJEcG3g92JPdDYul8UxiI59FhpuK+jq/b0lqf+PSc\nX/32loY3AdHh0x/VtclCuIdewSlL7EelXce52toyBlYKR50BjI8pwhOMEjvu\nHVYEkQjjBUIvYxCDYUmNN4YW/0ysCreJbM4hXR8qcbXyVdOQYWJaZ72X6Twk\nlKwCH6anLg2IrKN0QjN27t5nCj5n8e5VNwE9z3sGGKmf/PnbnojtY7F9xlO1\n50r7xxRqHcLKa/YFNENGN9pZoUL2dp1GnBAcHqFz9d7mkVv+PW+8bH6JhrCk\n1gZR5nWZ/uPJLaU+KEuTnWI1LjlGlhBIa7KA1yO6EJCVrwouOAMKbF+XjzUc\nc1QqrmLJAwnbkMgA12iWjcfZAbBZYEJ17Awo0K0pH5+67PEqkfOIS55llhBo\nZJ1qK9Ec49HTx/DQPQmlGOy/TIVNZ5WOTHvQfh47dvgDoYQJ0KmZZ2tMmDyp\nNsHP93LCroGUYzf6yhoorHaCi3hBRoKw6TleT4rJ53FhCLvHsC3xkfEgShKK\nmhfmnuIyQASN3u0aQnJtUqbJmCViTaSPyfM5B61bfyFMikxdZ8MONkm+WDto\nJX/n3t2JuzkVE8x7XFZvbS6LcVF1PtHqMNC5xdjk0bvxzm1RjjrzEsTbinuf\nQ71q\r\n=7qxt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.15_1544199295754_0.818862212401751"},"_hasShrinkwrap":false},"2.0.16":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.16","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"93bf83b94f603388dc1b97bbfa674ce5e89bb546","_id":"gatsby-plugin-sharp@2.0.16","dist":{"shasum":"3f65fce65a0ec33a533e909706d3638a84fae2e7","integrity":"sha512-jYOIq974tbw6/0IY820tHdtZNUfQc/hyV2tDPwZ5L6yb4bm00b5d5cq2ic8TcxxmL7YNZn04vbODvRJC9YRwAg==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.16.tgz","fileCount":8,"unpackedSize":53575,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcHOVYCRA9TVsSAnZWagAA6AoP/0zJpO99FKq9qYYusTrc\n13cohPKBvw+3LXyBRHSRfpru80gOl4CjYwkSP8titopnCepL9ohLHgPq0SMc\nkAIU3SG+W/KM/2HvZleCyKqoiFz20Rkzo1NhwbXwpha6xPhYHBybOI3mlvzI\n39KcFn2ofn+EaHCJ6q8S/keLCZQGPGcNmH7wGHAukJgeMvEugh9L21WNJJRt\nfetp89NLfFiAk+Kc7CUVPB7T0cPNdSkrUPZnFw6jtDl0B2cUsjbXTvpNhUA+\nrfdd7faSJ5ZHSjJT2dh4K90axs7WIosmYPR1rDOuKo5OYJkMgAKwcxNJe/dk\nuU5BR2+/QRd8qIk6eaxwDq+zhKQHRgAZq09KTPi+VbNmw7WMjwsmJWy3IKGw\nVem9u7N0r06T4O4iiP8F+V7JLsicfT267OmtAcJ6S+qLfHPVatBTkbV4s3cG\n/jIKxONGkMJJnpbfBw38r6Izlt0PbUQGvz87HDLB9Q9nv5Q7YJec55eV6dfl\nsDGVEK0VXrKgSC65yrfllBFZSLWY2JBhuB5xwKLIleurIXex7NgSf7/BpUTE\njiiBYk7viF580E+2w2InPzem/etspQyhhmImQcge+M0mN2cnu/8n9/jYJMiU\n8iXrpaSwQ5vC0AMyi54jTcdCre7F1ni2BnMMdol29OG2SKIb9AeMk5YPB5Nv\nxi4H\r\n=IzD0\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.16_1545397592023_0.9633783315421103"},"_hasShrinkwrap":false},"2.0.17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"db457620407f82773311eb60e22818b075c4be01","_id":"gatsby-plugin-sharp@2.0.17","dist":{"shasum":"4098d0dee82f881410f10a15c16e596e46dc5c01","integrity":"sha512-33sgwPdqA/Cm5a5Tm2expqyR+pqvcUfqlk/5cxYaM0KFtEPugNKPBrSzUYq7oQ/zisNfPWzFh0sbF0rzqWUEng==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.17.tgz","fileCount":8,"unpackedSize":54153,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcJP0jCRA9TVsSAnZWagAAsAgP/i1uGKZrD3E916LxdlKE\nOA+BNQYCZ/YZUX9ZqeplrJUdaSXox+5nBGRmHr98AsDdegQqcmlLTMfedEDf\n0ImrPLWeR2qwqUUGECaPiPew0+w9NejDaZis7UGfyzSZIifOAl4o8gCi9/cS\nWMBkAA7kWQ+1vC2XxOP+ZBy3P2jzIAP5EG1eY/nnniw3iZhu3I0CyALqbq6x\nr9E1gJLAZB9q1fJUT2AJBoKqHKeCEAkZP1Cs8AX7I9UdeBUL5hzlYQF85ndZ\nwlUnSgC1O2ztG4zHEL/WHgZ+jj9HH0/tx4WX7+QhDM1dlZNXpKyI4040BfjI\n9nQ7pl1SMbcfAMnpJWOHoPHIeKzFOv+uWZcrCfYihzotazrS98X1cXnViwaU\n4X13To2gaFGEwk2y7UYY9V8c0d3WGTdDjXY1QDe5hSqqo5L4qUAz1A5yhKyJ\nOtcpx0ULUaOhS1DUB6DHAHSwXTsr7SL2LJ7s/y0ibY3NJLBW90j04EFfIXs3\n2KyCamcE6FzcMPl0fO0bLoXItZLQ9pGh/FV6mP2UU2fsF1GnLU5ZUqy6nt68\nE/nXrM7iqQTN77vk3PN10CAlbVDg9qPqeWgrZhwGJqo9kwaEaywxH5lRido2\ncW5Cl8v9iMZXPqeq3ZirOyjrhNon0HOl7sFlZOlOXPQYPJC+gdhIwsUw6RQU\n8GjR\r\n=zc70\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"}],"_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.17_1545927970446_0.16260263014480247"},"_hasShrinkwrap":false},"2.0.18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.0","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"e9cfd13508cb3a6951699f23ae3873c5eb9bf74b","_id":"gatsby-plugin-sharp@2.0.18","dist":{"shasum":"5e3af5d53253a5324df23cdfadfc1b423ea0403c","integrity":"sha512-jpCiCf1WcbfgztLfo+AV+H6lZNpHrunINA+lo4x/JlNlWEdfgtE0AAOAvK5vjINtoqliPctBN/IhPmdNOLzzmQ==","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.18.tgz","fileCount":8,"unpackedSize":55259,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcSITICRA9TVsSAnZWagAAZ6QQAJKIDSenhBN1Nf8SYicu\ngWvg6pSD/KfvZRUAW5KhK1o6MIAzaBOLVa9+8jO11z0zzYVcBXMHDHlLDerf\n62y3aHjhbjjvaufGgqYiw5kN6mMbbLeGJgCe1MpvBEThuPMNOFbIMFKM7sHw\nHPBrH7caC63VUnCDlUwP9xRIU3GQaUP3qfLkzS/2HjRTiSQYWNBbcROw+kNd\ntVrRA/dRIegVMBrFThWWAbPi6wXtmbBrIuOQ1UwWam7PLRX7ca1GgaP0gbzq\nsi0SLN0beoZ/8ke6cbqlDQY7AfuNcj/xB7kQRaxiGZSNCWCdOkanf4JZ9pW0\npw7uTcnFUuCb4ZfQeQ4jZqPGh69BU0YTdAPFPq2rOTD7j1QHvqzjA+vQ5gwf\nC1ycY3B6UElLxn8KU2eM/UV7eAAQw4kEd6AapXx0sFeZviVs7pSFMauTg6wN\nEIVpf9GGZ0buk1ymdA7h/ZP1bWblcvrKPlg2WOvnm0tcIdLKG8x9TAQZe9Bt\nR0q4ATizyU2tRbjB98rGikQpNSk8rnTksEJJmh1OeUYPrsVzju09KNAH/Xl2\nl4tqXOsx3iPHMSgiYk2MKu5oKrWurphETHwt8IaX1k5egMBVj9jkLp57VEe7\nG97xWOnVFZTb00jov+Er7tFHpdrHE/o0zTFTSzzECEWjBRGRPPAiwY2En3MT\nmIkd\r\n=u/N2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.18_1548256456033_0.720906345845431"},"_hasShrinkwrap":false},"2.0.19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.0-alpha"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"18f05af995005da6e1aa807471321f236ecd07b6","_id":"gatsby-plugin-sharp@2.0.19","_nodeVersion":"11.6.0","_npmVersion":"lerna/3.10.7/node@v11.6.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-XaaVnRtgl1qrb6sgQgRisj4DhghyvjxgMI34iJ/fIlVTWFF885nJgQhYn34N8KkO22c0C8TQxEbusnADCgAmfg==","shasum":"8a0e6452989e901375aefe819cf2a85b951ddf28","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.19.tgz","fileCount":8,"unpackedSize":55487,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcUG8gCRA9TVsSAnZWagAACScP/iwhSO7jVj9iiAUJmtoC\n5zBsBengZ29+hXyOxDRoUBvOo3Z2zYxJaPEyNlt7EfdSZSQGuSeiMUMRR5r7\n7U4qafljRM9cJjBoDfGDdQF+9G9oqGG8REuL91ULD/3Hi6xBswV+1QHdLj9w\nOukUerCdgFtf0FiIKH/rxY1TL+pOE057yZv6f7G/9KHQfR5uJjj1n2etqxQx\nFEY4Vg8qKRZO8GWt6YfUZXX3qXw2ykMyMDGNpPT4/IeTD3B9vO8CG7ZtpDwU\nCubAOSAz4nI4GHqv0UDdJ/5furJYYKuOQirOeI4+cwduyBPKyJBTNAEuYfWX\nX2AUv/TdOtj1DHLW0cBtxSk10r5s3TBUYzuMn5RYylsFozgtG5uHt9pqnXm0\nfk08xzmx+loYnsWwpCkFio8TECXD40r95fQu8im9QW6IU+E9Oh+Y8i29clv9\n2/jipBaiHZS/O21r9eq8tifUR8hOKnfwDUVn+AhurR0a1/aS+yJ5FhNApJ0Q\ngm3X/pO4YlB+YeY/q0Rz9GQCkAuFj4ynNxQftCsVwpj1QMBDX19DKvl9F5oE\n1RH/rAgoyPdAoPgv7csJ/17PskpywoGHqOCgDNLLhWXlayEVM3q7AhLkGeSs\nGDoPzdj03pjPjcDfZfrw+QlRXLpQNRKuOXzBXTcCVk71kXDTgLL6DioOAMsF\nfRWU\r\n=1wIG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.19_1548775200208_0.3284896753692843"},"_hasShrinkwrap":false},"2.0.20":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.20","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"e34bfda37db2cda23a0d986ebc9f9814a184ca77","_id":"gatsby-plugin-sharp@2.0.20","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"dist":{"integrity":"sha512-wc1SbSO8GVealC6U3e+QdKnjuFD4F0yXsJAc9rpHzkKo9v2MVQoOEjE5ejdxbSOoosUOqqP1xuZGeYUlzjqoxg==","shasum":"6c08558cdd7d8612a9ab9ca1abb038204499fc7f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.20.tgz","fileCount":8,"unpackedSize":55709,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcVDquCRA9TVsSAnZWagAAZaIP/Rka9gJJFN8d+M5deq2M\nn9l2l+4q/WdLijoogNGQbn7/S2vRU6cdRbaJPTo6z05wBGquBOjydldpdu3p\nmXfEYbKbe0W2WXGNJk/N3hjx4IyCPYlJpCtRB1b/B9STa1c2Red5TW0UtFsh\ndRQxSso9wqnbKJtzZl/S685xf8JDz8rpRgT2Uz6AYA0YKFMDDA9BgHt6LklL\nI1WohF8TACme07BQZHLCY5+FDeF5afTHe9hiCL3v1pT1DYh8kl6C82nZDt6M\nxNsKGdxqpQ7aRzQ23xMZDWPHB5DQqAZzGwruLCdlWjArmJ71F6DtR2kE5XlH\nCvX4hJo9VKbqIeDfpPWqJ7hTsmqUwgyqZ6THGnZ0y8j6jtpK49CriDteVEUR\nFl5IqMX31ty/GN1Br0nzXl/rBmqyvOR9m7u8Mzu+qq5PWkLm74Zn/wsZbMYi\nPZgC03ZtGkd/2wBYofp13O92SdCE7ji+hHcMCn/47ckGAajQOorvJrugL9gC\ngYth1C7MNSAvGz8lRWZWy5oBT/7yto+tLMBXMMuHJfzlQcIHf9NDiDRZrrVq\nxwFpGBb8CbroQ6BgoP78OGvmvU28Ef/+Od7Dbu6U71YWrGVg8bNwk5cnUpqW\n4Ta7ikdeqfpiBWL7ju/FM5ds3wz362pk1ZckaRK2JxYkPeYPh2cTUzG4xUSn\nNxkb\r\n=sv+f\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.20_1549023917522_0.06991931007801888"},"_hasShrinkwrap":false},"2.0.21":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.21","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"6b09fe4770b25e8c12206923a4a7e33b73f11948","_id":"gatsby-plugin-sharp@2.0.21","_nodeVersion":"11.8.0","_npmVersion":"lerna/3.10.7/node@v11.8.0+x64 (darwin)","dist":{"integrity":"sha512-HMQ9ThefvTwyJO4F5NzDaXyaqjFDFI7ZE3YSwjA+RJF9ySPShFfI0Ouu4aJtTqhb0S/QYK3Q5NpfuC5Q0zBj3g==","shasum":"38d87d13d8c8394faece8d081368772ee36bf5b4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.21.tgz","fileCount":8,"unpackedSize":56300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcbE+5CRA9TVsSAnZWagAAKmUP/RZmO9hWw5IM14mza2sK\nvSLCrUprof10mGVi246t5hLqD4jtWXexSO/BuPrv9Xmtdfb+SJ1xZuON39aa\nLPr5JqLRMHLVydJrHTMwbsQVy7UXG4h/IVt0z/fSVtayoqRRhgGpSdZCWENY\nCP9A28thSLq3Sy3d5n5vrUbEzrPoHIiItjz6Uc29IUvdr71vdPzslxsqnuQa\nxa83oW8eDYwilguXMy+G7RpxhxfWY2bweSGOFknQd82ehc8MnXj2ScBtHiyl\nA8VV2Vywtol00i8g3duKaKS5KqI1mV4LE+6Hp7yZdATaK8+SpajDfbn69kmB\ng8NawFWPgnZ4hyWJR1fJDXyBuLaN9oHIohpSGbBtQ3mOPBYn3v1VSfrXoi6C\nYux5KpSf++ST4t8hkymkeT8cDk7yQU8aUBk2trrxQNSCIb9M5YRl+TPZLt7S\n/H6CBxfZtzRS6UXii/DKFwo4Jssg80RzeJLuO6OiXolkndge3Ug6efF56cpt\nWG1ZYuO7HxJ1ettrpfNaR4x4dsDoMA3n5B6gNJO5zrTy6kP5liBwggz7UcyJ\nH2znDZQaq03oC2tspkQjC49ToVLJjD77Ut/asNot1D3eYVc9HwcgWRqmJq7T\nqpno9gOBnz8o4LxvlXpTQaPisbG6hyxbr1Ncy45PVytYM4RI4DJ6Y4d95SiS\nB9JU\r\n=qOif\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.21_1550602168761_0.6352674777853398"},"_hasShrinkwrap":false},"2.0.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"307820a544a63e02f35f3001d6cec447e70c93e0","_id":"gatsby-plugin-sharp@2.0.22","_nodeVersion":"11.8.0","_npmVersion":"lerna/3.10.7/node@v11.8.0+x64 (darwin)","dist":{"integrity":"sha512-0QxJuOwTYlkC+4gl4OdAJ3GR1+pvPmH48KKoRPHc4XRokcTJDnF6BCTg+Vql98rTix9ZwATqFMLTHjzwOqfKCA==","shasum":"34f9141f6aa49742730309848837539ecd1c62fc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.22.tgz","fileCount":8,"unpackedSize":57501,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJccA5cCRA9TVsSAnZWagAAyE0P/32T6q8jGcLES11n49vJ\nCWKaMxXWgCVb9w+nDtr0Td0F5aPpBcWCEVRVnw8u71wA+mu1kJFqGTR+nWzi\n/UrkqxzvRHqv1IYLx5Et7OD3fmpw73Ea/f4pycPA4Q0qA+GrSXHw/zGJkQhe\nSYcH60rQlCu/THqWQ7DUQ1Js+YBFoPTWQRoZH+kjgYvjF8vLRvgJRrhe/hGN\nvvuYAX4Oxl+bJQF7rDkZ294P4L3lR18U3VpJpgFUeUXrIEAPG/c18JtzI70h\n/dA6C12yQoHBUh+UKkrGmzMxFyh7dah91Qo7v2EPxOiUlucXtlfEyER/0aN2\n9qitbGKFPNMhRcJfELujq56ycOzXzHR2/wcE7mw0WJ8/+apZtME8T9V+QBks\njgYM1pziGnVa6Riq7UKm3LFGI4wnzJDD8G11HIhYa06IsCVetqHhbfvuoylv\nU+PXeIb3BZZasntOwS5X/wPdjvl3f3z0eEs3BzwTg6rStV46NRnHI40lc3M0\nVI70RoPOCuex4weBG618v3X2GuWHWsJYs2VV2w/GZrDL7b+uBwwS8KoTviZL\nMPVhB5vI/dqpbnmh/p9gvt1Xvs9ei/oKT67xKE+XX8967M2y5qFEyzRlXFV6\n9/CrMiFaYbCCakfS0ULQtP0zQtio7reDr2XztqjDCCcWzZ87tfUvfCX/4Uua\nmP/M\r\n=OO4T\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.22_1550847579644_0.20390008856730701"},"_hasShrinkwrap":false},"2.0.23":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.23","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"a749a42dca00e51c80280d21f96addc50415ca96","_id":"gatsby-plugin-sharp@2.0.23","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"dist":{"integrity":"sha512-XTqKjmESEbO5zGaCCQFL3K9M0YhIGX+Y/WYp5Z1AbqmyfKa2YNlmsGpw28soUHZVKV8mfWZh1wz8m6z/MeF5bw==","shasum":"9558d414408081fc751bd2def865384b9c0db9f4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.23.tgz","fileCount":8,"unpackedSize":57912,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcd8bFCRA9TVsSAnZWagAAmiMQAKPQg3UmtSvTMjXaRUaD\ndOBPkjVK1X7AJx7NrIVG/9Wzt9NNAlpbGRUXtNOiblj0Nsjblf3gkwVHWazq\n56Ev8A5QGwyjUY8/MIQNGb8wKtKBQlIMghZMmGg9IiW3pDT1Q8sDplb/9DBc\nl2XkoOmtPIW5HH2Wc8iol/OQgT9Ufxpyxs8hMpCl7Pzoya+jAnTL/N3BBq8g\nl5xNUCvWHUrYWuKaZ1rKX/Slx433P+HJFedPC9xiLwOat2cLbk11vJ0QIVOT\nOrxJdO7CUuBUkGZwRmJG+g8ci39CpCrsuxukhfnqnyuehO8p3ARHJiYhyjgy\nzGIwEGlAdw7GAraTqmqytfdIqDlWWV88pb291Hu93l/psHB/AE6zEb379eOD\nA05XyR/bNYdX9uDsh+Of1wGo6rR0L0F7mp4NECS/9mVXS5fvZvkkYkKNEO4C\nYG46TXv//Pyj3fBO1eIv4mfTunI39ThSjPiCeqVMIG0xqukTnRhsXyxN6GBL\nea6wfDQTjAq1mBlWEJVFqvy1X5rM6fXfYaIUQzhLMSK1jpnpFROnDbkikVEN\nasJM7pe/7kDMlYPNJ+2upsjH/uZ+jEOS9tJ994LBKjd8m/d3at4CxWcwyqPl\nJC5LEgdlxKKJL84AVu2IAQc2fxUn6uphxAKmEo6pYIUMACD2YqCfo40Xu28k\n3BiC\r\n=pZZq\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.23_1551353541134_0.4185205409021846"},"_hasShrinkwrap":false},"2.0.24-alpha.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.24-alpha.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"9992c123f46b00c1a8dc660331f2155c42cefd3d","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, 2x, and\n3x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200, 400, 800, 1200,\n1600, 2400 – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `sizeByPixelDensity` (bool, default: false)\n- `srcSetBreakpoints` (array of int, default: [])\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.0.24-alpha.0","_nodeVersion":"10.6.0","_npmVersion":"lerna/3.10.7/node@v10.6.0+x64 (linux)","dist":{"integrity":"sha512-quw/Z4KyDv9+lYIjb9EvYcRMWv0vqrM5xjvdaooKp0AONuJU0OtN1f2K/Y5jP0MnD9jPKqX/lroaXV2K3KO4rg==","shasum":"03e6c6591bb174cef770fece61ca39bc94f7f9ec","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.24-alpha.0.tgz","fileCount":8,"unpackedSize":58164,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcfNA1CRA9TVsSAnZWagAAX98QAIQlNrPQjGbKN3jxzkYw\nFVOJGBguISCwb2/r0EajVlUThd/hQlNDpiLJvq3WawJ0m2p1pJcApQAgHmHQ\nLPr+As97PoaZPhx9DzgXxkPgjFI8lifWuhVOYwmTL6JWiwDOxqBeIIwzpudV\n8G8QjLWRD9zLMXua/vnRyi4T18tY+iMqZlm5gU04ewn7qrPOcLmg81Pyv2cM\ndYZaF0sdDtvvN8WEEEy5EOjKw03nz7znTBWuAv+E9TiNuPSGyGMR94aWkdIb\nv4MOrUyHWeIXoK2YXlt1djKeLUJLtvZr8UGj0wdOsj0hyn1kR/bFz9/opBKQ\n3B/KzSNpIzqh0P+jDBRHloTz6+5dXtzfikpB5qZ4koRUvKKYoW7hU6Xx9QOk\nMBo2676OFf55W/922WNAEW8lUDZXtIysj86EB0NJSQmZTM/h2+PV9g3kekcE\nzy0Ze5ZxnWkeU8zzmWpS6qVqfCVuM0HP06qTfpPqkkN74JOPPq2TyTmgGGzD\nzVyA0C9VyfnY708gpNwTNJ7SQiDUbZSn6Re4zt1GIIwJczFusDwwLLQZbemH\nlPUHEYYYbk41ID/MB/ZV6y/JDKxiQqGgpX0Xi5m89+q6n0VrfqnqoiGC3qFJ\nTdCWQGRpbGhbX7l2YCClC5KZ1xeHQN7q4QAhN+kkSzA7ZjkrDxkbNF/nx6eF\n84Az\r\n=XpbM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.24-alpha.0_1551683636359_0.5790221804183429"},"_hasShrinkwrap":false},"2.0.24":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.24","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"7a4b3ff1d42920818448c7784e96b976bf08d8f6","_id":"gatsby-plugin-sharp@2.0.24","_nodeVersion":"11.8.0","_npmVersion":"lerna/3.10.7/node@v11.8.0+x64 (darwin)","dist":{"integrity":"sha512-E8iyvE39FAgCanCXywcxgPlng/ompsoGLicijz4icfsy4I//8agVqpILZ32zbZ6bb1v+D/Pgh5QRjlUzaPIorg==","shasum":"88c6b1adc66690f675c589283b8da68243c32e98","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.24.tgz","fileCount":8,"unpackedSize":58663,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcfPNQCRA9TVsSAnZWagAAZhUP/1twBPmtInbz2WZ8CYv4\n1yEscecdIcmZlC/eGUnxig1aeABTw0GDhIGhs3PiSnRyUEV/cFuqoHcXplzi\ngSjTvOAeuvYzpMqGeKCNFGCqkYSlpdBD1UQh5O+InViKZr3zyf4SLEKuk0Pi\nTVz1BPxzpCeuGLdSRNANrxxoc6ecjUyF+m0i9oMtjel1F8wesj+nkb5tsgzm\nINWunABMhQfQIYfYUJsBQk2Qbve+h+qh+1R530srWzacEOC9Eg6PRTYehdjw\nWZZ4LxUup/fTDflhh/XTLg7J0BvnrWZ1PtZQnx/VrKhBjeFs0MzDCzig2yUg\nMd1Fh5DGAtK+yWbI1LYyOXDAzeKBOL/7Ms4zzsVVeJVUCqyVfby1kXrC2uum\nlU1Ap1erwzqMF9Bq9+rrtZlG1sF51mITEeWnX5wXLC1nctv1WvjMbjwz5QMo\nzvg3Xd6VuP/Zp+ipG6dfa7EmhFmKWmuM1O9TRE9aVR5cUtBWxGGzuyiH2HyK\ncvtuMOY4walQKM27oEN1m/0pJcFEVRbXtof54vc8MKQ3eybThJf1FewjNsms\nSHYDcWmyZHPsLXxO+EsAgzI9h9e1nxBGbEoESNr5WlGgNatmJ58Z43b92fp8\njt0D+m0YMwDRT+hMLee0I6fUpzNnxNMUOP01h9aaVYLKjRb7uTRvCOdOyWNS\n42ea\r\n=9GGG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.24_1551692623986_0.07611556231668914"},"_hasShrinkwrap":false},"2.0.25":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.25","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"a6dbaffe581e3bbfe5c64666423f93e7986cce90","_id":"gatsby-plugin-sharp@2.0.25","_nodeVersion":"11.6.0","_npmVersion":"lerna/3.10.7/node@v11.6.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-pPr1bVapHnytEr75HwuF3q4ZltfLzz9+5GXHYOWt3PqxieFUz9bggqaDBnP4ZSG6gnMBRNnuM7oIgF41MXetKw==","shasum":"04ddfa639a9c8c31d2e4865578d9e344dde4b290","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.25.tgz","fileCount":8,"unpackedSize":59253,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcfup4CRA9TVsSAnZWagAAy3wQAJS5eT6XxUm/WPj+QYpI\nMQ70zBtzXCASE16lGZYzlisWWFUjkWnhK5w/hIx7Pqba3KQNYtB2KkS4F+AJ\n7tkSZyLObJ66CIu6LAZFx4G3M06OSJXs0S2W0pOGRgtkFluhhhJVqs10y8B9\n3OwR8QF2X4u3kMPqKH575JABXuoaEZpARceo2ardnmr57VhFo81MDIhITd/P\n3v4udowpUkOTkSXMCAmmv6thHk9CEn4GQhtHPVJjAxhZc3zXUdvt54EWlB53\noB6ceZpYZ0pxVAupHGS8ALkrUKdY+KDR+x9MKzPrKctvG9hXSGwQmQ/HebYt\nphxrh99p2Ko1g6evA6AsycU0/079N9ZTG+m4O4agHjad3/GdJeszHh4koxCN\npUtuUrpvrAdg6G4U3Z7nPB8QTpfl6bfFH3CbC79Kr+PbHC7kkWdScC/ZlIfT\nJa+3xh9uB8NalNhl16ngtEikEIe/TZ7iREin83dpORoDAiWBrQTJNk/KYWxg\ntyKn24Vq1dQx0M8BW21vvZ0SBrcL2YqbHImDjQN1E1/IIvpbdoii0GHvYdSx\ne+LHukZA6rvO2VHTKRxaiPZgY2448F7897Js2YvP3gtB3iPXDO+rjTgw3R0/\nOS9Lyo2GGSIIeKUk0QTUp3oZDH+vDA1d2t/wj8mbLvfB9y5YOm8XBsEM/2DJ\n+VHI\r\n=mEpw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.25_1551821432316_0.8160252716647036"},"_hasShrinkwrap":false},"2.0.26":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.26","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.3","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"779637ece99fb0e18f511ed842f0dd1f0c6f4958","_id":"gatsby-plugin-sharp@2.0.26","_nodeVersion":"11.8.0","_npmVersion":"lerna/3.10.7/node@v11.8.0+x64 (darwin)","dist":{"integrity":"sha512-t9pymF9vfGKtZAILDM/Lisl+6ZyQIWIe/idc7YD6JrOovODe8Isql1X1LJdFUbQfyvfYC5RXNEoV2lFyjtgiHg==","shasum":"34c548acdc850451b13a5b7bd19e63ef8521879f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.26.tgz","fileCount":10,"unpackedSize":65457,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchmdxCRA9TVsSAnZWagAA+gUP/0gsI8GbAoj5LW5jgX+k\nCoNZOS/oaiEIRcIbwNNEoUCGhh4G90NSRXvq9TXFDunLl9nl8JontNix72n/\nqDXmGtfz6cZ7919RIPlMh+3ynDFoLBUYe56EoVbg3SGgXjhB8qVnK28R0tlI\nz1Uqk/D29zjpQ7L6P77yTkfViPeWQdoBfkZRPLDKmL4ebdbU2SKjkfg2RxDi\n3OYY62j9+XIWDm76TabM1FDR6/oSMO8SIS+XvoIvEFT7KwGKq+dmK8/FDP4C\nuKGO+5M7seeVgILLiVjU2/xUChyg5mkVNdgbw8+EE6zRLBeYMEJPSSqWJi3X\nnQozb1zhuzOK46H2v+qj22KLfCw+qG7oBzc5c2OxOPHj5SPTZY6MbFkhPk9B\nGaPCE6N/UfdPdk9kY5o0hKCnj3I/J/IWE4IjtQXylneZ/a8LfZkIPMXqtQmg\nxQrIo9ZjK4D60nDtV9csx49Ugmo1d/qOSpQj6fQZtMNW0gGs0GJ5eZxlcaLe\n2CZsZcNN8V3nbGXXDUwFgFm4nlYm2kwJiOPWHzusD2wThrtkyHXY+9YHO/av\n3xOb6iEAQZczAF52EarLy9YN+jlOCUcN77II8IIhhuoEyY+dWhsjRVJ15SqL\nI6XMiOIn+U9Rj0QHZ+plJ6mSk13Ym6u2YcHllJb8XWQdMzLQnYZ+Xq7uJkfj\nn66b\r\n=tDIp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.26_1552312176802_0.40401718325102154"},"_hasShrinkwrap":false},"2.0.27":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.27","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"17118da6ecfbc274db521e11cabbaa6f45f7fd5a","_id":"gatsby-plugin-sharp@2.0.27","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"dist":{"integrity":"sha512-9r3H1oxTSHWeAJmX3gVD1TwHS0/547wmC+7V8W37J00aXoLe8fr0L/xG3/QwSGwFQIquoiUaTBXWboQITCrxZQ==","shasum":"d53cedb873beb286a85e3e995680c7a09726cddc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.27.tgz","fileCount":10,"unpackedSize":65685,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJchn3NCRA9TVsSAnZWagAA8gIP/iSylWjTkL43+9PJ8nU9\nnJaHNsdJski2bhi9AiJ2NSJHlRxZhrMitoMvqqCZFxCivpb/Uns5YCTVXSFz\nUG5dxFrg8jyuWWQYfH8tyyubj0jY1kBc52Q4kiY3dJkwjaKOylDji5osJQjI\nSdm+ajXwlkJ9PxbD5BLFXuz76s7GsBCh9xJz743WqDxmKyUniRLYPAtdUr1d\n+gFXlLUMgUuFgMusyRTwx2BMFDYiD/juq+0BHKeCDMvoVAsnN1h7CRSf5zDz\n2YcPVkEl/D6YUDzrT07rucqApIkEvn0d8S8kV3A/rxzCDRJdA62TFFM8Pt2M\ng+OnwsAGF0S+vsHOmIudpQyG+6nIhYeHCvGkdMe5Hn/Oe7m2gT3Ja5qLRPQK\nitcRf9mGdbcGa+glLeiQIDMCxot5MAJAo4btLU2EY5cVaG6x9fzxhpnN2o1j\nDCQkLClBN0P3rmcdTJ24UuBdCn4Ezu7ZgiVzOX/SJm2KsXSL52epQhDDRZTY\nfpxUzBvGtVL7PN51xPO2irpF0a7ZBZ20lKziQYgpDA1FuiVl7QapYgzCCyLP\nR3hbPo5zREBG/F4XA5q5QMfEaCEF3+7T3uzeGaNE8cSpEPPhouyMXVSB9zKg\n4mPStKMhGAv5xV2g+M3HrtTWR+LiNbUCGi+nDwUfrN7b8S2OWcSMVOOWtNL+\nN4/q\r\n=ogV9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.27_1552317900353_0.0686687982501617"},"_hasShrinkwrap":false},"2.0.28":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.28","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"2bc1bcac6420b8ffd8a451699858659898da5a63","_id":"gatsby-plugin-sharp@2.0.28","_nodeVersion":"11.6.0","_npmVersion":"lerna/3.10.7/node@v11.6.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-Cmko9NqchPJDtU0qWPcF3nZ8tqYat0kn735sfgCpt+6uLjdS1PPZSFHpX/EA2/TsaElfLbqqANdLgPwWHi2lfQ==","shasum":"5d37c0391bdf2ab9543ee7e4647a9d8e33168d60","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.28.tgz","fileCount":10,"unpackedSize":66926,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJciBUwCRA9TVsSAnZWagAA4rgQAJQiEJoC3qzt+64E1qcC\nLalIoukcdwyUiPdMF/pp+avVdURsrU+2NNY3w33SxRmtALitplYXW/1HCXsH\nqhCtgXjRB3Jyj5hneu3GQ1bHxg1V7C3m/uRpZqVlMxljcHEyUBmBELl2CJWq\npc6J/8/HDN2OlT6+f1vzc3LTDAVEQ17vYabNqzgY9fHcFhc1ydtSzxfuEUQx\npB9dv5rBYsFhIribvWTUiWoqcT2p6FhzrYLUEYlEjHs2E7Je/IHiaRRx4yzy\niwgGrrGOVvr0FhL0GS76I5zyYciaqF5sggteGOCLAnIPW+wNt2z8o69J/WHm\nksNBfRKSQo8keCsDpDYiBjasgvymQrovzBlLdE7S99DoRgE96IIZJ+VihvyC\n0Z38J+ke9CdmcazHeo9DcOrrTQDleiLG9slNPuNduwR21lSUpZ+NOgRihLY0\nJCHNTfPt3Ho8CU2xucbU3jPspvrGS+Pc3f6TOqFqSy68GF7RgBaydtTpTx5s\nHh4FJ2Lh/ZLOw88ybr0TBf0PwNpCBCauCNwufopx4Vli83FcPwl0mkfctg1w\nA09gedgLvh9CuIxg957xJYuQK8e9aE9q2+EtJdZ3EBeIkNoSoGCXoku5l3I8\nT4IBov0gbWpsgG9W44g16bs9OQoSQzeNbdL/leB4dFERf0SZwmtkXc547Zvh\nlNA7\r\n=WFDO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.28_1552422192016_0.07149229872380403"},"_hasShrinkwrap":false},"2.0.29":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.29","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"b62816f7ec1ec01deb7d7f7860e58dada818a93c","_id":"gatsby-plugin-sharp@2.0.29","_nodeVersion":"11.6.0","_npmVersion":"lerna/3.10.7/node@v11.6.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-m9eznsfpFjklyWPPsieUGsFuRippL7pRASXZdCq3n3bsOM8oxpH8CcT3J8f3tlgoOZfecb+aWUaig5kqKRWE2w==","shasum":"1fc37417606ee8fb2d36b6905ce52710cebfba55","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.29.tgz","fileCount":10,"unpackedSize":67154,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJci8uDCRA9TVsSAnZWagAAc5AP/iztPpB2gBvoXbU/oOTW\nWor6BOEg8JbryuCLaenRUCpxp5HL/wnH5fp+cddWUJ9cjDjkL4uecxY+tj70\nFQYo8aukCq6/A8C0hi5D6agHd2yO2tkNn1BF9zqklZVlyy5yVSmXgFZM1NGw\nyBT2olX4jgwTc10Xixz1s0N04XHIOZe28ouHKmtM81gG+H3gVL2ML4HwKCvD\n3VMAisH/Zgt+95T0gmzAQ3bH3Ym1f8gOZUI8efu+csUrqGcfRE0Ek6qnJQuj\nnmc63oPSQyb6kopW8DOFFZ5Qgjc/vFr1zdeh+8KX93cprt0OvfVwr5oexxLA\nBwqhw370lWoOE+0LsIROrVmOKG8Ol6fWNeJBXqXTUDx7YhiR76aexDTE32zA\nwNd0Pss6U/x9F1+kk3B30mqs6YZKkmQCgESJFMRpw8n2Qq4bmWQVucGsjlzC\n1+dW9qwmCrt2sTjV6QMtXpTu9h9RTxVRUlsCxwjETrsZdXFGuxVTKzmMxgho\neVGTgRnT6uzxPYJe/oEd2HTlf2VffVpS0jZ5ag4wzz9khXRDZNTaW3gZnwte\nPTnPvftfpyB/vXm7IIQZCTlfA4Wp7Q/Z5R4Ywto7vXpAW5JfZEdfX2loI+xf\nNvW+YDQ5hlNTSbRvj1T5fWoN3mPBIoeIOiSYgc9s5cotVy7B+ZK3vEd1b3MP\nyZ7n\r\n=mqr5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.29_1552665474364_0.2877859009355166"},"_hasShrinkwrap":false},"2.0.30":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.30","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^0.7.2"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"dc4afa1aaaa81aff7db41f48fce229b8f701b860","_id":"gatsby-plugin-sharp@2.0.30","_nodeVersion":"11.8.0","_npmVersion":"lerna/3.10.7/node@v11.8.0+x64 (darwin)","dist":{"integrity":"sha512-SKgxTSZ6q0Q9OWfN1ygUGLUcF8OQhE3uK9HG+LmcuZjIIwHkHn5fezwBa43fZBNfXGLQw19Z2WPrZHA99nBvsg==","shasum":"a28177580a4bd6a4d7693383edb02b377432da6d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.30.tgz","fileCount":10,"unpackedSize":68142,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcklGACRA9TVsSAnZWagAAuMgP/2kegPPh4CxpayzBDULG\n7JdRvBCUDlv1qMxibWCvkCTQJ6R7Z5+uvdfMnLGiXnC0azBmfVh9dzgW+97l\n1Krs2tLNiDpmx6ShZLrepejz1vymNKHLrwvC1AVsMH2GVOUZfyyeZEu59xOH\nlfFfk8VBD759SW5qvEV+KWCNF1aufZZRn03y7X/Fo5NUsOHv8v6SHyXw/coJ\nZEFS6l8o+Zb2jo8bJ/sWij8cUZB9DTPqPbaL6UFGLhU/LjfEk7OgbMKzQ0rx\nWsM2mgK/omg1a3tsbGtJGcUfyXGVoUumBgChGDobP5wsEC0ssc2pNMp4l7MC\nAmcsnf90vsdtDNraHJMQEVkzvK2xlDKFr3/4YND76SktEA8zzOe+y8ZvZ85/\nrjoDUTOyIQNOiDHmZOefnZMa6pS/Faqch70atwO+VoCJ+v8t94d+Y9LRoAG8\nqXywHsNXpWM4trkRoUIfLpGN1v+uiCuMxJQE1sosFDh1A5QLzcPShiKITD+1\nKxlldGMl7VLe2B0VdBDViiHj5JJ49CRHpoP9f4Pr2WSTya+1cogCkqboZhNV\nQ2wyUvHmbKxj3YxDxJer7AjdUwjn7Cw2lnHMpNjjDdUdmzTi7sgkbbUgiww2\nWJDOHZIrpVLSUtUZTTcEGAqP0eS0uv8U0KP27YAC6orsvuE6dH6qy7dn4nki\nQS97\r\n=/hE/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.30_1553092991148_0.8052052829737326"},"_hasShrinkwrap":false},"2.0.31":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.31","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-exists-cached":"^1.0.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"2ba4224c7b7f589915c96763fba3009d7a4886d0","_id":"gatsby-plugin-sharp@2.0.31","_nodeVersion":"11.11.0","_npmVersion":"lerna/3.10.7/node@v11.11.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-HUe3EZoVnEhqwFXTNH7t6Yy3sbvzSTNlaS6enD7PemNQ06mnqGw5t/tq0sbAY0fztKGK0jUA8/StzeL+8Y5xFg==","shasum":"2b6a291b3acc3918d05eb6a910f38cf0905ffb7b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.31.tgz","fileCount":10,"unpackedSize":68293,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcmTyZCRA9TVsSAnZWagAACn8P/09zmTQirIlww0bKNKhC\noegrZY8e+pk3QOqslad73Eiv6T9Nq9MSc8OeENExbm3FiHzxkD5CpjasqM/L\ndUhybo6sxH81wnZNw+QR803mrflW+oAcmxXxd5HttbWndOr/QG+fYDn1+ddt\nLc4JHa45DJI0jWFFV53Oi75xHGdiJ4+LqeMDtNPcaJDfZC0HCl7L/SN6zxkJ\njOmVAJCOrBT414NfACJTE4VHJdn0N3fXWnMzg3FHL+qT5rFO4cnkYLEbCKs5\nvRuZcWalr22H3mNsqfz+0lqp8etdW77mHaTEDm5bNu16moWw4kQUURquXK6Y\nD2rdTQejaV7kM2DCpAa55mQl+FJAlF16Kv0VWH8UzoFSLs7zEaiuoJ55jcIE\n48+K1X5ZBaArjk0iaRv+VJE1BbfcwY+AoVq3gPkb+F/twWLWfJ/yBoGonyeW\n7ChebmcH8aSMPkyPipCS1vb3Pz1rVjMs8R60LmerQB2Oyt5ixSIHmVlf8XXj\nDzITU1AOulomLf1VbAsViLNwD5O2ZInrPyDGRKbRLOf/5StSgARxME9hr+K2\nD7626h1CBNVGpmswJQnr2+xebgVzwNhRrAErAIOAWy1cUKN/oyv3JGKEcLYz\ny563Ejbeo5VSiem7+lWnhmvZqDmPxBND/83fkfNNrGf8gT29ogPESo26PcGI\ntwE0\r\n=Ccup\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.31_1553546392837_0.4301791362362464"},"_hasShrinkwrap":false},"2.0.32":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.32","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"401401decc466cc7ee4bc0498f07c4fa4ff84527","_id":"gatsby-plugin-sharp@2.0.32","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"dist":{"integrity":"sha512-5cLD2VUcKBtIm7QJbSj4fIAv/eqD6KhraHODHjpGwqvwSOdLQB7YcmzSCPnRwxEv+0f2wNrjZYpsd8SmIWfhDw==","shasum":"47ebf2e44ece58560fa8bc604e7904ff9dca1386","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.32.tgz","fileCount":10,"unpackedSize":69694,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcm4L6CRA9TVsSAnZWagAAJncP/1ehMR6MhwEt6mpzbNSE\nskLE5BPXM/W2tzKT1XTSzGDIfEKMUJ1VNj0dJxgc3Z/VrlA9DNKQ4PveQm8C\n02pWemE77COlkSOPy+HUhgd7cu16uu/jCsh7n1n9A6Q1OolQ8AThg0E8Ahiw\nur2X17pW4PrxnN4v2r9dy9qPVGXi+c2LXluPlWwzuLFcE+lViGrlbnaxqUTS\nSvHRF9h77NIYIJZLI/PdbxA5wcvrNY6FlhTvoEroWGdhcuEkf2SpnPQRLDL8\nLe55CtxTG4cWGexT0muRv6LrBkSZqkZIi6Ok8JDvKKZtEaXoQ9okEnH3Yo6Y\nlvF1pd2drHhnlrxB9mu3zjJr71dpkeoluvnwAs6ksYrawwlAQeCTPH5LCWMc\nPPG6oMln18MOZET3BVHOD+LGc/FLEVl6kbUJZ9p5D8jIzueXA4Onof7ZSPUT\nAfu8sYFbKHoOyHKDzaPr4qLTR3+vg1N4civMX+NIFIQ5Fa8TfdqHaGNNFKCf\nXCDhj/sN2CftF5Jg3eFVE1QiPKrVSogCtcQ2xaCD6PZ9Ivdtg26N9PLhxxyg\ns9CaxRmMoVgNDyS19C+qiogshVvajbt3USXObz2NpgOlG3f6B3HH01CfbNcl\nyri42UB9onNFgLy74GqvPCgsdaaCc3F8/ZTO30H9OOK9WlsuVd1ycmCG3AvD\nxjAQ\r\n=uwGR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.32_1553695481474_0.9374222032541939"},"_hasShrinkwrap":false},"2.0.33":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.33","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"e3971f96bb149aba62177e03c25224b06cfd1cd8","_id":"gatsby-plugin-sharp@2.0.33","_nodeVersion":"11.13.0","_npmVersion":"lerna/3.10.7/node@v11.13.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-iukfJqhZUbjflqpdFWLD86I14/MJD4eQR+TfmQRace+UInSlHfcyxK0f/Oqx/utKh8km/Q/3IKnSjA8QrVTLsA==","shasum":"e11d6992d4deec4eda0962cbb22baad02f30c7bc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.33.tgz","fileCount":13,"unpackedSize":72598,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcrSCnCRA9TVsSAnZWagAAdtkQAJ/ajbcfaRfUwPpo3QUr\nrN1iQhphP6HXXsm0peVlnNk6wrPdWG6uk83Luskcnjuf839+fjBSE0FnMFcK\n11HpiWnzlrDI8U0QZqqsYgffaY+m77xDgGhZEZBn50UcEHJt4pzoedbz78oI\n1P0hWOBBUQ/z6oKnZd+7LUKmdIBe2hBDaP/VE3RbVqIqBL+RGvhFR9d/ok8G\n39By/vk2kdjA9Uwxidq2Hy4gVZ/zMb8gOl4pMda8ciwIza6ASJfEBlmcXPdG\nm3LQeoGgupHa5mYdAL7Jmi86U8+OKp7AQSOfD2MslHg7JYgp/0ZB1mINKBBJ\nKEuXqdZQZACTT8u2p6xaIawNDL5+I1m/4GAETTs3ZKPjn+xIMVmA29vSnUWF\nP6qRKc8VxUFkDRnB+orPCxLF3rMmD16FGr9t7lZVv5h6y+N1uL41nSrbgRX/\neVWIaNJLKZyWP2o30tcKCTtWdykb3UYVuylZuQj5Orv2SyEp5z9RYNLccq5K\n2iFvFENSmBNDTvj85Ua9LlbKVyMdMZJc2yNV4B8Z8oD2rhFApxI7M/5WGO3n\nUeKnuAtDWG9F1Wn+LVSG6AT4Y/emtPw6M8Yqrfj0wPy2iRSpxjTw7sIW+cfI\nAePX8zrLaFtqtxKoDyh6NDX4y5T6jzwQALIkmZvXIm+qOvyuM3M7uxyAjH3V\ndY2b\r\n=8N1u\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.33_1554849958276_0.09674748399768762"},"_hasShrinkwrap":false},"2.0.34":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.34","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"52b4f3cd81bb9a929b71739565c9952518254a1d","_id":"gatsby-plugin-sharp@2.0.34","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"dist":{"integrity":"sha512-P15HULFZ5TwmAww1TNxSaHrGr+twZBK+VgTM4XBDEazfgbUTDsTRuxEgoS7DqNZg5jlg9W7L+wQ0Nr45jMqiBA==","shasum":"c08159d00d3f3aec23bbe16fca240deffa6cdeb9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.34.tgz","fileCount":13,"unpackedSize":73894,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcr6bjCRA9TVsSAnZWagAABbQP/A+Hc9UIGKgth1CNox26\nBamvuOSfCVrBU0f+Y7zNZnX3Ys54gVig1J7hnaZU41k2ToTDNrQUAk/I7fZi\nHVUV55gwq5Jh2YG+HRu7n9tWrpyAoHsVY5pVLnsVcXxmXAHNUGMCJT8JhvZj\nX+BllwklJD1Jm8KBOtBaro4uu0sKEw0p1PdCrtIQM+/b/s7pisCA16JwohIM\nNiI7RITVOmBuQJ0cbMdHp+OWfQD/nqh9B92Q45nh5xMAOBbmog+EMqlegUMa\nJspsFbgbaLmT9uyL4ipJVNcKHj787brVf+SQpHuweYIFY5wGMIv8bFjBfdXx\np9E43Mcw2+DqfRNOSYe9Mt1oWfEgLsOpdmtSWAjWVGbzWUhZjCDwAADHvDDm\nSLOhAokNqW5GV+NklAm0Iv5rTimT9j/bkhGv/uATVqiM5MhP3kuKWnZjZ0nT\nhCbf2bvGMm9poEec7cXp9P/6Mgf1QE4okaR25KLwGy5sV7cmInLRNJA2uLyK\nIaWmknsVi/JYAj17mC3nZSyRKFyT5edmedhrRCP0z1WuqKD67rdXQHznrhss\nXbDIGkQA3KiiSxtmu5k0zJ5CM+5jLWwG/vDxzxKPZKEDWZYB5YFPLI4cASlE\nr2/NFDyQ6t6kSvLUjd6K4/0Gf0U8uLQUERpOemyJzvuXH2i4LOuzGsPwtz8g\n0BkE\r\n=95Gt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.34_1555015394200_0.8495786619567194"},"_hasShrinkwrap":false},"2.0.35":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.35","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","sharp":"^0.21.3","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"ef6f84ccae0f48cf1c9334b50ed58fe145647ba6","_id":"gatsby-plugin-sharp@2.0.35","_nodeVersion":"11.13.0","_npmVersion":"lerna/3.10.7/node@v11.13.0+x64 (darwin)","_npmUser":{"name":"moocar","email":"anthony@moocar.me"},"dist":{"integrity":"sha512-xmFI8D1OpFJzRjYXWdEW9TJyXslonFcXezFmcMglzFrSTxUylkw0IXWFkuyexm00mEKLBIid/DVj/J3B9oCd2Q==","shasum":"771053475d27592105522de4aafe884fdf8f02f2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.35.tgz","fileCount":13,"unpackedSize":74628,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJctoQoCRA9TVsSAnZWagAAJL4P/idr2RQPignHL2judylr\nyIe8NxDqyNpFAoEdQf+HpmrlKtTK5WmaO4NqK+YfCKO1SbES6pt3+/59QV0C\n9kDfD8xJg7YR1u+89/YFMJe09Zki1OPiMnT87r96J4EYCSUFMA4Bp2tbWmzI\nPCGhuDyhdYp8FOFZLGt81Op2U4naY+UcYSpzk8dGPiLuL3pDMCik5zFy47B/\n6uY7qhutCUPYTKYqIyahVoOKiYZBh0A+qckLucYdW1g7aD+QLQevvIP2Lf12\nf+fkI7lbv2m+irKBkL+jLBfPW46s0aVoRIRW7XbMhwQu25a8qmFIkLWxe1QE\nF1xGaG9EcP100lQEM2h8YHXhoVi35n90/OIDCNoRsOtfkZI3V/fJeGPGZRgj\ncq5BCH5QgFEoZ/TNYyAiVFwMa73yDvGekH0TzA0utdkJ9HxboB2UYctuDYM0\ny7kpFq58AudRU0P/qBdNMCijCs/IG6va55JflrYZnffaoeuZnZgyS8aHAB/a\nm04MKgZOdLuwvhqgeTbvpTgImwjgElqpmPokIl9T3Mqvdzb7Uua1Jp/cQ/W7\nW84BrZt7zN02NDIlyz0AGYTZwwwYQHOjYX640yuvhH0X7NG315qEaCPP842Y\n1fHXKu4/ecCi0UF8aQaSZK5YtJxLHGt3WdI7+MbP6sFCcbLEtVNOS4S8EDne\n+NfO\r\n=VFfi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.35_1555465256243_0.23688548466881443"},"_hasShrinkwrap":false},"2.0.36":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.36","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"aae8af04b0608b0ddcd334a5e77e864cd43106e5","_id":"gatsby-plugin-sharp@2.0.36","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"dist":{"integrity":"sha512-/JD6JalZEXHmotdshITazIe0nWUIgZ29JIv1KiDZIwSlSPi7Mlg0n6FJLA0OlxLvc2q5+0NwbSAoegqVLV/qZA==","shasum":"a8877cea81a7f2f6a0a1af2d0b96705a03b943d2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.36.tgz","fileCount":14,"unpackedSize":80633,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJczDybCRA9TVsSAnZWagAAbX8P/iiEFs1YdPB2Y6n0KOKE\nmx92RWY1Kzu7dYqzC0tFBVkU5XqSpy8Q7Wxo6lG9YT+MAm5yYs0UF7V12B+p\nm4SogIw1KiZ3Iub42kp7ljM7R9231H6ROx8sOLkJ9bK5LY+MY9t+iCT1k9if\nUmYPCbrzPVwNM+gSghwpsNOmPsNo+MMRiUIbnPOjpM9XenXAnwZYKvRTXd9W\nuQQxJFQdK83Pm9DtARCeBMAQ1gaZMomuHHmxqUfzsbEpTO8tSryfUQ0vlUqx\neFmLMFmdDvGb2MpxJqleBJQCLGCYhi+Ogg80vCgp64S2M/gtVT9udag5hAWY\nzTCyFpprWFt5Il9JtOuwh7/NseUXHkap/In8UF0Z70AmHeMPM0/EOrZFRGk4\ncqDPn4UDZSHN34nWorhZICtPPlWqfRCA8sU24koCNWNEnpJFS5xrsAs5JfnX\nnn5ekwPaoOcekD6TO2anoyF7tidIl6gkZ5/5eTRmB/otxDHU299r3cU/BpfM\nLni8mVuZnKDRH++KfgJOfa5KFyRU2PgPXQbQ++tebimkMh68QVs4lQC/hgy7\nBCUlPSLaLJL6JOwA59KHfXx6a+R/Ppq0OpfCLSdiGwIt3eyjKa3g/ZtZCO2b\n6nq+TGAS9FUhi/ztMbCmxVe5WomZi4nJNOwsbDYihM8QF4+xZG0oGuxLeiP4\n3k7U\r\n=wFDa\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.36_1556888730811_0.07908384452230632"},"_hasShrinkwrap":false},"2.0.37":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.0.37","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"5e6029b0995cc0884239b01d8762eaaccf2accc6","_id":"gatsby-plugin-sharp@2.0.37","_nodeVersion":"10.15.1","_npmVersion":"lerna/3.10.7/node@v10.15.1+x64 (darwin)","dist":{"integrity":"sha512-SB0aLXx+wP6dm9ph5r+4TKHyaBdOWmADADIzyxvWF3BQiL2ErqSvoRc16GuAhQUeUJYNkU5cUs+NvA0lVMz0Mg==","shasum":"3cc07de6b3eb13df80317ad45bd639074a4f2d59","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.0.37.tgz","fileCount":14,"unpackedSize":81839,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc1Jl2CRA9TVsSAnZWagAAk8MP/izFvJkSV6BwilB+5tZs\niZLxriRwalov1LZUJD7rlLQxrwuVYqKkU15/yrohOazmfeMDcTZdjAmD7DkV\niv/iWLlnuwR1z06z62YC+z+QlsCR5QkoNnj5o3abeWBgoHiMkl8aXjbinOBM\n67ILSOZKThI+oBJwA6y1MGuI5dM85vAEzYKYHpBR2Jq0LeUebyw804LzNW7n\n95/FRNvEEncKSrhdzRZ22nyTNlDeSqZbX19aQ10+/fBm2GhgTvmmoA2msnvC\nj9esYYehxwiPRO+Hi479u2BT16kSqwS8aZfjBixsU+7glmfZ4vWCHOV6THP7\nDUn0S9spdae0A96DLwU3OH/T80XEG5KRZ7NAZW/XUrE9dRdULL+cDaKwDKak\nKCyW2X5rkOegQnP5K2Ka9FZigDvpNFMAdIXPtutmn+7ZP1tmtTvZqFslOYQf\n7Q7tmQXWxLLNd9LKpcKn2qV2I3ICeC3TmLysFttl1Pr8M6WtnZSyKwCOtGg+\nUcvIV9UC9HrExn6widYhRN0iThvtmwl+gWxqrhm4nh3wfkkmwGnCrevbGHGx\ngll2RuGq4i+Om0fMsz6j8Yltw9h0MgSsF34bJQV9ZcyRGxf/MmYcGOZal6QH\n1CjYnf/Pv5aMvCGGYczkAAcz8VJypas7fNTIUHHf+U75ghE+jlSjjDYYWy1o\nUk3J\r\n=hFL6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"m-allanson","email":"michael.allanson@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.0.37_1557436790299_0.05854517583157781"},"_hasShrinkwrap":false},"2.1.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"91ca6356981455fde5b42f106016fbf8ab0b022c","_id":"gatsby-plugin-sharp@2.1.0","_nodeVersion":"11.13.0","_npmVersion":"lerna/3.10.7/node@v11.13.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-4mUBWbjQEHGcQJ7RJv45GVEA4jfhAt4XCcRemK4WRiunmv9hV03qLKTaElAvNkvttpP6CqJCRKmYz36VnJRzSQ==","shasum":"d943276cf6a67b886e8e705b9c30630db3c33c8e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.0.tgz","fileCount":14,"unpackedSize":82107,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc5r1JCRA9TVsSAnZWagAA0k0QAINwzESoDCm8aEyZ+ShO\nNDt/4AdMa7FSn54RMooaApJxx18/HFIIkzMOHvYGmIAQxikZmvfYuq/wJKVJ\nO0EeUdKo93wgCyZHutwbknG6VCV+3VqYX8gIXCiDiODa9AL8YSGHZAZBX6y6\nTlqkwoPlwaDrDisJQ/6uQpnXrGto9ZhzIDGLnOVK/ofXaYqA1LoooeAh28SO\nrWLxAfnqdUBgMs92zvJFUtfx4meHz7rZFJMfkvjAKXQ4KFE8p+cANjlaksrP\nfeqfgdS4neLincLdcWZOIQ71XjOfHuOHh0FB77hrbaPkqgPZ4KibicWe3wqu\nHRCBbJmzr6Gv7XIz5vn3pNp85vbjGOFwDshcZhJ5WRDp7LXeq6STGRi8xISa\n2lToyGMy5cK1/DXZkJd2TZmHF0L11e0xhdq9skAQxC3Y+b4sLLHPHXtUuM6g\njOJgNRwGJUtCm34+AcQka1JNZE7dyueFaXdLlc4yry2lf61ItBA+9P0fGSiW\ntCEHZWUwt+WRYP/QSBU80HnrrdposywQ8qkExfVW6LM+DgefhstBK8Ncq2ga\nIvvw7cf5VTpekiJt4yFtWSt2EoHiwVCop3BC2gNfyNXWCIc5eMC6hMDwO/p1\nxfWAa+NRqcRsF8AuYUFASFL7s9seIqhqeD9QqE8m55vTCTRWe3wik6Qjmx3f\nU+/6\r\n=QFgi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.0_1558625608471_0.9682085427335532"},"_hasShrinkwrap":false},"2.1.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"534b4a83230a80235a71b5f3c4171347e8862e58","_id":"gatsby-plugin-sharp@2.1.1","_nodeVersion":"11.13.0","_npmVersion":"lerna/3.10.7/node@v11.13.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-KPBygBMHgx3MIFUjKmcBsZOAKsiWbNPE+ATrZWcbthIv0tlrYQ0vlcmnx+yKDKoxZuBffixlC8d8RZn3YjtBpw==","shasum":"a282ead8575466d0ee01e88ff65f7b32838c800a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.1.tgz","fileCount":14,"unpackedSize":82330,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc6GxoCRA9TVsSAnZWagAAAlgP/ixY5EcOwLr8CoTfOH12\nEpUidMmQoAD7KHf6shSIaJWDjMmNL3bf+mS8c1R95iTSZvf99QsS1JnmvaoC\nKzYwR2Tks1sBovADgWiWNPdYdpd6lZ1tAdfHG/t+0I7Eksamn8Or02UIye+o\nfQiTS1a7oDGd0JzuBe9ljyH2embEb9P+QvVY4dD7UKyEATc1v41mK+wvYcA7\nn8uH5AuldWDMPXzrp+7PYHoNhN93PwpY62AD6eJTx6sV1vbpIiP4C5bZUtOh\nMmlakdJdO7qYkIcPDQS7NMhg3hOubVb8GbY2A3F8c/xW+WbrJ7/kHly2iRr3\ngj4mDz4vv8pvfMxAWRqFuaHilDobzjkdW32OibI2jNtF1k7lf6EvuGEsBrin\nkf2jW4ai7j8BPpl6WNpwSuAI8pHXaGOBz7YxT2SH0HJRkLiWEQmso1K3eZj+\nVK8EzIP1NzNuQ+xe27GALu0v4LL6E+yetEUcfSfNxDnQiBQxpjdHTQWFHbit\njko0JvQPyPwIjWzQ1/ebpBNxaRmN0q7T6r+HieHCLugGOOsKbNc/Z5+s6q1b\n0RoTUIQsiRtrzc8OvDq42QTpo2GERRiZ1A7A/LiFhlH9lnvpqHwO1OiaJR4E\nkFGHjy60MhF7RJlPY3JDkEGHPsQ8+56hrUqjToaZT5nEE64niAlJrJk8IkwD\n1EdG\r\n=UI2G\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.1_1558735975573_0.10259121429864293"},"_hasShrinkwrap":false},"2.1.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"887af7dc531f4923f5b5d9017b9ebeb16ae5b6bc","_id":"gatsby-plugin-sharp@2.1.2","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","dist":{"integrity":"sha512-AU+qGJheXMmR1Z9TJxvoeQmSrIuMgWJRDdhb8QZq0MRgvAMuy8sdAj6hB+TnjAPAfxEgxp6JnF2+Ti2AWtECgA==","shasum":"5cdb237f8b5258a327958349d74c5255f09877d1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.2.tgz","fileCount":14,"unpackedSize":83600,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc7nKJCRA9TVsSAnZWagAA7gIP/05cDz/SEvI4vnc3JVct\n4AD6UIkSve41K2/MDSDMZlWCBbitmSBgD44vJ6MeZ0EjVdK4jaeGaotDIorK\neqIpf2bbTdN2m097TmJ7QZMpcdYGXJ3xZrNNkmRY5mXT3xwR1ulfB+LhAFTp\nr3EQIm9gls+fl4CZ1PJvaXkWz6mW2dFhWOgKn+dRlX+8RxPzse4aYK1GSHsn\n2f6cOplck3gAojH+xymqEnYdJGeJbepSM8DUYMDN472R4Zhj0CbzZdnqUTXH\n3vobfxf9KJAv61C/a7y2oeoERiks8vpL97mMPEqtbtjIQdrOP0/XaRMuIIP/\niILhwbbTao8GA9++aOQjZXTN3+fFSD4MSeKGxZKBJ1gMO0xv2uP4l3T1QLwf\n4avm3x1VpfB5jEl/kHBM87d1g0KkSr7EHx4/6gxIcmE8TPxEDCul1hig4YAc\ngL00b635laYE87SgP+Zf/hhSh/drgo8CndGE53omn2gjboWDRMGiwkOmsMa0\noq7jUqmmSst5UfsHAswHJolJVen/XaZTQe1q5gJEZg07ebNe2X4hAM3Dha/5\n7HiilQ9uugoFE81xWphaRHcxzEe0idFnPajrmbfzg65OE82hdgnDGmtHAkQ/\nMGqsN1+AKXF6tuvZVyZ6+A051PMOPk2Qfw4/ahyWgMhEsu0E7cMXEwKsvuk9\nbAq1\r\n=Fjhn\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.2_1559130760363_0.8121815044393714"},"_hasShrinkwrap":false},"2.1.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"28efb47dc2ebc06b4f9121441027c4e463417293","_id":"gatsby-plugin-sharp@2.1.3","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.10.7/node@v12.3.1+x64 (linux)","dist":{"integrity":"sha512-xkVTJu3/++XdkLJW3CHeIE+xlr+NyudTqLsE+rKeCBeCzbuw0oHoRCyKqwY9CN0FfKSqzj9ktZqBNNNR49Fp8Q==","shasum":"d3a110aee8d9d9788a8fa7c10ccebd90387481eb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.3.tgz","fileCount":14,"unpackedSize":84248,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc8NqzCRA9TVsSAnZWagAA0eUP/0X0p3xbPtoJwb2cG618\nAd4R5BhvQy8684SGX0EEshYdcSZB2LGRglwW8oUcd21mqSvV+Cca/xHLqJAn\n7TgDUJKHPWoA7/ACURNxCcURVgW9jMMwYA35fCMs/Rq7D6g7ZOs5usGOEbpq\n9wEwCaTcaB9YI0MibnyYRuvAPJf2mZbmtBycYYXpFnVCW5olNaCSQ9h2cduA\nMIK24kUIePFG3E1G/4oz08+AQShRRfVY/zBBXr3GsKU/isveJz0Om4gzfWda\nv/KpU/dYLmf2hnnyHm89OG16MwM4lPkm0hpPFRGXsB+BzXV/ftXziGSrOqqi\nBYO9iOGNu9lw+l6Vq/YKuNqfP4CYu3X5zu1GDdvDCut9iJRaFH8xuwMXDwNv\njoWVKhWFv9WuF60XxFjRoGoUe3McbAz4syK+rz0hGY+NL/qHEpbY5i/ZVQyE\n+Jg4zZU7ejajabliRHHwvdsds56j93/QP80AH2mkFqE4mm1CM2F4Pv1dYhIi\npxV2Q/HLuVi0ALgiHd2snSbOWkME0YnfZc/Zdo2cVD/NAFnDWrr5nftyNvss\nE+PNh6MbAe2Rc0vT1+gsncIfuSxES2NzGkoG8p/WRMGCqEIZlbnQoTCAl85r\nfV2hlZu0kpvvYtknJM0g+5BVRZXslna9/kczYCqKesYjAv1W63HZdyu8Zklw\n9VYA\r\n=n9uc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.3_1559288499013_0.4552320446453302"},"_hasShrinkwrap":false},"2.1.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"a7d6093ed53e7b4f8fc24b4978caef900427d95d","_id":"gatsby-plugin-sharp@2.1.4","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-+C0rpejmkWfNu9o+ABHHDuah6EYpQ4tmdjGh1+ahaZ95PvXwkrwNHdH0FPI5I2fFDv6HrIJRXVA240JOgpyH8g==","shasum":"15df65b4d9bfe29adce7582919e091d95b29cb51","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.4.tgz","fileCount":15,"unpackedSize":85487,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdAN2fCRA9TVsSAnZWagAAwtkQAJPFVv/5Y7Vj39moeqFd\ntMPy+nUHBt4uCMdVPe79+mW+eS0jIcza2ij73UAveJwIZ60ZbMmHbHhL4Cka\nwfny2ZXsrykIpD6k1WR3W+r4gFgZPqg0X3KOmPQ+BIx9EdlzvgyrwnUV3IND\nBHonivLVwG+WP6/Vr/7Wu44XKfnMdfA0aKCRGDNptc9d56US9gZMhK6Wy7uc\nr7A/X6XI5JI/ee2l6QbImSig/0iI6iCGT8MXcvxhOpXvwgMa/ZW/YHrym5+2\nff2lXiHPCdJvjQhg7OzO67Za1STRoxmXFArfRsFZtFi5hsFPCd2r1FXZleon\nrW8Q3tt6SYVIqUoukbx7OnvOd9IAUJAo61vW3pwwo3PWZyZ5vn8KBR750cC3\n8Z7+RHs1jJzT0szi136RAUncKM7H7733jlYVGuZi6vnpb7AJBA34gnvy0XgD\nzWWPXWkP6DF2swMdiF7JUbojHh4NwH7ed/RyARTlDnVZGUAPujKLt1Z/i/fh\njYBRVTrX/W6h/bs7KnlHoomy2OK6WG7W+cxALYkJML7dWU3hxf6MazVW+ADw\nex9OuQ7h8DkNLRP48KjwNMuu+kpgYo26Fuu0f8ZsxaGJ6amG7t2UcIUgFfuK\nE8RCjJugccvcVa6F5NUyA6TNvphRgGig7fB0LJk2kv16CfqjaHTPaeR5viFq\n4dyW\r\n=f0UL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.4_1560337822888_0.4531911331480849"},"_hasShrinkwrap":false},"2.1.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"bd27ede8516988ff2a17a7610b2e9528adce76ce","_id":"gatsby-plugin-sharp@2.1.5","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.10.7/node@v12.3.1+x64 (darwin)","dist":{"integrity":"sha512-qHW0HJ3PK/HrTxg9wEqh8oHPv4R2SThn9z2n5m7pkrHOK9ZLHTkUaXtSNqcKzTap9cd7K4sjgw3EXaM5G7Jc8A==","shasum":"f032cd6e1a42980685cbb386a58420a168002060","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.5.tgz","fileCount":14,"unpackedSize":85335,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdAYRyCRA9TVsSAnZWagAAK0cQAJh5S98wanyTc+uxot1A\nHk4DSPgFTTeuC6HzydHLISf8o0De0SogMKbWqU21CfbCqwvss3Cjy+Vo4JI9\nn3RTTx8fj4UUXtyKC+HywhDzb+IZxTCbehALL67euYmnJ3vH7vxqSYXj/l/M\ngm3gDnLymt5aCjkJ18xtH16Aip8AEMjMJNOaVgAnjj8CF5x35KYC9fWB9dWE\nDJppNiK1h+m4RQAuVImBumh9SIQOvBm5bMYz4gC4eUTvFeZWUvQX+PhxzrwQ\nKAxI091wwOBnpIVCYjpCcFFuw2r1cdtsJ7LTvx5iWhJupz+Us19tQWbZlQSM\nQBUEWRiUDYmh22hOxqmM6/73OOU3UygSAEKOVOFUrmLbUygQRIK26GUb5Tyf\nCjd9aLtZuJmHFC1mrjq3sUjw7Ml6zKchzdExLiCdSarkGatCrsKOJEZi82rr\nwvg8RtL2DaP1uEMD3C7XFhu1SFcGW8337g/y8PFgLnwm2JImSO7T3BA0vIPJ\ncs/NHatI8GEmhjmyNubsTOBq/pBuyT7Xt4sBblNdjpJG6RsfWk+ytux+HUtA\nxWk1stz2lTXQkji4PYLObzkW69nHYtT7J3XelzEU5fTWEeL1vJwYNEBaXERI\nCT/pBslbPe6VURcHmXlLm0g6kBE7hgSsbl9TVnCaPhJwrZDlf+UzPdtk6xIo\nO/Q7\r\n=YGuI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.5_1560380528820_0.7702642244668529"},"_hasShrinkwrap":false},"2.1.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"f3beda151934b465ec4c6161223215906ac42a0e","_id":"gatsby-plugin-sharp@2.1.6","_nodeVersion":"11.8.0","_npmVersion":"lerna/3.10.7/node@v11.8.0+x64 (darwin)","dist":{"integrity":"sha512-r8usE/XOAXP4AHr/Vdtt2+2+EGeS7ivdTVw06INOZ7tSpJZ7bJkxIDz4vzkAhY6fq+XVS2Hdv5cFIVPN34flgw==","shasum":"bdd32ef0243f302f66f68c0611732ce33df9079f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.6.tgz","fileCount":15,"unpackedSize":86525,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCNwCCRA9TVsSAnZWagAAr+AP/0e1UR+DXQDzMPETVgg/\n7MIsYp0c1VAyerx9XRnQcv2O38ONRAD8NIT9bZucEkkX596srQQNtcq7tObP\nlZJ4mQvnp9Xc6qgy1wT36Q5coML8kDsaynH6SKWyAHGGDXn9ata0qLIhg1i2\nJ7LPwEnqMNEkpblLWrEiLy2V3crj9APfyf6dQxC4FGrH1WVxc/pSUStLgKGw\nHN6RXTZtn3HWHrk5R8dKkzt09PmmUxmeczvUfzQ/ZwksEREfCq6k4nRcsAyx\nBngBSueu2PK4iqbR9ldN2/pipAZOX+gUMZUtN/YGE+LedHB6GtcpILYk3/ag\nb5xYsmdVVPlRqBFz0s979ffriGswjBz7vomMbBugsNYcUeq42WTqog7Arm6e\nlU3+t6dRaFdsMDDl70YhNEJWxYXrMMvGJo1XvU5wk7eKCJ+sZCfTnOAC0vPZ\nls2xrP7rWUt8KS5LnclQyHOJ4jkAnKDAkx2/sgxJfFCqX7lYNobWSV9JH/4H\nO+A4qtuyUms9pJy5FgdERF2R4T9fix7V8gvRlW+cDQOk87/v0s47oZBT+eli\ndHiV4m+2F2tD4U3X/zjRqXKuMtqYXAHNdOL9naNe5eW8xShTWjCmVIGhQeVG\nA0TE9nzibBbvhYrC3iFHumuRdEdfAFGXoE+eSMfsWD7bYzMNvK1+/4eAZdNo\ntMGb\r\n=ED1F\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.6_1560861697581_0.7800549810497461"},"_hasShrinkwrap":false},"2.1.7-cloud-image-sharp.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.7-cloud-image-sharp.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","axios":"^0.19.0","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"c449984c8bbb2ffa41af843e96db1850a2aaee50","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.1.7-cloud-image-sharp.6","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-cfuLtShfzBfp5Aaw+vykefXGvi6CYGkcQJvLiGX4dYIuaSgu2q4AC5aux5y2LRknh+W9JAQQR5uRgi2kQNPmrA==","shasum":"55c25e9c553c02c4e02fd71b6c6191d6bc53e731","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.7-cloud-image-sharp.6.tgz","fileCount":15,"unpackedSize":86776,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCSw+CRA9TVsSAnZWagAAVzcQAJMVuLF76/RGMFTYHbPb\n4JF+cKkpVT54eq1nB2Mv2bwzriRW3mXu+2+nmcwvhKU6AaTo/QlVCEIZ3WNU\nJ2xngbujYJUcYmylWdebLS2G9L63u2SZ3IOWP87xYZK2kbRbvnK02jf5tDsF\njwGx+TV/kXeO7BknzPLBviaD1hXXctRFGkH9OtGRKDR9u2bdSmsiZZO9lRzo\nnKXaoLNrdBaF/rUmoQCLT6YGqVu8I1LE0ZkugqJ1fpVgypqqeE3yKFlDn93k\nwTcIr7tUDuGJHhxRbvzGIrsMAHp6vxmRwacHWRxDchoXGd+2wzCifMBrVk5F\n6ELjkp/DfB8NaYDJZuY8Ou8OplB5UpUvPYJ5KaRsRon4ydePA7UoNzTU4kvO\nfa761s5a3FWJlqD1FAqB3nFkx/s9fzl72ZkIR8959kQxtJEx20NqjarQqHYa\nk6XqoA/rfXisvfiurRAl9lDs8j/pgoPPJJQlmqUkj/2lrJCRAdP5d5RB/z+I\nwbAa+q25Y3tubQB5Qwh7n09qKSWb8iRJeslE153FtN6jJ8vulzt0+vqT73PN\ntLz69PDsTaWY8Bky4jmHPsadpNyD8nMlfu9OPmYef9OfyR7B/HPcBoyT6u8x\nXPdATeMrg08EWNP3U0qOjN3naLfxnkqJQ3j+Xdu94Brh4Jdcx8rRg3nazgTp\nWMQv\r\n=pXU+\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.7-cloud-image-sharp.6_1560882237438_0.1114920236143202"},"_hasShrinkwrap":false},"2.1.7-cloud-image-sharp.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.7-cloud-image-sharp.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","axios":"^0.19.0","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"372092316837335b231b3ab5c80dd467c74a15a6","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.1.7-cloud-image-sharp.7","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-jtCcOWUZS7dEpgXgBstOAJIeE0bskzPybIZ3wHjlS4NE3UValfg6nyPjMPm3QGSKdmPiF+wrD53hUi5I/b75mA==","shasum":"285c2c6a37a80434518c73e675e516ff30942221","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.7-cloud-image-sharp.7.tgz","fileCount":15,"unpackedSize":87017,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCS/dCRA9TVsSAnZWagAA+ToQAJnjnLgyCUr0H7iVXzxF\nij7+mGG30NJVUDT/tcixBDBc3vZ700VJtbh5ODXI09S0PAjPJEfeIGdMTb0t\n50EVdhJJ2T4fnPRQdZVb3SDx339URxtbC1w7Iu938GCNYg4NugK6d/6bo1a/\noxMGVhS99+m/vsIlvcjHN0cBsvY3igiH1tdL1dAnl2o6xn6OO+hI0bh6AzTa\n07zwpp/AS+JiTBW95C17YNNzt3PJ3MWcM7FDF+w1nhXWh4MD/3Lo/dIrMYyG\naaJrQ4t5K0u8YMyUWv+tXXSRi0LVj9xPYiESQ/GIQpHrdRi+AaetXBE/bXAU\nodyjJH6HGEZMmqA271YUxFnunoLhJeIvZIuaeccmqKL9dg1pxwZg1szbnLX2\nCj3zuSgprQ0njs+HpQk1rjoiUkwb+pk2DYD7o1WytyYo0wzM4pCNUkGYtyo5\n5zR5tYgWBnPnO+HzWSfAcUQ2l/PBIum4+ABzfMTvjIAnTVyHPRBAK7+vTUoG\nSfViWgYKVV967EHUemtHkaciQp82awCV3uRtbFshuPsA/PE3Nz4CNAcIFTMv\n81qPU9v3xRzp5lojB3CpYfYecEjqhaJFjtj+gPAnA0fE5CCZYDjCx7rJ8L3i\naJ1ICk7gqKp/ijAqsJU+pCierI32IrKtigggm2pihgETBm3ghh3LxWKe+eTs\nAB9I\r\n=msHc\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.7-cloud-image-sharp.7_1560883162620_0.615534671803535"},"_hasShrinkwrap":false},"2.1.7-reporter-npm.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.7-reporter-npm.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"55c814f0828dcc9d059a0024c2774fe8b18a5ef4","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.1.7-reporter-npm.9","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-k8St7PS2WBEF6lIdatN+d6/a15uJWdF1vl13yFC25uYwDyUppp9vc3md7XDG542jjYm42t5VbvqYi0Enm+L1sw==","shasum":"6686034d313439d86eeec5503f3668c5f556e931","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.7-reporter-npm.9.tgz","fileCount":15,"unpackedSize":86552,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCUXACRA9TVsSAnZWagAAZi4P/2XMolhAeeicZcQ1+uvz\nV1QjTOrd4NlG7rVvITjg4zlNf48ZkBnmScFjAcvoMOmyZFaN4vpsmpF7RgB4\nfBnMe+P/Gjp2AISoCAvchjPLApLPkFjZT0giup7n3D1X0IIVTQ8rZDpu17Yh\ngw3KeQx3Crzegnvz64WxmuwkblS76NWwC6hvoeVD3ZzvHufB/o7PZ+YfhRsl\n10eF53thpivVm8Fk9/sYLvzXz5qU/wcaWRSOz035iq1VD6QIcMg2wJsqjpfH\nQuQhz/KNkdW/iTwGf35ed44mte37QtymD/CSmp9vaP9vDCto9EWERFsmcEF0\nYMTt81AUniaMfk/e732iJBE3XHspac/aF6MqUfcThVcPsg7C0a3SuroR+Cbw\nNziFpUUKpO4g6mXVBDz9Sf15gGGYBF9fv9otOcTFDj55ryzWkU5LuqHUvZLI\nL0KmSgsM4mgtXcMmhuiG9jWBTL5nOAAyniz0NDZgGjGreHU2sGVWwGxj0KqU\nGwHD5ffwpljNKApI7dC4c9k9OlnBeQ8uBx35s01tVCVa2vRJAI4XddVdVjjo\nrKQmgEFy0haFUMM5EF5BWspknyLqWm+T6yGWfFdvUE5eaajSIh5DkJRx58S1\nVJGvQgNs0umKwSxKSfITcOG9dfe8+vHxQgLKrDIYvrfThO1wvtoOpKWCRmry\nov4U\r\n=WpkI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.7-reporter-npm.9_1560888767489_0.5473559922305893"},"_hasShrinkwrap":false},"2.1.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^1.1.8","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"75a9e19cbaca27f0d32401c1d9015fa891c5bed9","_id":"gatsby-plugin-sharp@2.1.7","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-kLcNQcRaNLncjtjac0mDxckozYNsSq2WT3q9KH1GndBeYC3yv4XE1QgcBwArxu+7keRyVpim6oz4Iv9mMVvW/w==","shasum":"5f54ad420a62d6b35b75c86b8aabaac1a2db119d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.7.tgz","fileCount":15,"unpackedSize":86561,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCU9bCRA9TVsSAnZWagAAMQoP+wXYlGzbV+pG2KHXqI+E\naK0lMPDJ1iNCBwZDuvZq03zjqcZcHwxdBj+BekRPdeLy77Da6Et1Hu5W1mxx\nNFFciwhm78oXbCSZd9Hhe03ay+MNmeJhjGaMH8Gdan2QmpkF1LKm6P7FzL2D\nBDFeiBcAnuMER4r38sDqeON5QH+xTi8UpMQwkst+OQzLRQGEmgmnakvxMJ1V\nzmyDciX9GIQ9a3rcuWVy+iLEod7XdqHC2b2oCH1KEITMCAB55Md3OzDcHtSC\nYIQTAFid1yK6qH0iiIHuCsrU+xT3qwSNdNoaz8RlP/j5tSIHPvgQzfT8Y6/H\n0VjYbGoUYAiRIf0j+WWydgIvKVQwmLFQRcF5EfpczanyZedu3JGc91yYRxY2\nmEVCxKBCLZUJhVMFxD6DHgyp9tj/oUku/CxNzyB4snpN7kkcMSzuAlQAE3yq\nUC40uGSNFn0TbUUPQHp4/hmmYH9GnBOKFD2qJHWuTB5MUun40xeMLEvRSh+2\nNdkscYzJHJmgc/8DabWfHTno4Kl/hMMg5ZXuvAsAguMJyNwqK5LOeI22xuSy\nUC4RGQSqOOUNxkmIngZ33LTXmR/xG054nXQ3Cr2XGYWzFICSs6R4CsTBid1P\nCWWPWbPJUHDz1CB3cwXCsGRB57NpGqQd7gb1Jb/EvdRjAmurCNCZTm8E3luh\nlu6n\r\n=jYj3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.7_1560891227076_0.4633525492914743"},"_hasShrinkwrap":false},"2.1.8-reporter-npm.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.8-reporter-npm.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"c1ceea076eac5425855b3f19ddc746c77d604aa5","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.1.8-reporter-npm.8","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-mEulkaBqO7XrwM4+TCRhlWNFYBGnUBvdmScZShgU2VdhHXrIPn5TllKQAFwJ+6rn5bcXZLYgJDuBIdoukl8tiQ==","shasum":"e4e346da69fa4eb645ea80fb417e202de9688bb6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.8-reporter-npm.8.tgz","fileCount":15,"unpackedSize":86777,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCfCwCRA9TVsSAnZWagAAs5MP/1gBJouZCvhr7Rx3Jrjv\n3uA2KGx56VzQoJ0D1Zf/mvKyS1xIT8TXng5hhcGBiWIkphyTN0/PievjYj9I\nb2QdVNGRgHOmXoZSARy2FDguOUihOpKyUscLqibzBg2vADeneSfWBC33N3hq\nIbIj4g7A2+e7UX4CIlaa3pa3t1xK7AmLe8P+qkBI+TnUpKaZGakV7SqwM/72\nlYCgV5KfxixKurGF9pywRadnw/00Ml2k9YUpDF1Lw5VbvUjdNHRnwFFUXY4u\njwpT65FBOVKsP/9gNTEiFh/u6IhnTuaB4JmUAPIb5DCRm4D8pm/ioO1NuYEY\nTljGO0V3qVPFcUKWyUiyNl24ccc6sjW7OcZePks9Wssf9k2NhjMpTptdBaix\ndWa0N4nU7bqf4lV5hjhUC0ozHdmdo1H7PKkmbbt6i1ahjuVEDmBqbRKrUFJg\nbY64MjbpXVJJbWOoW+6vTPZp2fWl0Jnl1XEpCqCzCZg+7DvCOS7d5ZsqkfZW\ndQ0+YzuOLNyRT/KHgjL1AJ8FicEa0COa3UyVGHlp97ZLmA3jhYPXb052AEPv\nm4S+Fxxmg/D+KWkdkVdicq+fUu6LWPgbjMolXNgkhFQWY6srd4z6DixL89l5\njKSXU9rpwm2WZ17JxZClw6FDv2EbAfYD57xzyGSA5TvRnO2IRLaGgNe0gk1r\najhv\r\n=H64i\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.8-reporter-npm.8_1560932527556_0.323192353618291"},"_hasShrinkwrap":false},"2.1.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"8457e706ca380e6bb8d115817ae43e9d786dc389","_id":"gatsby-plugin-sharp@2.1.8","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-SsRQ13TZ9IweTlyEW/6RnthDsR0e8t+t3PmPKMGSF/ufwJ7d9OIYdU8puxLfunqZr/GCn2E8VxjGVyApY9Uy4g==","shasum":"9b54c49efa0ccdfd4822a54419b4c811ce71982b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.8.tgz","fileCount":15,"unpackedSize":87195,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCgKRCRA9TVsSAnZWagAADJoP/jz7d4rlECPpsfE0ltz+\nmtsyYemVmbyhqRml7exuc7rBzU/qEhUUZh2pjOQT3EaTqEMNKFOCwhuZCwKc\nub1X2K79VkwGDUPkBLCh9LvmQRaCtmMRyOyDJqMHZc3qQKrgHfXjkH6/Xww5\nclZjpMGKO8ZjGxtdSzW3Iol0gMIkDuMSRKW/uHjb++w1VJ3wXGhV90hweHPd\nBA2K/Z3TGGyBXdQ9wneAWhE0UDgoz0N6QaNH/dwhMY/NRcHmKS8NcN71r0mm\n2CFM/btn+CIIplZbf1IWPDtfqKsS0UabmX/jVoFck8S4wr1vyGBxwpooOGAz\nrSLFbFNqL4r81FW4Cids0ueyk9aX95mcAK98MeucTaZMTkwXJOL5WBX+Fw66\noldJV6ydfIc34yIrIAY5y9xAo/ih1CcXXJLAg9UeOcLi5eU2S2pyD13BtaOJ\n8sLufZlMgDMDNkE1e9PKXuZntvyutbRP6fCEcSwaAUKQoPE/z/+Y0xGyd+V1\nOPdn4rVXyNE8Q+FB1CXmcEJBSaScJeac3/fjt0vLjqWgawQqFfI5rWUXIaFG\nBrjv/M290sraMP+hh64LWl9tGh/kglq1mZ2QvvPAI6nmn6OiNzPc1OWGHoXa\nj864saBkVg45mu53GiVveL0ak1yIv80rmOPdd46taLivZpLKGwdRyg0bTOoI\n1QZW\r\n=hJfo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.8_1560937104834_0.6871661226410055"},"_hasShrinkwrap":false},"2.1.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.1.4","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"gitHead":"9d5cb106c845713367dd8ce07d2fbe0873350b77","_id":"gatsby-plugin-sharp@2.1.9","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.10.7/node@v12.3.1+x64 (darwin)","dist":{"integrity":"sha512-iRZujOoPQOc2XfgCz9/OG6B2AmffwRtPib954Am6DjX3D3gqJGa4jbzE7gLRng1mrJGv+xBe5wPJGY7U1aVeBQ==","shasum":"0ed1a105b93a6c5e65e534f234f7aa1c65a2edfc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.9.tgz","fileCount":15,"unpackedSize":87637,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdCgtvCRA9TVsSAnZWagAA4FIP/2cg7wGRR+6evN2qAF8H\npC0xlBSzddLZg6TsJGQsdpmGI6JKwIE0OS8/Gq9j13LtdsiiSAq2HER9/jGW\nu2uALFh1POi+wj38rbrdmpJ+Bo2VKksuehnEwJz2nmQdtiUwszuD9Fy4jjr0\nBpKTCF5IaSJEqeiVgZXbgaojLGe0JZ36weKDsMWOCRaYorvvEpXy4Gc7AM9m\nu97cNBVA7MWXvjKa/VRyOKKMBlBIMtjzfmsgFDFNpDQjw5GBdOjPjTlTMa9J\nDKiVEKd0nDy2vJT3clWLkOJ84yZuRRSgtIexZS1o+jwdFhJg8WVBNlZMLPDZ\nXzC1M7MQ3FF7X5bXOlbctA+dBdS461qbFAJ7jOT6qdiNFjdrj20OxUs421p8\n35ijthlh0uj2JHq9uWMGxKvjw9AsTxWLlcX0WhgWLb8gxwX5nY5eeB61rCpW\nFo2ik2yRjc4MGfQNdSsQMw1MhBVV+4AwDa/VhAFpaijnAEgj8FpxN6F2FvFs\nGVy2VqXtjgHNY7E4yZ6PE1lBSe4dCWL3cery1VbupysfMKx5dvQ/NIY3vo2/\n3xeuU4pRi2B08F06/1Nenwe6Kkqw4MN350wp2g/IuxaOjgrjkX+HoeL3NKLq\nqY6NhRvV0UW5wTDlAF7SlsdDeHVnikg6xS1vc5MyOhX37cRysr953/uZhKn1\nG+Cr\r\n=5z6n\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.9_1560939374872_0.07289065793618343"},"_hasShrinkwrap":false},"2.2.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"90d9440bcd44c2b6d70c78bd30adc8c0eec90fc6","_id":"gatsby-plugin-sharp@2.2.0","_nodeVersion":"11.15.0","_npmVersion":"lerna/3.10.7/node@v11.15.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-Ol68O9gsyhE+XhLBf+2dMvRRaELuaDqbUdrKxiGBldDcUdJn3TzCr0+yCxwZO+QWN4noiOoqb6pXP6LUBK3YzQ==","shasum":"318b71f32680c5dacb78130334524aa9a1fc9821","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.0.tgz","fileCount":15,"unpackedSize":82722,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdC47aCRA9TVsSAnZWagAAGtcP/jh4vNP9JXmLHwd2snBj\nqy00Z1nE/fSMPmgaIJcR2SzZUmOtY3IzwrItg5bZApgYpHuFpIdFmC+I0Xgb\n7IiwL2lDBcHXlYSoIUCR8HhFARfYBX3hh7X5VMJ7XE7lD36sD3XOjtuhETCs\nqSecyDtCG4M9sbPMHBqITOZnBUb4cX1XKV3oRH+p1tGHm6EvEwmr1vYBqtE1\nRNQP5FaGJv4yQKwt9+z6GfG+T/n/MAzM6f8Y2ZNhSQrTFfGUXnqCrzX85xSY\nBtGpJOi6jQYlWPtcHC3Ya0qQxwJyqovRbWk3abdJnab7Ib6GRpAhlej+6+do\nTQtoK4/vqyqwBSs/Zsgzdezb6RwPZTjqaFfP6lxDK19oEVlcuQFKwFaCPBF0\n95oOdXCAkIqbEpOZqVTuEZwcluqHW++ShqUMrjNSGMTz55FHpsRGN1+wWdkl\nx0/FwUiPrZ0oo00tWKiNXm3FnFW0h3d5l/Ll5/4FdMy7D4F4QhuQOLT9U3l/\n82IDkkIazIvf5MycUt1h0LJ9igY5RLBYbgpZvJooh6WGaGb4Q+wywNPWkDYY\ngPnKNPXQcLY0aCq7GmplhyTccMgg0VL+hy0pN6iDF+PypQx24ltBQTF1fuZr\nkbUZgaqR27si6xbEZCiCptxUpuBfo2ddYLnTT6n0SER2C1EqYHNvXBy2LcoH\n0zm3\r\n=VJgj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.0_1561038553752_0.38376800436331315"},"_hasShrinkwrap":false},"2.2.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c9ea948f068c3ba0be11adae4570900445be0922","_id":"gatsby-plugin-sharp@2.2.1","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-NoAf3HK9xT9YdTd8rHf9SoBJoq9uZ+qLxTVe9xdAeOusGrnPIndbZIbPKzzBrhJZ94kihEf7ehEfGCwsh6c1Sw==","shasum":"a2c91e39cf33a958c108f44b71cc01a3a506c63b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.1.tgz","fileCount":15,"unpackedSize":83279,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdDJxiCRA9TVsSAnZWagAARSMP/iT9krxp6i7ZBQba5JNH\nWTHRvziCBhW5LoSQEyQ1S2Nk10qNz4LUazacDcYinRPJ23oXp8vdAieF8no2\nTdRa9Z2YY2IxY8PrvzGvGg+lTLdYFu8veIA1QNO1Mg6Wmn/SBRNGoC7imO0v\nmDVUfQorGCa4CnJDN89aN5bCfiiU1RtI4GwT0DatTW0eSnRlnZbbaPW217bk\nmyAQEhp8l/jtkP6t4pI+zv2WFgaNXrJf7q2fRHNFT2mQBEjxAn8838wwP7Ef\nZUfuPZJXZ1tvkVgeNChI54VYTiYYuZYzdi9mxSdDSsmOCpYJX5F0a4IE4aCL\nbUzRpow9oj+rX1U5h5qYPHuEhO+rByQful+YZaoaFnCpCnNCN6S/8lFwOrdL\nCKz6nqcbEVh6L9OUeIKys+AzUsxZOln+jwCThvd4Sx3ht0Nf6jIGZjk7hu0j\nUOOKwsgIy35BuyTMVjxZnESRryg+viEDpfsD6raGIWkStN1JbQiTm6wWG0Lb\ngBovdh5MjQiGM+9PPYSWiV3mvrh1K9cRgnxiAWrKd5qJmDW+bcDNGIyf9Dcb\nVFY+K5nxnIcz5I5G3bxbCQG4hsB+Y9D7dbxVXZyr/N+DrVeeDZrBAeOax7Gk\nAzEu0QSqyEsFKxAxBskOjTqntP1HbQ8t6JS7VF9tfAWIKdOK8Aww0r0lERUk\nRrws\r\n=ypHy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.1_1561107553410_0.8581994123475947"},"_hasShrinkwrap":false},"2.2.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"2fbaa3aed691ee2554978083a605475401309beb","_id":"gatsby-plugin-sharp@2.2.2","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.10.7/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-e7+4EWLhcucRHFjtDTJFe04IjvLyh0U6Q+CqqcYmL/veIDTVf7XvGefiKlcFxG8ys6l2d3gd3L4+nR8WzV6lCA==","shasum":"cb0702611541a47282059777cd72785f254e876f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.2.tgz","fileCount":15,"unpackedSize":83504,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdG780CRA9TVsSAnZWagAAe40QAJKXFGgJTZkarxnLo81e\nyTsVGrlcgdTkc3pey5/So5hlG/cE6y1QhDW9qCKfWqcDlg26KV0H0QBhxdDc\nzsf7nBXjVSx05WxAPlBF03V6Jf5DxCFdvPX/H+D9lRmqWBzW7G7lPG1UiVh5\ne5r3zo+M/Ej/2kaq17UP2g4SnQJ20D+7d93T56sWHxHijqJIQxVIeHZdyU0j\ne12OqTHApjPXwcLtSPxZhN1KmDFJrGK/PiN0U6XTD0tjEZTOOsUtbq0rPbQQ\nyQ2Q8K/lEPIWe3r3G+p5zJADKyjFkmUdylFaxQW1LjqPP+wNHpG0ebEDw0KQ\nfX5A2s99CyDNBPBRqceawcuguhgx+64EoynP+Tymaqsg1ovH3MuYwd7m0Wa2\nN+IiJ/YA7KhrIakUPEC7TMPiMfVsqWcVgsHKHxy8DBJI9DrJtKvveqMWtf2E\njtLArUqeiyaJgUvO/143NXmoMgMCuLYDjUJjXTt/smNJ9bxOV1PxHc0Jh6E0\n/0UVWDi1DUrvfkUGpF4v76wk+PNbLjmGE8Pewl70bffL7fr5i7Y0Q2aeMOd8\nqMLim6LMqWk/+5cGMr1VD3jXgG6ny0qXj/fKTQ/IG1XPAQdinZ0d7O0i/vti\nOUGT66bXRpurOGmw4KepaUDv5d/4p0E7EGPJflE+iLsrCRL4OZJgT3nrdBtf\nGWxo\r\n=ct6m\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.2_1562099507156_0.3017414791642572"},"_hasShrinkwrap":false},"2.2.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"0f38cd3dc4afa0e056f8d10e8d95b2a2dd782ce8","_id":"gatsby-plugin-sharp@2.2.3","_nodeVersion":"10.9.0","_npmVersion":"lerna/3.10.7/node@v10.9.0+x64 (darwin)","dist":{"integrity":"sha512-wkNKe6hEHD0b1/VgB38wPRy+sFTU5AvCnmgxikEbGyQl4WIZlAeGZjMOvhxu+6/9nSRCLQuA90RU8pLXA4m/TQ==","shasum":"6410a86bc3ac8af9bf347b25b31de29ba90e5785","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.3.tgz","fileCount":15,"unpackedSize":84298,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdIISMCRA9TVsSAnZWagAAAW8P/j/CHci1KOFV6vyEccAR\n4AsHNid0aTvI0iveRn/pX6xe2MzjUYQIHL66lW3z+6osaRcD0Mf0WhqMT0ox\nlY2e5sBz8W6MYzczFdsjd3sIz87Ewhd9qMzvYhwvq72zgxIXABM0qTzUD9Wp\nEVjdTa3NKWVc3JgYIePiVV6eznqvbcmTwNARM1j2fVtCxJo5tJL/ceOAdXEm\nCdbT+stUj9YZcocip3f7BPylwcnm/QkS4ajenauaW/aRJN1DW4SUgRSo5p/e\nGjyh806AjUksf4BVtCieizA8yRYruzFq9gAGorjiLA+XGSKywRQ6ZFbOg0Ut\n8TT77Bw8f1qULm0gFz9GSulpVrfS3nug27t1Rv4Z2JGIIFhIgx9ObSoI7wut\notv8KIvNtzcuHI/vnMJRqMmxw2EoYYdcDsMMvR9YtU19+AncDvPncHvS6vWX\nY+5nBPcyDPtr6YqPKlVlT2KWy7EeceBael+bFs/05uhspY8TFxOh9NNnzJ6w\nCvwoDy+4n/uwAa8wuwkTFofCct8zKW9pabVJ2rTWZ/EovLDNzdtbIOqQKT68\nD1uC6e76Oapjhb94SXqkHoI8WZwCiHDdD/x/xvZz38eyTy+nNT20nK5QSZuG\nq9vzQAwMKC6NpAyn2EVFemmCAaqbxK6zWj6WtbVWQ/bJGiE5BVUFm/uDlm2Y\nITv5\r\n=JQ/z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.3_1562412171998_0.27596354766955744"},"_hasShrinkwrap":false},"2.2.3-cloud-image-sharp.52":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.3-cloud-image-sharp.52","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.2.0","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"335a53fcbe12b0d503be8be824195a880a26b2dc","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.2.3-cloud-image-sharp.52","_nodeVersion":"12.5.0","_npmVersion":"lerna/3.10.7/node@v12.5.0+x64 (darwin)","dist":{"integrity":"sha512-XGvMu0eYhrtW1hSa+Axy9ehwh7pUL+RjspMzNqVBwPWHoNFFzYJsFoi0w8OrJ6XuguLejh+ocjE2uMb0Wbgx7A==","shasum":"a4cb82afbfa7246a91d11e8963a9917fd9b3f7e0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.3-cloud-image-sharp.52.tgz","fileCount":15,"unpackedSize":85084,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJShRCRA9TVsSAnZWagAAqN4QAI2uFi5q1yX0j+GGHID5\nxClLTsAFz1+Iybul5dAoWWx139tEygLSozV+arfG4GXq1PaYE87ijyRKlYVP\nJlX3N/aO+TofhZVXZgy7ym5JS163qEl+y81xwXgZBSvmZlKhGe/BpKs4aR4U\nzs1TVRUtvuthucDhnVrHRDXHteLTvppu1LdqUewNRHmHwAxzBFAbIof2Jaj9\nHwGJRaAMleJseLe8AP+XVs/P9dvMvo8wpFkBYYXorQ0ISTzCgSDR9LOlKQmm\nWZWAckltoJlxunlbIpQVT/OHiFTFW2apddgfZkv09lNHrDukYlm/97k52rC5\nil0gB5PYFeUhdvdQeGU2P6hNiF+Knj/JPGnHhbldhKA8GwiqX0ViDCQcre0l\n5Ix993fl/YLK7RA64A0dbXjz7cMGqi1ACY7oj+HVpCWVTPdrJSAK0iMGixx7\nrII9Q9lnNQxcR8Zqe/MMfoU9o0gC1GYwlGm0PvGs4+DyxFZz8EYZv8RFPXNz\nZyCqK1QmTTv+m3jSjUiOUkdR4ZOECvoKwWDxlXPwzBAMa/3LSdydVhVzBwF+\nMOeGX+wXfHtbEwsXY5+Gdme2fJAEpOSNui/jd1h2GlxO/QApKIDl5z3Rs41b\n6jdd5FOjibaOfKzWKOC/BP8pg8KakMqWtKZA0SfzwSvWLRfpFrrU6JAEvnTT\nJeKV\r\n=bYBp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.3-cloud-image-sharp.52_1562716241185_0.1923506549502758"},"_hasShrinkwrap":false},"2.2.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.1","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"a3288b8efe961df2fb357793017a36b608b39549","_id":"gatsby-plugin-sharp@2.2.4","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-+1TQlcfCqz0ni+ng/1bb30IX5PzWF0STwtSB4oeqYkpEbqJiG6U+KDbpIrpWHXH7VsjQcNS/32YNjTHn0b+s5g==","shasum":"b4d7210d5e3b77c8f4a1858ce838e332f476c65a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.4.tgz","fileCount":15,"unpackedSize":84530,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdJw2TCRA9TVsSAnZWagAAgdcQAJY0+SqiywV0GFsob3u1\nJG7SWXN8ZI43oQ+HziEqMIdE6PQpep8ON3I0tU14L/Ed1Qqz7N1YNuV0zOQy\nUdvebNPk1f4SSv7fE/7+XPzV1A1YKrU2sjovdGvYaPLpDluY5S4Bu66/xxXB\nDmPitdeovrsk2iaOoW9es+h87Fq8/bBf1BbG1Nzn/7kxB30gs72fQyJUpuXH\nGsTLSN1phS3Q37A5JH+//W4FaZ39ze89adN5wcDkNZu0qYMhMHq61gf4gqeM\nI8FYmfbLuWdzq9dpf1mWO9hloWWvcUt0a+5cKOfvHbuTiIfJOV/Yrb8LEewj\ndgCyqftZeughUmEgpFuQuH/33KFuYyPS8vAV7ziC1M1hf3S8mVoO/E3hcjbb\nkDRSl2ldcZQEyvb4OItp3ul7aC4BgRuQ7UVaiqb1a3BPjGtuBS1sbOxlJVLQ\n8/6n8k2hifEAbkf3MTT6xU9go4BH0vEtI5bU6Zw5DYTp6jEy+ZKD+2Ksm3+V\nYU1Q6ZTfHy3m9cXc2Jg7RiexnBQAyQpZLsI/FrEQPfrleb+VTxzzZ62B743b\n9z0XKsxuNA8K2oM0hMiwuZdDbtIoSyjPC1Shd41l1Tde58lk1dQOWssDSCey\nfOD1ttwcOpTbW1wPBNkz3TMf5q1w17vAJNt+4wt08SFwOALeUokDSHNhUyvW\nvP9W\r\n=eogj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.4_1562840466551_0.42464227946054867"},"_hasShrinkwrap":false},"2.2.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.1","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"738cf3bdbbd3a757ca704c4289478cd2bc5efc5d","_id":"gatsby-plugin-sharp@2.2.5","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.10.7/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-IRCd5pp3y84H2zjT27Z5/qZxFP2GW3dTrgYnfC0Lmoqh7+4qGTsb8BslYuuQW03XeySaOY2rG+KiB6mH7gjvzg==","shasum":"b363c90e71cf913167d23e9cdbcf3810d815145e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.5.tgz","fileCount":15,"unpackedSize":80085,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKIxvCRA9TVsSAnZWagAARiQQAIupzpJn5H3dzH6NWpfy\ngKXM2WfNrQlXslSywatfqAJXQmN2mwbrDT7bvF3E1rN5AzS8sBhS7BBCYD3E\nrjJPkXAawP5n4F0FXVHOgGSpfIRzw5Q/50aVZK1Acngdn1+spzzkYmHd7A0G\n/WyRVtEDB9PP6vCMubHM27SOXsOoS2U6Q2Gt7BwEBvykeKZ1hIi7w1UFQ85r\n0oDmCVSfiFC4w4nrq5z3o4IBUhPsTCeL1E4BRAvuV3F6gTpxlGDvXg7tt0Fc\nevlarz0BxNT1YlLxBFeLJaKqHZj9Mzx013v6PZe2MM0q9AmvXWlmh/SzgM/i\nsHB4rOYmxn1jBJyC4zZMqXOsAuJ7Nyt4cm2gWjTIdeGMWdDhZkFfFZj7WayS\nmfSqU1yJjxywxKsA/F+lYLiDH+Fxt/Bg6wOufzQrSc90kwA+sO8FMNgy0Bop\n0k9Bm4VMvfXEhf1e9vAROpt98zngqWKWgHgFuVj0Yj33ATmCnhu2StWRozkO\n3afM6OO7hlj31c3OwBRXdPdKyHIHImLyu5DnwpffQWXDDIFAebXpkh322DKX\nCa/2dEYGF+LyBVMoN7DPytmFg/X7zgPB7SqzzI9WMDyqMuQswYTHz4Zps5/T\nsytfZfXCq5C4oZmWh6Xh77RormIY9llyySSQ6NIcdOA0NFtkks3PaGtw/pja\nHjZG\r\n=2/VW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.5_1562938478980_0.25812533200016197"},"_hasShrinkwrap":false},"2.2.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.10","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"e900ae106a535668d46fa68bc118af9381595653","_id":"gatsby-plugin-sharp@2.2.6","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.10.7/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-leD2ooffd96ENiVQmxHxSjXwEgEIgB9+VHGWugBIrbD+qAPEovnr1132Xmw3NUvRYkxCXsnOoCxAslrzh9VsNQ==","shasum":"acb954b0c6b1a3372a243e5a46b4301b375a6043","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.6.tgz","fileCount":15,"unpackedSize":80269,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKKNWCRA9TVsSAnZWagAAA9cQAJaD+UQqkbZLrvHgY2f+\ne1y5sk103H6ckdDLHXpbxn+5Fe8V34xAYDTWs54wUfbUGI+roDmRCeg1UxkM\nFrPVp/Yg4NB32mwxzmTXeIZVUXxOkabdA/2CZnq+Iz2BX9QVIZtn7ZIu38VF\nsb4w9ChuGwhmO9FNwfaH7BGA3jaE9R6d4FmWSbz6WUrtdFb2jCf2h3oV0+tn\nVTnD/X+pLVdIy2yIRKEePB03A43/0ij3jIRvh0bnOz/bRWNBmsmfNAlNHBR1\npMJIno1yK3oUzKAaDx8rQHxYAbyVD2Mo+xEr5TOrEhhPBLOtgh3/dd/P4KoZ\nsr4PFizCFo4RnBU+04kdhVVFF1MS+pIHib10tlduPAERQOonR54TPVQ9agvh\n7dBLrsw8nnj+3y27qjie+cW4ze9NG/1DJDQNGRAUIBVi2Z7YTRBMrDtIKl+b\nyk6zPP/8Jv739Q9vylEucvKfQgKy8Jxyg62Inr37NHiAYb+mMZsoqgqrqQfj\nBPCwuQvQ1boR7IQArt8wqczRYeQooPuzG3KYmUQBqEEaZXF7afoedxDna7qt\nUUQxN75WOc3hCdwZ8BoCSuAKcUw0H5O250NiaGcQDNC6MfrgpLvxy76gqjU4\n0dF+B8OqsCPv2mLYUYWs1xp4fNwJ7yhnF0plVglsGmP0STsh9ZdBiSc3xoaJ\npv/i\r\n=gOQD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.6_1562944342043_0.13101000292468834"},"_hasShrinkwrap":false},"2.2.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"930533fccb1e172e01a40f2ce2a8a33d0b8e4d17","_id":"gatsby-plugin-sharp@2.2.7","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.10.7/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-aEa8c6f+RY4SnfZh3iyVFwCHd2EuHxOamLuNdS2y345YPpjwHC1rDzkJrFo28iw+wOvk7h+gcZV2qj3+/QjGSg==","shasum":"088a51e2e3e034da5ca2bb9531f5687f7ce48656","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.7.tgz","fileCount":15,"unpackedSize":80453,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdKjVNCRA9TVsSAnZWagAAxxgQAKJYnCWR8irnJVLDwyE+\ng1Hl6Dt47dPkrYerRLh+2v8M9cfSwNCXHk/w4GbLoI4Gb9XUq8o2oitgqPZT\n3sWVJxp9uiWJWZa+SEh2hYTawE/D0pOKwjU9QOMJRuzV3i+Hf3/NRqI9lPYQ\n5tQ4fWQ4H0FTcrUFvKQuMtnNDuwsLRFtyOMcBKVIncZ0WNZ+y7PQF+S4JFp6\nOR4agA6FEpYrxrK0M9tV3a2NigsDxOi7z3OVUG+4Dd+SBLHhCyb/zDZHMTKG\nGllR7bxU5JulTl5+5AyeWYRlaWx6LENr1vT9UQyQiPHG5KIkSNNq3qszXCeh\nB72q5FkDBBipXz83/yPwBfWJcmosrLIYpziqbU1c1VuGhkCHLQ+iaz7NXc+d\npL3XwqO0joghI22wDobEAt0HnsTsdErDKi9TY/PkMWe1pyaxj8Sdl6wc373S\n8yLXNr1uZc2hGPuVgR+h+O2xxx9x+N2g9M0lZunzVbrKkwjujuJDW5NzKykU\nL9hxpNSGrBs84sJk8kGeYemz5/c12sQ9Jern5AQVxMOBXjEV5Vo+qCq2cePp\nS/0Y0Y0Fi6o0k73a3W1XwBCotjRCmHgGXKL9rRwxkKs4DvaKEx3G9mQZzrd7\nUoV+lDisvlgLx+Oi6E5APJaurymQkMoeDfX/NKg48RGUOI5gbAH+oUPNiWy8\nvXfw\r\n=XSZ4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.7_1563047244387_0.3140181683670178"},"_hasShrinkwrap":false},"2.2.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"59fd883db9ce346509e79f8b7a71662c73f51dc5","_id":"gatsby-plugin-sharp@2.2.8","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.10.7/node@v12.3.1+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-Wl5PpDimy/LdOLP4qjS1gzMU+3dNv0Zgw2RsdMTlLYm57MiQNe6E+16RFYzBoJ/BOONyH2YOYCnlGzvVG9nDWQ==","shasum":"5e1c391331d30c1ef38d9f4ab6e44000a2886102","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.8.tgz","fileCount":15,"unpackedSize":80789,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdL1rGCRA9TVsSAnZWagAA4XIP/i9U+0detTlWZnCoiGhF\nATEt2jbQRCJUilUvLGOE/lMRdnn2mzwntXtZifXgeq2f6jJFS2WVtu/v/uvP\nkXmF8tvXrG5w5hB211Aqz9B0NTKTWmc8VdavPvgkcysCTSpBa7d/YVLNwySI\n1palA+PVXnKUzTokVp22ae8kou8CO8eTzVfKxGW+ShmHiOp6mtd0ARQ/pV23\nwknG788qfRFp0JU4zRzGSCKu1ZSmbewQmvIEvysMmNn4yUWVjfxlGZAgSui2\n5fWuabygGQiD1FlbaS3EwpIdPG7+WrWE5GJZRGIdlgslokL4E+jR0NA0oHGi\nvT6hJ/GIsl+FG00aEZ3CPTfZL9FnVzgIbDnRJnM6/2l8J3teMG/aFfeElWHg\nh6Yz1cyhvbWzS73DR6E+FZA3mSDJfnUhdx5wb1lrCDrVyspRB1OFtaFbdrmv\nlYzXt16uAeEUpDvVXVWr0nrzVxfYEttSyaU3KSLoC7HeJuFyCXr/hC7RRiyG\ny44yiCcpUFFGQyPdVLvmgXExIx3iPkfIPrb6M68WaE+UP/Yxd9WdXJcuKkDr\nCEzYxoM9cWYV13+AzJ75IHtUXQYpvIJ5Eae+eqO1zCbWvnSKYGWmQjhP1oBZ\ngkbQwGJlLVoaAB1GGCFbhROsRpdAJT2HcJkxupw8dfxAJdifsHxMJ5+2Kq52\nKDls\r\n=Pa1a\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.8_1563384517619_0.1397479068378007"},"_hasShrinkwrap":false},"2.2.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"^1.0.0","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"56d3a2dda0d457cdb863aad41a552a718af08349","_id":"gatsby-plugin-sharp@2.2.9","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.10.7/node@v12.3.1+x64 (darwin)","dist":{"integrity":"sha512-yFaBuV4G6NRl3ExkWOJFtQlUO5rA3guvuR+30GwwdiHTSYuIFBvoCDgKQ+4k2fpAM5tbG6BHaUr7r/ccxWUWYg==","shasum":"9a5a4778e767c31621dd4cc46271b64a7af4b8de","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.9.tgz","fileCount":15,"unpackedSize":80840,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdNh/rCRA9TVsSAnZWagAAHuAP/0fg6CEv4gSJJMY3BS6h\nuzG0O9Dii23Wf0mKpHpJ4eoQYvKYx58z00VCnVmj45YbyHdwP7+g6zWdczxS\nph5pb5lurr91Ow0RhZPLL285MKnHXiAVAf9TqoiX8PGWmjb3m/BW4WnyOrzH\nuA3NCTCxjhjQliFr90DFaZCTu8e1npbllthpZ2sXkA7rJHfHSXTJLZ2OXOkj\nJdxAMnU7hHPfFSvt+YF/sSUJ5saWxMIzpwkspe7fRnNlb030vQS0nlNxFrJN\nhkaDrGRVsnCAYPBZtBRK6iGgagGqCiCd7Bl3IXp+GfZX6Oodl0tcunjiUSJL\nOX/AZzU4vfmaPRbMxnA9FgBIOx5xsevgRF+EHb8ECg0ZEFCLA6JPpJ93QIQ8\nPJporz55d2UVKoH4DYr7fSLIH0W+akvirj1yJU+pPjGdBDE5ps+/zUehFkNl\nwLWR1jeHSPwBVOIAL+Bc1+pr38mni8H6793m7N6IKN89+0sdwKOx2flBCPi+\nC25+SCJbcAzDYQijmgIZ6XmKJXN3aH2EYEv36KLespHZs9Ft3zN0BrmXfE80\nQeSKUq2wMHHd76atWKnk2hvlanEIv+bJ5NwgY/ujErgDFmtWrzFDkgAO0Mgy\n8nSd49wEh7v188uzEdFEY7I/1H1XjLrTPWO/hXIotSJAABz6Mhy2UssyaEBs\naFHu\r\n=1oYZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.9_1563828202146_0.4864680185386807"},"_hasShrinkwrap":false},"2.1.10-sharp-content-hash.612":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.10-sharp-content-hash.612","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"1.0.3","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","md5-file":"^4.0.0","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c99c4e9387254bc049218775fd873953b7766c0e","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.1.10-sharp-content-hash.612","_nodeVersion":"12.6.0","_npmVersion":"lerna/3.10.7/node@v12.6.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-uriiyFhbCiFWlQpvqVWjoFlddKrDl/BKGw50Y7NhObQbkyf+Gu0kPUVgBaQcjUzAHBM5FuKMcSYp6b3u9VRRsQ==","shasum":"83be2a110a2764f56fbff8a8ab67f93c7b575c6e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.10-sharp-content-hash.612.tgz","fileCount":15,"unpackedSize":80992,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdN2RGCRA9TVsSAnZWagAAzdwQAIf6LV97YvNgm6PHS0dr\nltE9ofjuIwVGl5RTaU4zfSWNPyNaZLjoZXckt/hz/vm07Y9SwkjvngPmo35i\nI85qLUOSxKRHtJlWv8+3EMpfd77to6ulqP/lRqVFY0vqFLFtd11LOJirJq44\nhkIBzJh9Qf71xJhzAOcQnKywdno0MJr7BgOa/eA4OAp4HranhjGWSNQMiBCc\nXc+noo5u0oRnsXUxJDPjEXQFAD1sU1hniTV6FjGhsEkUdvXg8gEdXsvt+dOf\n12piEr/a0gj0lfrnZuB4dyX/43Q4qak9e5pChT7XuZmWo//daiYN4quABKHq\nAI2Pylyj2r3iAixTA3W8bq/dzY3kxxs7S+CijW3z3shpjfGJqz4PeYWCRv5f\nuLNOekfaz13zg67Oeb8mCTTTtQ147Cs/s0sEkHtLhAiCrzHik1GTaNOdX5sN\nN6pKekqtmARRaaPe8FY6PXmSAlIZ6A9J7WHJVlbWQMQsu7uaYl02vRENUOQp\nw6zQzo/NPrDUbEnOB6TtAagsK5WlqfaGSRgqNm0jJz63ojRjQhQCPn67hyl4\nWG/QwScQeibhHZPXsNuHmbbb2dpRofq2QGMfaRaYEqkyVEYxGGRoA8J5cFeR\nc8REFS6kzuT/MgcAGuihI3lK5HnK2rU8ffoJRMgwzwSgMAVBOAGIG5orEFdk\nWA+M\r\n=WoCh\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.10-sharp-content-hash.612_1563911238122_0.1245094208225781"},"_hasShrinkwrap":false},"2.1.10-sharp-content-hash.614":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.1.10-sharp-content-hash.614","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"1.0.3","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"a3b6036d7341c50260d322a79c182715a80d78b1","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.dimens.io/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.dimens.io/en/stable/api-resize/#crop\n[7]: http://sharp.dimens.io/en/stable/api-operation/#rotate\n[8]: http://sharp.dimens.io/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.dimens.io/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.1.10-sharp-content-hash.614","_nodeVersion":"11.15.0","_npmVersion":"lerna/3.10.7/node@v11.15.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-lJJ2AoOZn6T2W00YOtNoZz8KXNl20yw1jsJ9Cdn5H7Fzv45BldeODaoC/mJlY0lHVT85CGCQXckdOkozk9NIgA==","shasum":"7ca80c7046cfccdc22ffd1cb7c147ff3f53697e1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.1.10-sharp-content-hash.614.tgz","fileCount":15,"unpackedSize":80989,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdN2spCRA9TVsSAnZWagAAb8MP/0NhgTykm0KE5q4nmuub\nsXwWZKBu+ze4v9EsI6nYOwSRPwa8i0v7+yQt3oDCHdWAe2gDpKB4+GeAs8qb\nbZGucMfvwEkznC3juZtSGfmrgd2nJC8h9SuYpmYGPVsTg6UMao9mAy2bd8Q4\njUAJc0ADDK7XiRPhVFPOP3LTGVP4pdoAZZHWsvmZapqR8prXCaAnHRW7q40k\nupLAxH8nb0Moqk4gr3Gar0AePm0ldRJntNrHaSY8RG6lMCTLQ8AWZE3asnbf\n4EsXuzsqxyvjAYPjMONAH+goyh9clEesT3ASFoO71dFYomxTJOVf+rAAfMn5\nbBsgW950IDmlCbPCk4wubU0fZ85BChLSnWRvrxEd+9eMiSvhqp4ZsvfZZmIb\nB1jQDW7iyJq6bxiPYxUioinGblEiS2QUaK1daRYi8w3d4zSWXzRMkIMy/TVe\nxT+2ba3MvrsTy4NzR67Ef0pc14OxDonkF8nUYL6RnNo7YjnVkgsjb5xlKpYA\n2G9CL3RTL7ELq9wUezB5PElxdBUWlmYTin2FK4yLVN/Y5+aUtABAARxkmmeJ\nWDiozv5emk4gtXY6cpmX2BE194WVE1G5DsQbawKsBg7SpRQivglSiS8ANzb9\nITvuFA/SUFoIPzF4jCF4Z9Oe+EkNmDWWkQax2fsW6uewUQuTnuHyNtGt/Fsy\nbskX\r\n=tiUE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.1.10-sharp-content-hash.614_1563913001128_0.4325842582005861"},"_hasShrinkwrap":false},"2.2.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"^1.0.4","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c1960a260d3fbd5b6f57fb29317693d45a0686d3","_id":"gatsby-plugin-sharp@2.2.10","_nodeVersion":"12.6.0","_npmVersion":"lerna/3.10.7/node@v12.6.0+x64 (darwin)","_npmUser":{"name":"dschau","email":"dustinschau@gmail.com"},"dist":{"integrity":"sha512-vI50vew5oYgiWIkZ7VZJ/KhW+JM8bjEvo5CXokqDtzKkrh9eyGBMEqykDyQKPXShdnPYEgo0ZKTRIiGL/u++1A==","shasum":"94f3f62faa939a1337baa168b1735ce9381b4c50","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.10.tgz","fileCount":15,"unpackedSize":81027,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdScarCRA9TVsSAnZWagAADUkP/RLfmBYJDsq2ez+O7qot\ngEk89QMkJoX3VbiKl1n29JCjY4nb97fmOo6WgpjZluq0t4p0pMiIVbJrD6eP\nfsexiXz5DMwhzyIAUTKGtZHRxoILhDFwU33iFHzpHFpV8nlkE6zHSRJVvKg+\neeakvgHGCfshLAkcMA3oiZVhlos5VYID+wHJrqKAB67lnSWCFsba02BoRvxZ\nPNSOWyrTZvi6jndXfPSmtNeeq3xwFX1PzZEkCtSHvRSliA9jcUXq3wgE9ia5\nWUongDvZJI5zBhSTJzJWUcHUeiBRYE2m+z4L9a5p//HD4XohawDLZNArRIkD\nXIlRcntjPAXYNNvO9f95W+qdRDdmmcvwoJ4728CNKjye9DKvjQ7ME0Zvopug\nXLcT9oQ+VuG4IxKQQFZzGWCg+eh02WDHiWF0CZUB3VeQ2/uETWSPw85YXaOL\nqZYRca4/btug0K1g+pVRihwJcYn0T7T3MCVwAKw3xyj9yixaaB1ne2zjTjMK\nRVhQ/K1X6V8eG5zE0AJS7TgNCPuK5fLAUCk9aadXU5+57H3GSrytKUp6Az3H\nhfys8n2rrewtWYZo0EBHkDcIHoj4BEmiwmYt9AGELFVe8IWbq2fOlKJr+ZGh\nYqe1YppS1EYCRUy+qU2V3l9qC/xiUiuRGoZePCFs0zHrpMdCOZIbNMaZZ2L4\n90cE\r\n=k8Wz\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.10_1565116074504_0.7353174005923937"},"_hasShrinkwrap":false},"2.2.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"^1.0.4","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"75f6376cde342ff50f835631a80aff05522ccd8c","_id":"gatsby-plugin-sharp@2.2.11","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.10.7/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-LlQDd8XydRgSUb428Ucqw5rwVno4weK6o8osFu6exAaIb4O9hmhnR8bOdu5QQ+7KkLiMxAjf1c+arOEmfAaAVg==","shasum":"ba614776e624e66a687d294373b2f452503cde75","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.11.tgz","fileCount":15,"unpackedSize":81331,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdTdjFCRA9TVsSAnZWagAA3isP/R0BTUnMChK9O5SyZMX6\npD35v93EbC86ykGrnS8w7PB5PS06zD2Kp/5K++dhgD7Eo/RCqOgpMjhx+ACU\n1EByfZQxp/RxrRRQEyL2YmNR1XLZyodfLcRr95NIrbsF03O4Ycy3juODtBee\nGMFw6Yl42QuPgEeABt7F/G+tB8Lcu6vCfSMlu2iBW4mGrUcLSm3u9ULDS517\nfU78zhWfohDbxe0mbb7C7V6S32mKCjA5DuLSeJU5Y+Eeqn864WrXauGlDafi\nw/WEms4lmanRFoRbmAoOKkOODwG0ZImmoareFAFPQ2GCGe4p+2XgNxfDMRm5\nR6p0kwAMeFNxrNMrJLAjn+66thCxueVn4pjjtotTEEd+d0KLrHrLr5bJ6dHc\nKuN0gR3YKuW9Y80DalsfKqzQtSHZJCs3zJZDkJa1B4czKLJ7EWDOaU/PGGd4\nKiJCVxpVnxxz+gqR0xtsTAvL7SJ7RY+3svb59dHrGbEEEOROQWIHWuehU4N0\nPo5gwO4yZRmeAv8s4ukazCQQu9OnR5o0adFri84rHaXLPobT07HhESRGda3p\n8Riip+Kgj4boRlFBMHhafM5UmXm2Iz9mTDsNuQOmfRk6QFciwD6A8iBzKHg6\nXpPbp7lrUWUIUNhnv0FzbOPhBORIQ61MrTFLP08ZMsshMfzewRTITp5L+idv\nM8vZ\r\n=xRKV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.11_1565382852965_0.21964752005994304"},"_hasShrinkwrap":false},"2.2.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.1.2","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"^1.0.4","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.1.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"54a75af8bd3f0fea7d48d937b7be62d3c5f0a46d","_id":"gatsby-plugin-sharp@2.2.12","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.10.7/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-I35exTCsI2BoAP/hofCu0yScyj5CXS/L6Ki/un/404vJiCMVp3edku3YNB7E0XFOnOxntREeScAwZDnTz1SRcQ==","shasum":"383bc7182c0f0115609e491c29302f85f51eff10","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.12.tgz","fileCount":15,"unpackedSize":81709,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdVwdHCRA9TVsSAnZWagAAXZwQAIGglHEAhKm+0ifAjl9D\nsRWodb96Tf6OBHI0Fz0Xvvoa+zCrnZFhsjUXu4/30Xlqkj6DybK2D93i0pGS\nswe4Z8ANGzEiChmA/SUOuK8YWK9Z6e7PQLoISmJ+3JY+Rlkh/hkfaH2JklPR\nRPx+VIdSvUhDQrfIHaXka7tkicjoQhVu0Fu6nb/IYAtS1azo7gVvvmI6aFGN\n8ifkIKoovT3ewl52f9NFfuvKMTsJsK7bqp6fW72AuvcDCgCBBZNxE51NEvEO\nUgbvwrbVT3NJYHyA4hH9C2Bwf+b8zu+zc51HfKQbNVb4fl0OZhXoMhasUHoB\n1PWzqY3c4o2G5ppzg+BRA9j5BYjR0GFSgtFRPgzUxD2+8tm/G2nx5FfkAFn6\n2GhqTWTZQbg1ghJWjVTh+yl1Dy1A9IH1Uf7C78v16++cy14flLxsSwYxFqgA\nDls/OQoc5ILNrS8fxllstvby5GeY6QUrKvgdIRtXSvIXPnH3a1M+PpEK5d0T\n8/Zh9JBuRu0H0tDcXeEqjvOF1I/F2JzvIZJXNPNyjBLAqVzcTJQhKpEH3p8I\nSl7x3TsY+UBC7QaYV/E2EnZM43VOWVNgvIMVXNxs9zo8vNXNZ2SvBOoMw0Hw\n771V/V+xOmhv4QtlJPxDJZEuQt23988zdOHxnyTsaOSOH0eOVaMbT+n8Y+O8\n9fjy\r\n=M/kf\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.12_1565984583068_0.4556596624828073"},"_hasShrinkwrap":false},"2.2.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.6.3","bluebird":"^3.5.0","fs-extra":"^7.0.0","gatsby-core-utils":"^1.0.5","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"e077f5c86b839a34b6d5f3a868ca3cb3969b6be1","_id":"gatsby-plugin-sharp@2.2.13","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.10.7/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-Wzvwty3ho0T3FSFLDHGAf5D87hvqTsRvphnSP38HGFw0tHAbNtbJSrqr/HA1P5x7Cah4j5duQg4TNH6qtlkAZg==","shasum":"1cc40058b0da5aa69bcea5850e49788731a1ba74","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.13.tgz","fileCount":15,"unpackedSize":82010,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXEYOCRA9TVsSAnZWagAAZF8P/1Ox1q6r9HKOp/04WQjK\nH7qxrVIR7y7SzzVEG59+y9SNfvpIPUg53BsqXYNMGU1SOfihyGqq7NjQtG0V\nAce0kesRXoR5sYFJINRHoTuimVFD3u9kxQaYhkYVJ65dF0fQCIrGkqvQIT/G\nQ0PRNEk6rbmdGtc/yJIWc8X8vE5bWNMJX9TldQiBR6+KL4hSyHQ5GNswBjkQ\nrdYBhpt8HrgrgfdfInb7aNZLjQdUPouXXXggAWyM0hOPeXxm2xkAmt9cu50P\nmfbGSj5V35Y1HVbxaD2xDs7QlHZpeieNmtHP+y3hGsyXTQk2Z2YWx4JYCsAc\nMLhTNWLr95HBQ335kI9DoPJCjjzdi95xpjiJBtBaS1834H8T/lc20FIq2+Ld\ncVGf4384vcVYdpAPo+CtnddpFzNH8vpxC6n01P1FS7DJQF0BqHZZTY2CmhU4\ncTQhWmWrUSuzGPASe07SRgF4KCTRNMeCY5M2a5arz70v9kZdGGtHLBJT7/aR\nHQRWrJlK9Fl8oaosvOw6dkOViXRPSfbuDlaLiURntLYyfBCdeeQvT7cLfSjA\nUFIL/7IHW3zAdwhKQDlSVkJ4ORtqlBxKCcpgjflq9tGwrMaQsUhdLsDYdTHu\n0Gd8mh2ptwk5bykF8/2DQ6/4hMnNM9h3Z+XEwSgbE5BaJhuJqD/oUg9ntTfR\nXos0\r\n=LQeH\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.13_1566328333239_0.5888881686763319"},"_hasShrinkwrap":false},"2.2.14":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.14","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^7.0.1","gatsby-core-utils":"^1.0.5","got":"^8.3.2","imagemin":"^6.0.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.0","imagemin-webp":"^5.0.0","lodash":"^4.17.14","mini-svg-data-uri":"^1.0.0","potrace":"^2.1.1","probe-image-size":"^4.0.0","progress":"^2.0.3","semver":"^5.6.0","sharp":"^0.22.1","svgo":"^1.2.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"a4e2cd4e0337e840d4f26262f7e90e82b239857c","_id":"gatsby-plugin-sharp@2.2.14","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.16.4/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-Ymw3j3tNBRIkQfCxPCHsSGNUCD7Nul+P32QZsdMmdFJALeiAHb5bY/ZS67lY7ZNTDHPQ6dwUKqE0OzbCwJJZew==","shasum":"3d4af6917356f1a5656d1600d46224240f080a09","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.14.tgz","fileCount":15,"unpackedSize":82667,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXb+HCRA9TVsSAnZWagAAHJIP/3Fcciq4b9AemWjYQtHa\nplgFc56U3oEGZ2L0o3sv1pcO/YDQelxGbMulvLYc5sR6GrSVDbwxFW7cMWo1\n3fCVnZxyA/3qrWXzhdtMBJncOTmx4arn+XOIfGp6kCcux1dpvcOngfzovZ6n\nYmuf4PjVJ4aZEgDcNdwZPZ+LRlZk8BVDr2pn/JlRb+tnVupNDiV/ADqOE2Ug\n3TexI3rX3Avofmb+9giB1pm4Km1w7DbmGt3hlMDVELSCdprV9SLbVacIOdjg\nprf31kgarGt865XNNn+InxUubIMPVezKUMtU7AprfWsDBno5ZUmsEpwTTrAK\nukuqEximP3KhwA4N3oNGRTmZaWUw4ppXLqgGDiQCM9D1j0A4tLd0tdG3A5wY\nlr70prekLyUHj1rPSCnyNpbyDVR2WKtVXaBf3K0UCXdbRTJlg9MQqxmc1rch\nTstIGDDMwdSpk4O3lHsvFxBl4H/8NLP4nTOo+Hw24fRb0BCvC4JUQXZI6dtH\nCIKn6rMpmNpbDGu4OSHz4kMA42lbBCaBNSv2lc/mHk2jA1J0Ms6GSVnDq/tN\nqQHN4YCNUTn6tasy7cpLknnaGAPlaqXE+udZaeynP8tqmYHzAApGo9ZwwvqG\n2zWySOkbHlYwUzucRJExngepsv4rWY4qpPeidHmNj2BkWDtYfgchu2RsnsLJ\nzz27\r\n=wZJY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.14_1566424966928_0.13108570094362082"},"_hasShrinkwrap":false},"2.2.15":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.15","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^7.0.1","gatsby-core-utils":"^1.0.5","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"3d4663ae1df1a694ca04278099266ab8e6dfd9af","_id":"gatsby-plugin-sharp@2.2.15","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.16.4/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-TZP4ec7gPqBhluPC73QMIOygrtU+coXivpAFC+aNFo/mUpb0kzxdJ1gN6ozleQaHvq/fAGMbeoSWtSkMPJKusQ==","shasum":"2234b112b4d7b13917946bdd4279698bbd825be7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.15.tgz","fileCount":15,"unpackedSize":82854,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXeD4CRA9TVsSAnZWagAAA44P+gLbq9VZ0pErfjsjcjbp\nUSC8X5HYUWk76tQ8f6itosUvTjIgwYb47wY1yLPdC5UdyFIRGvv6m9gIT+HL\nEg8Pr4x4wEvL5wZL4p+viOWpVy85MJ7qbtw4a4V4OCxjXRLBmAqzvDhV5uMR\nvXtqAhgyFQTJF/xfo5LdtFbcIY7Q2+6H3UKGn407k3+RAw2K191vnP6vGBpi\npqyG8HnbYsjEMNNt+StHIwsP2oAIZ2wsEgvXwyzY6UaZgFP43gNKhJ+zn6RQ\nzTxYfCvcrsh1gLdBsNnYr/0XFt8u3kPH/NF9vz9KO4y5mFMKWyEVAFdwvPPr\n2pLtmyf43JP1YlOLW40fhW8jKgk5AEXqpiGpDGAcWDNXRH+EqPEx0MJ9dBo4\n4ZEtPkDQuxAyXvRjXbBnFa7VuStnYJ3sF5m6pENL+YgLk/OZ9M/5MaoZ1Jxu\nu1jDClTUMmVcoRm3aeZxpomU6lS0ezvrPqbM3f6mMbECx/0H77ADVkWLw6jw\nBF8WLI0Tq4wbD18tPA4qAfcYAewvCBbBkkkSPm/SiLH2oKumR4OIkEAJWLJ6\nKuk9Ja7cTF/VYAA9UQaVbdftiR5APjc3ZCxufwPZ+M8cx9ZdLQtfQIFEvFKE\ndV3IWvNJyx64c425kuRntukRa2sE6p+M5BI7pKa0YV3OfE2cX17J1lzzqeh0\npMPE\r\n=yy9p\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.15_1566433527711_0.8369003111226232"},"_hasShrinkwrap":false},"2.2.16":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.16","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.0.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^7.0.1","gatsby-core-utils":"^1.0.5","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.0.0","@babel/core":"^7.0.0","babel-preset-gatsby-package":"^0.2.2","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"e9c8e8a6628b1d325c5ae15ebbceec73cc1226e4","_id":"gatsby-plugin-sharp@2.2.16","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (linux)","dist":{"integrity":"sha512-nHaTRqAKopnAKOiUEe21zcBbp7sLoYtftxeR5Iru+SYNCklNuY6+GepNnoYkwDE/7nvuC4JyKlMCNCFL6K3vyg==","shasum":"1a305dbbb9edf24aa9c1dc37e20b957e3fed4545","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.16.tgz","fileCount":15,"unpackedSize":83041,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdXkltCRA9TVsSAnZWagAAIogP+wSKPgir0YsYpkH91lHk\nYESeVTpw3xM5DTAHF/fXhDgY+AWkDKw2FGrE0yaPLBp/8lkOQnliQW0aIhjU\nTtUPNLeX5iP7VP2+Ye0u7t0w4wp3J7xrEExUASEqZk4/CTaQQFjyPsfaIBzH\nW81Mb6TrXuwF/NlEhNwm4kCXU5VnmeBru8Q2c2EQGj9b9GadLGddw39cPPxj\nECgCvHTYbgCV0XUVV0v9bkp01DLdE+ywnq4OwUABmZdY0fqViRwnemj1kcgZ\nKWg59f2rUNpr7tOyCNXUCtg1ltJXrl4kFxjD4IFg32PpfksJLB3kaJTRYM0Z\nLzhi+iVMG/o+qIGVdEWBpRD4B0FRoe2QRIIaPxma/cxYAhzMOnf8UMZhmrjd\nhPUOc5F460ga68UtYzT9YS79UrItknzIK6O+ES97/0A5vsh/AcfikJimIt5C\nfmMLBinQIzqTzP3px4OxU3P0HbAe9GMm74Xz/OjqGvAADaylGRHkJePJAz6M\nNZNobS51bUroUNsomXHKQDquSIfJl+AzTu4gnOqhjpWvtkEjNzsKiMB7Wfaw\nUJTD/wsoxe65N+DuvJBQCY+gxjO1YHFxzpgPo2TrtCWga+UUZpycjFOXtujD\nUzFKg8sB49o5vS2a7/NgTa/Ceq9V7RVkrGRC8OJfNK4kbSBlItfjMWxEArcJ\n9hx1\r\n=uqwl\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.16_1566460269326_0.012953772834037203"},"_hasShrinkwrap":false},"2.2.17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.5.5","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^7.0.1","gatsby-core-utils":"^1.0.6","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","babel-preset-gatsby-package":"^0.2.3","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"90ac3a5c80dc552ca687988602311914d8d9b193","_id":"gatsby-plugin-sharp@2.2.17","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.16.4/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-jyG8IC4psYsj61M5H5tCs/GJrPHzIEDfoc/fjzZVAZzMNOY5xr6CAb0k24GBRlBSXkLrje9Q3cNrDKLzkRqWNA==","shasum":"9264c81e2edf1b4fb422a1aaaed40ab7653077b5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.17.tgz","fileCount":15,"unpackedSize":83232,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdX7EJCRA9TVsSAnZWagAAczsP/1aU4sDZCA5bqcxy9orr\no5GFGJwyHUvydDmqU/FSgjugvsYSQS5CcErTOY8uEnCWqeN2GljQ2UjZOOGn\no/vMFmUhyvnL2lHJdprjwCLPL8rzUbvFmGG/X6W+BzRnqk8LuBp57kAGEHdy\nRyjP/KUu0weL1Tza+RkEREAanfZ/cDhtV0QWxlzIahejL7zAXz0sv1IMiktQ\nEO2Heui97eynMtZ3ojWoRtVCl9lWaCZwFIV5U8LCB6UAp5Ef/TJYjb7Fx7Mj\n1WVA2q62CdmrbZiZD4sZAHWQPB4fK57oxIZ7Lv75g6RpDP8EQO92C/tsslpm\nnu4OsK6pWu+4kbcryAGTtIWrqTEe4X4rO7PJ8ZWkTaUAMiBszOcDzmoOX+Bd\nKcmKTtg/3zujAcs3S4gUuBuwnCvqmsMwHzV7epoxxdZc7mQLs3SGWfEm2oEI\n7FTSPr/Uri5Td6+kN3OnM7i7ZIIxn6i2TOQprG8oFwKoSMfB6tPLec0QFR3q\nDZpLO4N5w4K0Ci9+qpM4fuSeMYqXB8NI34QLVk0INJHtfJS52C4MiBMLBTXf\nhTZ07eofvU4vWjz5d0zUHIaMBwThywW/p/q/UKyC3t2nmUjfInjpmoKZGzTX\n8CCdasDz/GMBgkjEnNjX/Mtk2r2si/ZmKTX2/bR9vGsqQsWkh71rCxG7UfCd\nz1KW\r\n=BpHK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.17_1566552328247_0.7480204202864891"},"_hasShrinkwrap":false},"2.2.18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.5.5","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.6","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","babel-preset-gatsby-package":"^0.2.3","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"b2dcccc414483d084d64f5b96549ddc8c5fe5126","_id":"gatsby-plugin-sharp@2.2.18","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.16.4/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-zovRg8fQIp5dpbXjfzD6WJFKxsjPDU11sBo1h5KsoZOoVZC0q2dwzXR0AM7ikCuLWbhhRhCUzUocy8+UNnqFCw==","shasum":"ead245da14fe6aa725ce042922646f044df30b5a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.18.tgz","fileCount":15,"unpackedSize":83532,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdYK7QCRA9TVsSAnZWagAAl8AQAJwGGrEqq4+NmEWthTCx\nnMH0UMnw3Cme+ihxy+f23vnPKOMz8zH3t2PrJCiLyVw028mEB61L1xEhxAhA\nsRo39tZojrI0jklhV0GR5qlfG6ISqiu4Y1k6KrBzumslYoTlYb45akLRJol2\ni2afyJrwS8KwbqKlU5IKRLXOitXPF0W4NBpzJxwHb2XQ4OhioXytIp/8aZey\nCI9nLAMTEp3yEmgVMYuX+Xy/3FnJ1NEHv3nuk845UTmmQyWWQlKAFIDO/NlE\nnfPjlhbTPdkRMLXrPRjiBq7niInCdtfoDkbIng+HtUM1OpvgKRae8P38vCdf\nIzUQxvIg4qnA1H9x6bY1u43SlVB6LBzjcJonRdOiwuFF5AHmxziDQ5Xzc0F5\nTuADPft7glr0p7B1kwYaWQcpfVr3jTPpvoHrVvvZzes48sb66dLhIs41ZPyh\nP35GZDExDIATEp8n4JmYjICWl+3UfWFnEWMDVjJlmBeaz0qEElOWVoPlLhAa\n1tBXzwC0YtCTk1Bm1hz26femR6mDcIw3sMKYNNG3NR92SdD5w0LPotVTKT2q\ngZ1Wkq7cS/VDrIPYv3ibHAh7nrhRPtyJDOgrORh81hMObxA0u0Rr1l5kjcfl\n9FvzbpKybn8Io4FclLHfDIskJb5WglRoN/tv3CYfHRUr8A6GB09OGJauqLiq\ns7FU\r\n=ZaXu\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.18_1566617295905_0.7741728575248688"},"_hasShrinkwrap":false},"2.2.19-otp-test.31":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.19-otp-test.31","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.5.5","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.7-otp-test.69+9a09f8794","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","babel-preset-gatsby-package":"0.2.4-otp-test.69+9a09f8794","cross-env":"^5.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"9a09f8794221815d37e6cf02d48cf42bc6d8c0a5","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.2.19-otp-test.31","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (darwin)","dist":{"integrity":"sha512-YAoBZnzwcqjMWGK0zcYjGbakCSmLTBdfR1NQ9/GpptusLygRD+7Gzq/pEIeuRDM8dTo6EvTggXrfVDYl/GNxLA==","shasum":"a70f504af74d934a216a930e041ad788102be1fc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.19-otp-test.31.tgz","fileCount":15,"unpackedSize":83596,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdZA69CRA9TVsSAnZWagAAT80P/j14zxFtUVsml+cVFC12\nW84rq+1ylxs9xrMpZ3CvPF/hxziQXOzvZkuwjSvzO0eFgik2hgmGw9UsO+Q9\nOkJydpQJTyWIwevTnuWf+O/8SNr/wWgk61p4ghD/bnNXE6BlGb5dqLzJAR9t\nNbPtvH4XnuzEAxevdd/y+RGeBJSEyCpf8hmmvRIavZtl+9IpRdUYayp5WstI\ni+fifm+fj+TkG5X3uaHkUwpqP1gx0vdEdtAkpj6aLaEWHad+3hnzapOfLhNe\ncqiu06FyZSKxgCFIK+hjlp7H9ggzdol3gfg3N555ClcFcsShFGqWOE1TnKwt\nQqP8JVawP8BUrKjo0IWiMJLROvKtQKYBeOkvl1JDh3/VzqjMoGoYtqNW60ZF\nOU5Iv44RRb+Q7bCXfVIdp9y6sQ4A7lRMGWj7HV4uS2beppbOBOa2ol6E+SN9\n3uEm61rIuLyc1X9GG72dKTbhh9GO2jnMTqYuNdApZnG5fHukfQIdaREe+KOw\ngPPXOImRPcXgfzRq6WbjbxVo7Qsu1ipefcuqQJ1PFxvucNUqYncU6JaQHqNd\n/FDRtJ4de5a4dxx5XzRecN1wJTMfZRaA6ZsqP9do6EM9SEXFsqnTfnxyJX6p\nd4pZxInJ3BbSlVc6TEW+yb0dedBinmvNengTaff+Jli8BIVAY4KIp+CEICTN\nxZi1\r\n=793e\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.19-otp-test.31_1566838453788_0.4730864563545183"},"_hasShrinkwrap":false},"2.2.19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.5.5","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.7","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","babel-preset-gatsby-package":"^0.2.3","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"8da4c985322d3767dee312f3027c37edfa706c01","_id":"gatsby-plugin-sharp@2.2.19","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.16.4/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-l6G0HZzq+N39WXwADRaZiblD3oaNuGMmlyvFKRLnekbHxvdnsFW6B+fy+yCS6SP4N9XiX7rp9Utd2okvWKWZpA==","shasum":"30e019244aa84c84b60af387a64f4e2507ae3288","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.19.tgz","fileCount":15,"unpackedSize":83863,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJda6FpCRA9TVsSAnZWagAAD2EP/1vjeDxlwjPqB0OoTxrd\ndffSYXgVOhCDrlosSVglqMSud3HqU1EZYiqee2HoZ+osd3mj3/SktYRGG5h6\nIv/oijofnEiskc+c8xspXxNMhTtkT1rsE+dBVTJIDMtWHccS4yNvVdPrMQvr\n1K0gP37zHUykPD7I53+ruH2C6BXhZ9NJ6xl7aQbbVMA3Ga/uUt+vnA6PnxFr\nichEeJkfQDzFMoUzeWuTbAPuycatMPDl5HoaPfX3QxJf051gO7ysf5fU5/ku\nWT2X64eQTloYxHcmudPYOuWG9gdZ0mPHRwHxaEWJ0A9KyMUy+BuJwqvUNxJI\nY8tFOj52jhsYHhrQBr9s//JsPqhr+JcDOZn8lsZDZ7FSvis4DSqeZlgfZQjQ\nKQn9cztVJxlXJPq+qehUUqwc22YDa+g3B/Mh6WlbQF1jXAM1rZIav9F83EqC\np34XvV/G1hQObbygyFFOZVC2RjfSTxohb4+UFbz1LfGg0ZCpz1W02bedYHf2\nsP2je2ZCP5DsB7PHRmgiyyvVfrNMqViMsXeG05wfGgbqdRVWtWGXtpXqKVlm\nskc8zOumSA+rTcmCbOMRknx6pj2EomKsMDel/JQac4qK/loHaqvPNjbk9xJ8\nNERdS3HRJCcZMfnE8/GX3oD1nirGaL62hLN1UyXA4nTTSYWFpB8+iz66mcBT\nxkww\r\n=3fZP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.19_1567334760490_0.7969545384828662"},"_hasShrinkwrap":false},"2.2.20":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.20","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.5.5","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.7","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.5.5","@babel/core":"^7.5.5","babel-preset-gatsby-package":"^0.2.3","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"f78504e55e034a744aca29a3c03c50a2ab952fc9","_id":"gatsby-plugin-sharp@2.2.20","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-pvzF6CmaimYddQlB3MG5PuGlIoH39SWMmKxAoJyVNuSTcrkcBborOCKKStqtgXtTGy+8xBp+mZQK87M+FiZjeg==","shasum":"89e265cbdef195568d8f8a3032ed35958b4e17ff","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.20.tgz","fileCount":15,"unpackedSize":84288,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdcSXgCRA9TVsSAnZWagAAxmEP/2nCv1Tt1mTxpNJwwPex\nfQuTdp82NePnm4IgKD6NfZ7wEsNPiRBmGXKEt3FijsO6lMochrVOt/eXp0bh\nKP6cMtXYsbtfOJorsUDTtMDc6jnhAgWINPhpRMsRsaiecZKyCbIqil7URv3t\nBGFnWP5rRMQE2bi+EKz7y4EfD5YDnOnvz7+H2+U/e9BKUOEUCMXxOVHKqQy+\ngGbspoK1dVFXoabCknS+0nf/2xkDnw1o9me3ISE18wQp8W7HLjyw5j2eG4OJ\nudrxQukhv+1QQqdzow2XPM1+LOHpCDi3iqM6Y6Gjk454Reqb1mmYS6+H/Cfd\nJdgugfO8sbatYEasQa+1WiL4pzuhqOC/MKAoyEPL8am3R0bB51F6s1H7UH5p\noDfhALeniiOpdGJSpeOh35kNEv5oJhHWmID6PCZDUQX5wi2q+al2WoGQ9RMp\nKYJcaeKmAbcv764X/adt0qC0EiSPHbCn/VjZalaT4VxFAn+uhiFy2gTqzMKa\n1NBtOEC/4/h+Rr9MF7Wg2se1/37f2zCtKwHvsvBw9YHynddnqpQ648pRQb89\nnREvRFSXW6LFVeGA3eUD9bovnp77jskjp3Hc5vQ/T69VFeaYqz6iYe0QfYos\n/L9shcw0XZdDbUL7nUaMyaO1JFIHpfsgFp24lg4xF41euvdRyN4XR5jHKeN9\nUi7L\r\n=bPFQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.20_1567696351283_0.7388761844086165"},"_hasShrinkwrap":false},"2.2.21":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.21","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.8","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","babel-preset-gatsby-package":"^0.2.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"8562e93c9d413b2660a40aaad34fb10b33d98921","_id":"gatsby-plugin-sharp@2.2.21","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-pV+EQA+R+miJtg893xvn+uEZX6xc3TbWI7/TKMWyH5yWA3mcWYPVoLTXZzaq+hWn0LLGuS9AEFyQMi4V/roWuA==","shasum":"2ebf09c50b4ca24306f9484b789395264f10eedc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.21.tgz","fileCount":15,"unpackedSize":84517,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJddnMnCRA9TVsSAnZWagAANHwP/RDnhUcARJN8hLz/vQgt\n+bb+ePtZYkQt2O9oCZSmWGj8AXE8r9HyQl7wOCxmWy58foaW0XTpkIOxr+6w\nCjCK1v1SE7jGvlrv8H7VY15x4iyxGp64EhcO9dmFZmIiwIIh2/ZbvEJx+9Xg\nw/O83fZDFQQITjycja0outMxHoddnunQ4weJ4Wb4O3eHuIw5kEX9yZzUIWqe\nxosU3PMC1HTdxGgqEyQlIa0x5BTJwEIMLomGAKRf03SlY6I1WCmSYGefn9B1\n6T0hJicgDzFZTs1GFR81SyIhNLutzgqdQmRSQMZvt1LG6noNcNZKVQhrLAz6\ngmhD7vZI/rYxk4BlZ7RSQaCh/AcN4r9p8jb1ICDf82jHKPNIgLeEh5icAAyT\nHL+9mWAc5tUaRrvpe0MYJ412C79zn6seNmGAHZ+4l1gDXnfP9ZcOsuWvZefu\nwG3OdOGVDQrctY2Hg1Qw1Ac1Vazt6OA0MOMUByC9P0QM0SJmqAfcctZFuaCn\nXT8q1/znkc0pbgwuMwjV+efV532PsZ47PXieWM74koHgXTkKH7+4LjcUT5KY\netuPoIoCaCJRF1Y6y/ZKq2rn4K6skiAOKB+jHv4JdKecNj/lm5bBKWL7Y8sN\n5klcul4nBTmtY5n0P+l1sOYZ/MbSJAMPl4Wl275wbaz9T+dOuNjJd4KqZJGV\nvP7i\r\n=TxCZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.21_1568043814676_0.2629913837104396"},"_hasShrinkwrap":false},"2.2.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.8","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","babel-preset-gatsby-package":"^0.2.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"f947a51d9e2bb65d2614a4e2dabb9bc6143d2a06","_id":"gatsby-plugin-sharp@2.2.22","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-W5ewDYseuayOfLWqNs74Xhpjri5hg3GlTUyoDCmcbgwA6LymEKi9dly2Fluk8sRb0NdNlZ5DB/gka7xXt/IX4A==","shasum":"503a786a1ffa41fef2350db3e2d7cded5b00d211","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.22.tgz","fileCount":15,"unpackedSize":85200,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJde7VgCRA9TVsSAnZWagAABbAP/A+y0bXxiw0tB0BF3tDa\nN2JWPVM1HUnWykksDlDBgjusoh7j1kJw0a1cTf1QnMQ/+F/rb0PJGVIRWGpC\nXdok/lOhoen9LglP7fWokpmYGiK+rrgpkJM8sKs3R58k0nDaVRTubCYfMKvw\nzQnBRnYjKwGJH2B1oJYmu2WAjEBTMD5TAiO9e0HoqgaMApDcW2rc1oMhKuBK\nwXbOxPfspeXO5vQqvhENT9t0MTTEd8O6G5rHydt8v5TOV82zveVf4/Oo9dND\nsvqWDcSY4oXmN5dyKFMFQZFwFqstAvSRjHw5Wp3Mi7oDe42qHFydZP/0TSou\n55F4+uua2uidbhWL8uL3+ALcfZaJErdCED3K//6qFwz8um8MiPX01y2lZfZt\nct6PPoGsdJCGIHjLQcWYfHsNowCX096LIz9/DZFeC25gSQztQOdY73YTWkt0\nhFn3L0EF8zr5pnbCa68k9mzWsL1zfCXOSaZtQzHj6tzyQtLqvn3lKqfysvks\nUkulzPaIbk3ROxSXR60pREXwrn10ah/doopu4hbK9xd+8yKNZkPGXlM+PGt5\nhDCe34Q5024h9HhlpI8Fn4Coh3En/LemJnWCWoi3/tWskuRYifa0pw9nBFpf\nXxnhLw8JWyvFyIaT8+2Hs2UVcblHVfvfaoVTbeNA0TA+ACd1Wku00OmnKc/l\n/tXS\r\n=idiB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.22_1568388447600_0.053527243648621825"},"_hasShrinkwrap":false},"2.2.22-cloud-image-sharp.51":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.22-cloud-image-sharp.51","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.8","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","mitt":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","babel-preset-gatsby-package":"0.2.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"8f267d004c1edeb415461c712cf253a03f3d0424","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```sh\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.2.22-cloud-image-sharp.51","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (darwin)","dist":{"integrity":"sha512-RzoUP3FoCfs5dsr4+cCAFVGtlStH/XEiUdo6R39A42Dk9sQu6mdyRZbCrIvk2+1G1vTTaMpDTHw6aKAKP55qJw==","shasum":"ca14c64d8adb8fa243b7df45d5dbd6cd348692f0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.22-cloud-image-sharp.51.tgz","fileCount":15,"unpackedSize":86169,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJde9A+CRA9TVsSAnZWagAAcHcP/3iP2HyH1pNLeov2kVnH\nFp+0vB8GmnP0z3Ar1KUDcOCWxnKC45HCKZ/PYlcsfJ045YCFHcAczzzJMsPe\nCW2wKwe0ZViLnbabUs0I4hNHwTYaeJERArRwx24QuW3kE3Q22mUdkVx9quvU\n3sf8aLDMUMhywH6OvANxV+kVnjsBe+5VUR1QBdPrvjAoawGoGYgaJRTJ3wKD\nD8FjkWl+4pqnrb8PVyvdVPzpEh2n/y0mD4dGWLg2MjFmr63TlrsSx0LPaIxX\nSXstahYPPJc4Bz7xa8oiZcPuuGOsgsbj4Ulk37kbbhOZCsFORT6jdZFIULBQ\nc3t2HIrFzobpT0ZVbMjBGQtZBN2pg1Fhm+6rDvXnjSU1sNmqP6L+g3wTFnuq\nqi82916fOJ5bpHuHNo3I/s4NF4KfioJuvcUyGFxDRaKjKpF+hb1P8uOKw6JZ\n3tV8GlL+hhzBpnDsje30gaeMK2KDw1TCAx+4xBMhz9qA48aKP9OttwQUtB+2\n+ZcOi6OMz0+9hrvnuRrZNmhmvgfV2YqQXVBsBDkphKksR2B/3o8fOXAvbrIh\nwAxBBJ9NBeFeBjiY5HMXtJ8XWoPsO77FvNaSUYWj7KImMO+r621xC1qGUTtt\nMILvFmaA6AsIcZhckugk1fkCuoqhvsl/CXvOVRJrEdbK5XKLYsqkD/dLFsHR\n9uKm\r\n=m4gD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.22-cloud-image-sharp.51_1568395325600_0.921178669708177"},"_hasShrinkwrap":false},"2.2.23":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.23","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.8","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","babel-preset-gatsby-package":"^0.2.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"ae1d759687d5f865b9307d2f788d1bee00ecad7f","_id":"gatsby-plugin-sharp@2.2.23","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-ENNKQEwYaOomQvbS7i6Rz2aw5tH+a2xOu1dV77cTEl4nE4Fcg5k0EJSfGqLod1nS0sd/sXoVnIwZd08zCFTq+w==","shasum":"735ced3af92e17d27efabe79514378718b99d43a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.23.tgz","fileCount":15,"unpackedSize":85559,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdgdgjCRA9TVsSAnZWagAARp4P/0wOvsAimY0U8+a8J9y6\n+xLbwHfWgZw37pkjZOu+5+LOgo/sn+h4x/bcWtIBdj4j1hbMHnWfA5SB4Ybb\nzzKKAMSVAIVhsrEQ2/AQ/vuwcYLSp+y+Rxo7FE2cWQTELSo7mV2S2VSg4K+O\nSZVEHo/OP+G7j0GmKD7YxiI59DRuBzIKPdaOrgCarH1H74aXGi6APIml2l4D\nXght4PKCY1xPPDOcfNsEbQHlFEtRA4yOOyElBTprqWr0cA03WzMHlVkmS8Qw\nRoAnwqYNGS3vMYghqHdquo24J0qKOGmCiFzGF6j7gCWsimz29BuG0TowDc3R\nb3h8rE1t5bAt/9Cj8aPlQAL0l49o9gx/MMc7D426ZQHpquXXBRU0YoiPFhlD\nyYhkzZNZVgN99thOHPRUXHgJcIcIzofL9XSi1pD1hgo2ddX7e4qHWtZWvoKc\ncKg//yDBtF5+DDopbMkHTLyifFk0uoH1Z5e6Ov17DmHAkZ3j9OI9DUUvC4xE\nM52taxj29tpAUKU1an3cokyv+JvtKT5t5iILFpVI31GHNJUeP/2KFPxew45b\nQ1FdKiu0RUpTC73cGICbC0TRVr+pLf2Q6OIuePbVSRCk4TnnI5uE5BUGlGEH\nhxHcnX5sYYxtR2t8BiV1HZN1dEtv1bABBq7AuEETa+LwMnCjNiTt0QNHnzXQ\nFWWL\r\n=64V2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.23_1568790562541_0.321201521492432"},"_hasShrinkwrap":false},"2.2.24":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.24","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.9","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","babel-preset-gatsby-package":"^0.2.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"2627b1bca2e1f1fab1c4394e2fd5dacaf865e114","_id":"gatsby-plugin-sharp@2.2.24","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (win32)","dist":{"integrity":"sha512-9tMWXju/R2yssmA2+uBxioSlwq1+X/fA4Pa86vqnmt2JNb/urcDvLhKilC0CySnyBskYEnRsvRDdAuAb1KQHDw==","shasum":"7032282d3b849de4166c4c0914dc4ab016c50c0f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.24.tgz","fileCount":15,"unpackedSize":85749,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdgoZtCRA9TVsSAnZWagAAAQoP/1Ss5aJdB62e4nyjRCjW\nZiRKh4iz0OwD+vd0rhxgY0CXcvgUx6S4thX1C1q3T+pW5cmcpZ3UbIY6fpe6\nR2a6MWRHz/enRb4FKAFLqFavV8pJel4jiqys+sj/eW9GbXjTHeYfd5nar6Dj\nhUDC3jf3MoavHPy5MiwoD4yPz1kQtWTHMVf8nnorQNk347qWQGZkwjiUj3kn\nLWe3h8RrxgihxpRQwF34HkVqojxqaKhtbZKjR9I1iCCgLh3k3orrB0bjFzVS\niASW7gmh4XHL3IBqhh+uaaMnpv9xUyfUgca250HvjaGkgKUmBgKmZW1jqsAs\nDzYGGTsrk7iH7EiH0LKnkxZUk18KPovszQqCKP/uxXMffujq9iqxCYqdHvQR\nYmYRIDHeXeTslFaaoyeTggXjHm6nzjsYYd5easvMbddTOBPXk19jRxaLiAhM\ny/VRi6UZiSu+NogA7NLO9dSndahQsSgQd9AndSrbYyEgX7F+WWvhPodjNl31\nNNoyQ/dI8jnEg75AZmh8ykDCSMOhEMHVnFRRTmN7LlUhdmEixySkYUfbTuMA\nVjH0HeG1UDTzMorCgmpOgMmViBfFSCHGt2Nm79s0XJzRusCQ8ClvKBIYkwet\nw05qQskNtn9zWeEq68DoIYm5oofMLmqRD/umo1Cqf/PBQHSd58xZ712OrO16\nPwkf\r\n=Wb16\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.24_1568835180624_0.3116704173738245"},"_hasShrinkwrap":false},"2.2.25":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.25","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.0","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.10","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.0","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.0","@babel/core":"^7.6.0","babel-preset-gatsby-package":"^0.2.5","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"38ab32ebe91847519df20bfc9f1045abdc59ce7f","_id":"gatsby-plugin-sharp@2.2.25","_nodeVersion":"10.15.3","_npmVersion":"lerna/3.16.4/node@v10.15.3+x64 (darwin)","dist":{"integrity":"sha512-NBoMWC/AtImBggdzePVH1Iqj6DqG23uhrrcEmCoVq5pJDvuGaq/Wsr9+igQT6rJ8MbfFHNxSyY0JvDREelbc9Q==","shasum":"8ce172071d914123b895e5ffd5b1c06bf294a481","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.25.tgz","fileCount":15,"unpackedSize":85937,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdhCeaCRA9TVsSAnZWagAAYMgP/0rIzMvyl/H1DPOBLWzH\nA7owcB62pPInGNNUZ6VLlvquTd7hE5LPVgSK8C1TjuQ1aKGydyP/9t/1isQR\n8O8KQKSf4croFnYiIucVnLVRZttXxD08n1q+UjQHOtHgWlNAuIFQj6EYYLq/\njPeQXef/uyAD38Id/X01Tlu2C3SbeUGI6e1F5osFoVOaB/Zn4LzYHTk0Dvrs\nlbxaeL3evrc5RjDyL1SXbXw6dRjJUStDI8YvYSA84idnZmeDVOQQ4kCnylI1\notv8pgnKejSj2rOUz+gSrXZrBBAxWb5U7g/enf7Bv3FA0NPDpHGocRODrwqr\nrQFiO4YOxBsexvMy2Na/oT1Tta01u+nczkKllPvYL6ndMjXKHU8VJM+YyE1c\n0b/IsUsYVejaXPLXyEtHXGypa6D7rl1ZOcaEc2oU0UoVnK9zdNqHbHs2D8i6\nGmK5r0wK25izCFWtPm+9asIVdhpRG52+7QdaJ7cGz9evNatxaonCO9CNwnfF\nj4ovrFG21RMTSVRJRM1GB4fwhyqfu4KhngTUoM0YqTFBxb4eAc1lklEnu3lp\ng1tn+V2ukhkcavNOJ3LQGuH3GBhcY1yG9cNlfz/Is0Dmi4j/W5gSgPR4uy7L\n3voulYXDqLf3bi27lISZX8Qv1i0y3dj1aVDKGYCV2CIikk3L9Plegt8pmh74\nl34y\r\n=dtKe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.25_1568941977567_0.19444066425641404"},"_hasShrinkwrap":false},"2.2.27":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.27","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.2","async":"^2.6.3","bluebird":"^3.5.5","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.12","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.2","@babel/core":"^7.6.2","babel-preset-gatsby-package":"^0.2.7","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c0d5420247ee325dbfce5f0aa3e5222c47d06a2c","_id":"gatsby-plugin-sharp@2.2.27","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.16.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-4tcHGYs2pWEs6pHVjdqqMgfZ7/+6RoWy4ohlCssz8CDuVOIFFYAUvRbYSViZ833ZkqYINLG26lNrTgUibmvE2Q==","shasum":"8374915e55c4b156f4ad661c1ec94e23999b0b33","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.27.tgz","fileCount":15,"unpackedSize":86541,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdjKTFCRA9TVsSAnZWagAArC8P/3iv4L+halrSyjBeGhOQ\niNbID9Dplx2ME7j8VLXZEBv06Io+7xcA+YkMq6CZrvHb9JMO/bJv52qZfW0Z\n7Cx1X8AXN1tdE3Ba4cWmG1A8NnFmVDzRCZX8AR681CLmrKL8n8BYEA1waBzh\nU8lBlSgAdp0RzShRiwhRbRn+J3erAcLthR++RKSrFUxdYuxEFCyVxSjN4plQ\n5Dt1MB5/E9ydjidWhKTbcJe3tm7ZzwIQDPS9LjytdH85oD9LhqYdwMI7sW68\ni31G9bjnt7vNChzmH9IIKNKAiQefzPJRpQMBHhfgcsOIC5Lg080/6ag4G3Vw\nuTk+cOmYDkyGtcamyfBfwBwl0lKvbx0RuT7Ta/w+IIrkoOuBuf7tXpXHW/xm\nJH5Qg928AHC+yMsF8zXwpjgLJcHD6kjR/E0VXzgiZsqjI/kwwaw11U/KNppl\nd7+GhqK4q002BiaLM8ihuDzPXEKQXl6oh7ETaJbk9MpdIbmjEZF+iUcVsQ0z\nno3ynwtbaykO++I9LLFGUZwQxSeQVpAxmwtQsXhUrFD2fNRSQbbswfC+si1F\nr9sID0QXHdVTXEu6BsRzsP/dJIdXvoTP40xs7yNBbVWiX3Uv8iMTAR86TxyE\nKDhs/vHZMSvE3l1F2TGVq+rEgzBAAW+/xUAiJL5CBcPblnCvyULcqj3BtDru\nsCw7\r\n=Bbjd\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.27_1569498308379_0.7555585652721533"},"_hasShrinkwrap":false},"2.2.28":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.28","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.2","async":"^2.6.3","bluebird":"^3.7.0","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.12","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.2","@babel/core":"^7.6.2","babel-preset-gatsby-package":"^0.2.7","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"077cccaab43052252ae14ac11e6a06de9cb5c4c4","_id":"gatsby-plugin-sharp@2.2.28","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.16.4/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-+EJVf6X9kyTrh4Ja6VWaYboC2bZHaNrbTu/3xOBi4CLVbALdVxf9ssN4SoIZwqq/byAXKIE8kz4zG/bUeBr6PQ==","shasum":"673c503a9585c88e66bb82e3c76ff860c006d917","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.28.tgz","fileCount":15,"unpackedSize":86847,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdlyJSCRA9TVsSAnZWagAAg+AP/Ryo4Ef76IPIr+OkFeC8\nqs1m03cbt6R4Vba2SolPyGrSJn+6AQJ12SfvSX1jPYG0e8LWFZuv59r7C0aG\nLXvz1LwCj1DxfvdxgeWla3ppx+44F96pTsZydlyAqOPME8ltlpyCC+eLqdsd\n+Fjt+JPCq8iSaX4KwgU09aJ2K+DyjHp4mHWqz6aAFtNaKrBvYX+7TkS8wqwg\nF8u8TNo/loV0dKcfC3pScd1pk594SFWaEhpEazr5Zg2An8AeFt/pHy1JwChl\nGo3M7ZrDmXHrU1Bx+SI5mjtXJM46sv25qlGFzWt8myd3bd8I5YeMW0Nxk8ZO\nlwVeLnd3cK88F8pzeQwmiW29vw3j/ixJ7G2VO3Umu+fM1ubCUigbwIqhGySQ\nPOARg34bCJ7FbyMS/hl4jhX3WDAdblztJlsWYODcgAnmP+pT8+/sjRse23Rf\n4fQ+bdTl6C9VH4Iu+TpMrev97PsgtJujQNTtY+0e4/laupL1SFk4/RYlZiSI\nLD2ZDskFeyXFO7xOWDWOp4TjnzTi/EIyZrIoq2A80HCXi/aTU8gryoPCfyYT\nSqRVgL4JCbuIubTuma91gSVppa0WZhHSclEd6rFWqsv3GnV1RuYug0fAHn7e\nOmFTcMUqxhTEIZS/TwdYnPM7v0Mtq2VUOdGYQa7qcMr/p4q7YRWK7KGgOsZd\nQ06s\r\n=CNH/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.28_1570185809553_0.6394858119379079"},"_hasShrinkwrap":false},"2.2.29":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.29","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.0","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.13","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.3","@babel/core":"^7.6.3","babel-preset-gatsby-package":"^0.2.8","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"904ec39943432d0fd94369e43e0e4de48999aacf","_id":"gatsby-plugin-sharp@2.2.29","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.16.5/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-PGSnBU90s6qsY8tufaQhFvA00ZfV7Q+9EkRTAc01YiHg92Vepn5B2JY/RKVaoPAOX5I2EcJGD/rIYy1wsseKFA==","shasum":"91f4f9437f999e5f3c918d0046f68a8d5b78ad62","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.29.tgz","fileCount":15,"unpackedSize":87034,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdnZ2jCRA9TVsSAnZWagAAOagP/3eu+C0uODBAfC4dyi1S\nTm4U0CuyadPWewpyekJAtqbCJ54LGWnupnTE/Duk6cVKv7VQIFPIGPuXlKRd\no5PsauNS3pPTD771IyIaYBl9l8UMvThP28GStH/jt9e4USFrtkoE0vuVg1zo\nDNqfZbTh+HpnplxmiLEmimrHi0YKsd94v3bfgurJ4XodSHPbbgM8UXcslYsJ\nCIXyPSPUixgySa1WJn0c50GSof3W2s3HzFGDE9vZ64c3uNrfXHlLwo6QcOXz\n5SYpMRNux7rvVorpIJxFpNhs5bY4V56EmjA1bdq6Pnc74KEclz4xW4FYmXX9\njiAoxDgqqI8l5F5qD2ADn2WDoYWaK7CIuNMevMD0oE0cU2/Vndfwniy07tAL\nlxBLDJXv4oRswi0ZAGN63Ui92XF4l+idmX7Jy1TV5rwQVC34SqtiOzEnf3aA\n6opzf4HCBxCbitIwjZaXomN/vaSbIinq96CBlfVh4Yc4IhSlN5dZfy07vvFE\nuXfLrEoNFCCR/gMQpISp7s3XgZWxD0BpNPEtxcESqen/kez1xjQVNnOpprK1\nEAJkoWdPDurGRNi3QKQE6+wkj4ycQYokwUMoJWL+EGFky0VzmqbkqkubmRpi\nKKObyyRBFV3zqPEVKEXw7tsBIYFyD5pPfhJg1Fr/FCIQddBq+UBIb8miCTtu\n3xKi\r\n=5IuY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.29_1570610594919_0.33713811483155864"},"_hasShrinkwrap":false},"2.2.30":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.30","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.0","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.14","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.8","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"f651b47a848a6b5ebdfe9c70f5aaefb1ad149c74","_id":"gatsby-plugin-sharp@2.2.30","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.17.0/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-JpZWITf3fe1UWzjrpfQvSpYZS/Cr54UhLSXLCQjiZ3v+sLQdW6xhDmC+q8cKr9aO59M1CEjAGsbKb4kAzUB15w==","shasum":"4862a4a418034c1297f065cf1ad67ab8f86146a2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.30.tgz","fileCount":15,"unpackedSize":87221,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpCFNCRA9TVsSAnZWagAAm5QP+wUitJsYljcm1oU8hwcE\n7PbjZDXU7XsDH1FOmERQOpz3BU6FpVOAzJ9Q06aztCdkHFcdVF8VVijhDSMG\n8x5TcMtjF7+XSWI6mzdQg/I4VsGtvEoOlRns/NkOxU2esNaC7JwkkCC8J7F0\nnrS3HQfYS5HEYIODXsSjZyFhV/8/h8PSjnigJZuq/aamPT5AcWsJUB917DYH\nRzCNnBE47GT+qp1/UiIg2gOHQ87LFEZ2IvF++DCgyTFUPuJIlfUSkU0jrcQD\nmSj257t18W/tg2X1sT2VOqBUgTkxxdpcL/5AtuqSEnXfs3UhEPc6tkEVn0/3\nSEpWkxlUrZHNQXPQOgrZdtv/bj/7idZnf7TzoCG3BKsWm/DDKw640A+vZ1lL\nq4vt9pfwx5H6HaLmUmmcxvxw0i9aqccX2RC33eviso6tmJyeC8hiTE5cdZEb\nZzn6N9oSRjLtiCnwG3qaEWhhT4BP4aB7xtxNvjFNEOoLX0YeQkdk8kKUmMa3\nzsFg+j5wXzjdAv3sMIc00Iu59Nh1dbQClmeFqFHnjNgorwbd4bUa4BVeCwmS\nj5UrtwkOOsHvkIlfFhL3Juum62ByHtoiC2Cfpy7+4FsgDeQdBZjToSd3CvYT\n3s4agS81PauopZG2yFzEeP4u/QnTrY0xgbeMnzf78Q/fTCOL98oV4J3mVz/O\nubvG\r\n=1W+/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.30_1571037516306_0.8242494499997557"},"_hasShrinkwrap":false},"2.2.31":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.31","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.0","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.15","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.9","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^2.0.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"868b44f5522edd3fd09fbe68aaa6e995e3cdfe03","_id":"gatsby-plugin-sharp@2.2.31","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.17.0/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-TqQF/Wy9oDG+BuYyMWLvCEnMSOAxqVoXMcKlxkZ5Q7/gw7OQZTncRr+p661Yad+uxCtX1tyD5PlZyQ0dq0n4/w==","shasum":"cd254f60c6c6f1397c6d9f336a52aaf50fc22c7c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.31.tgz","fileCount":15,"unpackedSize":88067,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdpG0sCRA9TVsSAnZWagAAilcP/27zp40P1PmsjTtu7qsR\noXyHLpHWPXErmAIlzhMsBBEDehLXv76xMmc09+TeaQGzRzv8ASw3U8vgYQLq\nLMY5m2scM7sRHZfbNBQb11TBWBDjUC8W08YUXvvCSR2yLFpvCOM/R2SXF5Pt\noJo78fjMf1B4OUwzNPkW61f8X8siq3YmMqXUwzqN8k8lWXJdqeufKJARMPZr\n0w45mdcfVBb6HoiWLu3CL996lFRnzuYJo6UiHEd2DiR/5SbdwQjo8v0MUEJ7\n4Bj63P+yQ5Z64ep1eqhYDkvHhBrVCkr79PeJDL7gh9IZn7Wfp7WvH4XM8FYu\niEnlsmIxhjz4dc0+PDCLt587tJBlEeSiq7ePSUsjYfLcviIT6vkBjo64VHtZ\nDN72RE9YRDFlEJzF+Qmw7KQhyUr8I7/4fTfsj4auO1bIDA2o3V39qlz3LY37\nRlStXzK0ZawaJWMiTm1MqhN4QPPADU8+31+VTTOJ2pYg+iEmSQnrXgj8I2BV\necFuAzBg+eWD33eDZJb/A2pmKjtHQKtwT7dOvklg7HTu5aZMxIQf/Fe6y1Tb\nBVpxnAAIY1EeXc90wyKM0iLCr6Idpl/uSDLJkcBVi0t2A17xkw1n4V2I9rQd\nkFQAHrb9t8H0BrOlUNGFMmIu0yB5i/4l3/1kzOXT8PAvp4XvuXnEveg/mWxe\nksRP\r\n=eg2h\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.31_1571056939739_0.35633425467630486"},"_hasShrinkwrap":false},"2.2.32":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.32","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.0","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.15","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.9","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"41c90973c680549f4dbffeb2d32b53b95060629c","_id":"gatsby-plugin-sharp@2.2.32","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.17.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-ArHxmFDnP3nVSeapwAyxcvY8Yx0WOjP7kTsODj0E299VMgWMgQ/Out10otgGW7rqKZRxxndptPM3C6uKAGcnyw==","shasum":"54719b27886efd7f7c21f9bbd871ab51a9beee18","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.32.tgz","fileCount":15,"unpackedSize":88201,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdp1GsCRA9TVsSAnZWagAAfroP/RANuKs73WQ9eMGHWMYI\nl18+tOdFDBq5WwAz1d5Lr/v5N1lRZKY5T+LzF4FbfuJNsqXXO2thRmvflheW\ncvWjf+rXiVxJNENawCulQjb2k9IoSov6UIWC6toZxeM+myRAl/0GfCZ9dfCK\nj1pOU4H/dQJ6imcAcWvx9QxQYElTJm5AK45c38vwblnkADcslhVvnRcR2de8\nqKQoRdEH1LabCDANsJCl208hbUwMKf/GysqT31t0RG0MxwrpevRz8q/qffIQ\n01tIf0yc1C3gVu7L3LoF3hpkR9yZUi0c6d0ltQ3FEzrRRze94cY6zvahKG5i\nOG5jsQOEa2C4pUzrUYKPQk/8wOb47N4ynH8nPhWoMXIda+niRk+rvP3eOxW0\nmtlooQxt+bLPSNMtrKYVWTxo5XWjfRggEYpwmaXWBGwMuDoGC1UkkVp/aSSq\nBv/GPwaCli2tyuXsFJBaNSqwyx8GfW5EfWId+UohEW9GdgyoSSEMqcc4K3s8\nF+lQrKYS2NrVYPtJ8NXKEg3RcTAF+nhkvrEKv0mu8VC1neXYtAKq+XQdQOzi\nPDUvhPkFjizCEfsb2W26L9HIOucAiB2b8GKYuqYmUGydZOn9mS4d2TPE/F7L\n+Kx8S23THQL6aFm0QKjl0LBVc10hdhD0sVbiyL4AHAqAmU4QV/SDzMixVJ1Q\nYk05\r\n=Qykl\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"tylerbarnes","email":"tyler@known.design"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.32_1571246508046_0.12481255504626065"},"_hasShrinkwrap":false},"2.2.33":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.33","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.16","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.9","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"53e34a58d25ef29567875bdbdb5871b0718ce61c","_id":"gatsby-plugin-sharp@2.2.33","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.3/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-lnRjNRyZj8AIB2QZ1vNMDiZ/pWTKvID/Xx0htBJ3ggN8F9JlNxkzO+sun2aHfb8Ik9+OItpQ6NVl9marN0/JwA==","shasum":"f5add31eba68dfb657065aacea1a83d17f700cee","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.33.tgz","fileCount":15,"unpackedSize":88501,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdtxVUCRA9TVsSAnZWagAAEX4P/iH1PaY01N76FgD0PMLU\nQA+4Db9hIGd7obrtnUuTA6ZMxm/2zJyAwQguEcWBwKktV7hb5ZZC8gGJsbVA\nfboCp1wNuzlzkXqNrwKfgdc6pw67ZBj/LRWCsc9ZIG9jN4ko6JYmQ/zUOqO2\noF0lT/B+0Lo2pGcJ/JxBQTknwte/VD3o1Eu2M9dUUX7iLVphOO+L4KkBGs64\najTN/4pTrYoboUK9kWmCjIsrlKbn/XdztA6TWTmkcfskpGfNxSWl7FvyAjjt\nrvfPT0FsLXKlbIO+uYQ+GltIEckwM6PzsNrHnR8u3MU0UK0B+3HZEaS/6NUm\nL4vNcNQ8fklPnBAvswvQCGJ5O1gt68bMWSM5hTO/xwpC608MjluxM7yu5ygf\nobvBmgCl2hfiEegDnRYzeqxZ7ApTxSe+uHtpvGq4BinjSvPiOcmD31kK/avG\nwQmf7gS6Bi0Nc8kBHrgNyOksOPn20SaoajiID1474GL6CRrCqIcxfpl37ZcN\n2dpmMQoB/u7EIdXBqsf16Z3Dl6oWJIzy+rZ8DrkjBZU8pOLFakshTKM+DX1s\nvP6emxA1xGrjgsgXfjKpo2GAQmxmxEE3G8CWIj0+GOtZoRefTlVCi4z0gXgO\nmzgzoDqjz/wozDunG36IrObCu3b7XdkvYr3LYs9GO3kCYYprlgH8IQVWzPk1\ntVqF\r\n=dlWt\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.33_1572279636318_0.6600933154298863"},"_hasShrinkwrap":false},"2.2.34":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.34","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.17","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.1","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.9","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c5dbf0d5a5ac96bc326bdfc4308e54337ea36be1","_id":"gatsby-plugin-sharp@2.2.34","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.3/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-eAWyZrHYXOmEhyD0JaaklsO9oWBQTgrj/uAL9zeJDCmLnmHpdEkiX9CuErO917A7VLwI6P12VNN9+RYdrXwsoA==","shasum":"78736c581fff86941f41374e2cb4256aa2a49395","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.34.tgz","fileCount":15,"unpackedSize":88688,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdt2XlCRA9TVsSAnZWagAApFYP/A/IXOXFdhJs3aT5NA67\nKBFHsEkq5INnk1mspPbZaEiS/I22awWh4lGZU6ruDc+Zy2ajQY3Z8hdCMdNe\n8XE8E4xkCjwjQzHfQ7G8fNMVZmsZHWQCLDlKvIbiaLnJcXxxAx2QYI12vo9o\nLyYMLmgVfcRCY25tYRhkB6b78obtOZ052tv06i7VNoI3de+8EWS3hFOOE2CC\nGfR1hN1OvupEpcj9tnxtpS9QZGrOAUAkGospPcAxrFT/1/canmOToH03ZpF2\n90IX7msl0yBjbIRjoHyyqOoGRTB5u3mowgKm1Yph9TodrHUXe6G1AIx4qQtz\nMnjVp3S3OdWC2N/uw6tRCfYyLVEVESe8VSb0+UhLmNk6Cuf4Mz0cdLiH1k6x\nHlqkgkQ9+7QOjaOi56MsMlrfFiArJP/6qbrSxefy+roV+5lBg9/uZSlnrgWu\n8LGVaTHpFJPIXmCULemxn+fYCkhBeHBtlyPMXF0jLOooNUVf+jIo87AyS2Jo\ntAm71KZQpOYPYzBUdOFpge0rlTxZyRNiDugzVnvg2ox2Jo5eDNzVunBFRrSt\nx0rDgiClmYqEJ+U1m04bGLvoB1DDjW5ZBJ7RJLPxQx4MRMBXJ7mu0Qvlh0v5\nl5eqeO8OQiOgBhjcmc4pSPx4io41I+6HhhCyqG8Ed89zM+v6RR/xWOVhyNU8\nIYW5\r\n=rNps\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.34_1572300260749_0.6874382002237129"},"_hasShrinkwrap":false},"2.2.35":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.35","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.17","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"^1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.9","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"8737a1d8585c9e3e394a9dfc4ed511343e63c32c","_id":"gatsby-plugin-sharp@2.2.35","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.3/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-RDmpC6Sc8X4grndXxIW+c8sRdlXJ884s99/ZDIU+cH4WAejvj+c+ZHR0yBRKDDt1Ezh683677P4ykP7NH9V+uQ==","shasum":"bfba1473fc9c071aa791810604278dd372703a01","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.35.tgz","fileCount":15,"unpackedSize":88988,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduMchCRA9TVsSAnZWagAANbYP/iB3mz1HMWQ0yH9vCBPO\nWmyk8sDrgaffmM+3eDCoqSfUVtk3/Kr+7QzdCJYdb66Udmmm92rMBtcHjggQ\nJZGthMNlgOrB0k9qPsaODZ4rAwxwl/iaqM28N6j/hpku5qGBv1ahplRhTanT\n7imCvShf2BI6mmyPdS+sMbB+3Y4VMjgKDFLclcYnaqXlhGHWut4CFFW7Rbgv\n8xjjkmhs02C5idfwDAo4x4v7+u+67652jzY3eNoAlXUAlyajCRWu1M3ztXha\niX4YbjcSt5txt0q5FWYxlrrJrccx5sPG+GaGgWr3fXaoLprFN0n8vfCc3VZ7\nK24tcgmQUahtqd9HlYvVBwK092ETCLyQMUrersY6vGqRsSlXWsi89zCN3f1d\nHqF5gu12FS7XD0LfiEM3/+HmIcGTTuJ0mHbT5a5fRYBlyRppa2Sg5KwUygmJ\n9zqXzzurcJOXezSKojOTnJlwonVzMnYA1F7nmaZut2WOZFQNuv7yAyrg+gvw\nFruaMQmqc+USxHsImEuraNSi6wh2AeByaiiflHbvq/c+pPw8pvSQdxtygVHp\nskVOSMzI7LDX4f+le/7E0zMGrDpUe12UiiaomsGCRwz6AFP0XPBabsOausTT\n7zfbAshlxbLA9KFzH5ruU49hk+2pvhkbfBva7KVdTFPhRWZ8sjvSF3tldaCI\nNcwW\r\n=/anO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.35_1572390688641_0.581380257549176"},"_hasShrinkwrap":false},"2.2.36":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.36","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.6.3","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.17","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.0","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.6.4","@babel/core":"^7.6.4","babel-preset-gatsby-package":"^0.2.9","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"080c5fb6d8ca69e7d698c7c463bd6280a033ff7c","_id":"gatsby-plugin-sharp@2.2.36","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.3/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-xxTP5mkgevZF9xJdkCsqbILvI6G99Dl7A+pUMKmUS6hsScJXzNVkDzvwVvV3/DdGpuBBt43COypLZfgZWWU+BQ==","shasum":"860ab199fee7af1fb5bb3c5b5c3134fd84eca56a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.36.tgz","fileCount":15,"unpackedSize":89341,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJduMzHCRA9TVsSAnZWagAA9BoQAIuD+4fSWz5FWUcHvcF0\ntm6Z6LvvqwSE+5pHapwekqIWleYb8PHaXx55AJWqW+uhN+b4cnt4hBO20xvA\nHmeULsu0uQEY07Dsdt4liQv5Wfpg0l8z/QeyQOgnJdTC36EkNmw+QVzLzHOt\n+0eONanB9x+ToXRale2NKdOdDkCbAgcn3YHYG3zJ03GTXJLG95fRlUPGtruC\nEdAt3vJjhgG/RHHvd7Pyg/xcyDVzwk2bPMYU5VIHJol4TsxCg/HjfCdpaUqC\n/g7ZZkRB9CZHvtYkVO2G49jTAcl61hq0xg3RyHfrw1Vz1nUhMcJreAAfvbC2\n+lm/GdqRZ0BkkGyWl5ynDIcNkxZr0AL6RV4iaboNfmi+7QWPKq8+/hPcr2dx\ntkE50dT+v7ohFPEuGcBBtrtbljUwAw8QokYYw5d5N2DtmOHlRHMOIITyJiLy\nOAcJTlxOP7wKorkHESxy9WDf5E+kLxZz/fxXVwLiKim2aV8w8gfp33jdwP4j\n/5L4Rr7GgdCM4dByAEuBy9n6x1T8e6D74Qmowx6F861Hu5s/fcXQoGNpoYP+\ngoBv5sNiwiF3pvyYHvAbbCYAbyA9rebFGihajn5yeX50m8wRvblzjW1vZzsE\nP/GL2Pnoxh9wKVn9yJGIO/LK+MDSoew8QQHfTzYLAcMiMdzKJ84snoJ0rBuI\npw8K\r\n=sApG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"chris@christopherbiscardi.com","name":"biscarch"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.36_1572392135213_0.06762392550694085"},"_hasShrinkwrap":false},"2.2.37":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.37","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.18","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.10","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"0efca77d3fb8416f9f2c42abe9eb23ebfece950a","_id":"gatsby-plugin-sharp@2.2.37","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.4/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-efx5oC34QIaXpzzFs71faIwPMVxrur7LvHCfrKMstSmFXmim9yixuDQVYusIbY4eqebnj5o7XmIRcMCCvzivEg==","shasum":"e8d3029dcb263efcdcd96ecdfb16891b304cfcdc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.37.tgz","fileCount":15,"unpackedSize":89529,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdyHciCRA9TVsSAnZWagAA4ZEP/j0UrMxhu9mInvrIpqpA\nRuP/X5xhfjeIkEcZsEafxnQ7A5x1L6JqxuVFHjgTODsUAmIDRScoKrikrpi9\nrKcpMPyV42Xn7HMdQhOx9ZQY6J72sh8Vd3FCv/ovUWbI64lBxbtMMVfFJGvJ\nZy30wxNoFtvGzLBdiR70h4wglBjt47Vf5FeAVgLyJaIPXKTYwuS1Rcd0pvJQ\nvkLqrwjLqXClQOH7yuxMER56LrAD7aa0IKWkt0Gvrp+oTqtaqE+SQsj0V9qo\nt76WROkIkRDm9tZl0JAVkM2fhYvBvkbTWsgKIoS154AgJi3CdRUNyMRoiZ06\njtGic8Gej+K2ZH7Lan7X0qAimrA/yaEVrAl/IBt1jqyYF8BkrX9ruRrkISW8\naqGUq5Mki2DYFSHWMIlSwMhCelQvAbCYxLPe2fypwXJbT2MWclf9DJSYOjyP\nYUfNPdq0JBBrpEZTC3WRVpf3igwOF3Q9Dr7Bk5DHbSOFjZ7Qw7N5modjRCti\nVSfE7ZyoSGoBexxy03ToRJFlgRXcQDIMFTGkh4ejSI9080g5uizEwI7idexH\nVoKafRDlq2aasVWJicO0bvbLulerOTQL2XE0KHirRSizJxP4DPh67sg8m0AK\nFj6WQlzEqHEIiVbbBbup58/oZyIvN2H5ElG3X66LIUwdJ/WFd/EHlaUujj4j\nna5U\r\n=DvqU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.37_1573418781254_0.0852905662268455"},"_hasShrinkwrap":false},"2.2.38":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.38","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.18","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.10","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"27848b9afae08bbaf8ca640d8488ae766c2972af","_id":"gatsby-plugin-sharp@2.2.38","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.4/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-jICICypzxy7HdVZI9lcTgVZjw5M7udCL9HYOyZ5ioVlrk/LyTOfru3dBUIVEVP7Ho9/wtRH3159fmbQV6Dy7WA==","shasum":"3cebc9c0ebe65f22b0ae4e9d27368a9610ab1d04","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.38.tgz","fileCount":15,"unpackedSize":90296,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdy/n2CRA9TVsSAnZWagAAsZgP/iYV1TLmlx0krwKifz6L\nuGeJpWhNPpoUNHbObKsQ3q1KxskbPmuVoGSxd4OzrBFwH48mT0P5L+VNaZIv\nTdmjgXhzopveZPTtbDPOYaZeigB+5hzW9wYAdL0gr7ziek4o4LlkzgUU2Ayy\ntdX8aoaCToVPy9TFzg87h362mz2TAo83Zu1LeD8jctRAgXF7HoCiAnjYDwvA\nFTdwi+MkmqSl50uoPN5FNOmo/riOOgnXlqc7fLnu4rBbsWmBAsqhKjeJ9625\nMyZliK8TXxfXcQCxwQeXftAamMpSsZH0+s0Iu/ggJ4NlpjpmHlKTJaS2j9sb\nBJodMkwHh8gc/T9xV5byGsvSLg128MAcUG98jg7VVYzAgnfv1so9EjdyMzU9\nXoK65cythemnoQIFt3+pzuYJadnaiYIXV7YGv1du4l8XS1d0xHn+7WIQxzwS\n1Ob084QHl8WPWCV3KU/TwjMJmOA5BZorfRE0zH45JsV2JqcnwjxSyKuZMwcQ\nzKbcaPJcbNmlP9AQ/Apa+iT0M90JsI4i0AJaSCBtozQgsDsusy5iI1FtHa5T\nJh5sC6slaHD/nLUZbjGsv0Oqz8xcP7rsYU+s/GUp2nw66ZrQZObKfsVNyBUW\nMZOiqgFSCiRZBD8KjHoqzrwuWWDwBluvfAigcn3FRoB8Qj9ijV9rHXCYSzkS\ntG+H\r\n=WuZ/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.38_1573648885163_0.7542825690380965"},"_hasShrinkwrap":false},"2.2.39":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.2.39","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.19","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"e6a30aaadc6949d125eaf4d16c8fb36ebafad10d","_id":"gatsby-plugin-sharp@2.2.39","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-qBqs7uD4s3si0aHYAFIpMCKNoRMou26w6fIuUi5ymbuL3xeRj/a9/mc7O4QJajm3i9EgC8eVEzEmGWOMmBhyQQ==","shasum":"e14669ce8ddf267138135051d95c13cf7bf9b612","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.2.39.tgz","fileCount":15,"unpackedSize":90483,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdznJ+CRA9TVsSAnZWagAAgO0P/RevDRW/4wZoYSIfWnUY\ntOr8FB8DUkjpK7VdvMnuPxs43SlO2/qOviVv931jmM1Q1JQ7luMu/98JF5lI\nIizcaS0XTDtKtPOGD72AcQPlVVu8MtNjV1Mr8JTGkV8LaRlXJJk3x+9vUqjQ\n7z7QtQLll79ZJaOR8LFe2nBuIUXX6AtrAY/KiID7jXLCW3ZEi1JF6Us7uiTI\nWdWW8xHi+O+RIGkUihmP7pIi7VOHKolIpJX4n1xQPIJubh6w/wOrKrFyfPMT\nIdXB7kRDvpmxk/y5Gwqw3X4cFpUjjNghdpX3TMPntB9eJ4RxFW4xUlbNujmk\nyqpDZHdOD4nDL+p/5gzFvUvJurAYS57L7PW9Mrzziw04P9gEvynmb3DUblwk\ntHIEtDWwYPhJPMCBAzHrZbuF6KpHTZJjX2mK0MfCJh67luNIp5b05e7rz4Hy\n/nH3KSsJH9PGZEY5J1qSYLRczsdhyxnWOnbRWvseZwQoGvAAENnpwjkJ52Re\n8+KDIn8Bv/QnxqpE3lMNyAYJFyhAZY/qYrYXdzju4XESNwds4S0fG9YxE/wl\n8V67KmF1zIe9cizXwgA+NeMKgb0tRlKlS20w7mkvWHo6ihv8NgKnjQSyvlA9\n6cQoV7v5+EbfSra90xY5ZGI8uKnb49claFIgRNHtPBktL1JD9omx+jBm2eQ0\nK8UZ\r\n=E95G\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.2.39_1573810814230_0.5841820636905442"},"_hasShrinkwrap":false},"2.3.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.19","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"1e6954a0e8e8a661a58bc3421a3d17d8e38e766c","_id":"gatsby-plugin-sharp@2.3.0","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.4/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-xtsyCT6EtBAU3447MqbzLn1jmH+JxKiJ8RFV1fSal+kF97YMDOF/dpaR0TiTuDuezCu+NNWJzxDJm+awuyvSjQ==","shasum":"50f545f9b54c68727a560cc1f08590d032a787a0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.0.tgz","fileCount":16,"unpackedSize":91931,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdzq/zCRA9TVsSAnZWagAAJMQP/0sk7YVbtkJcvYvu52CC\nd2MXvEsxJVn/pWsh8Oo33o8ie7lDKFb6Clu/70yZbn9NYGLEx5Lgvun/41v0\nVvNhXi9nLeTFB+Hb20tM9JJ1BpzxBMMXgBdRLkhaDQPIi3+CrZ8DUYQnvosN\nkzTU3axNQa/hk5UfmzOKOU79H7i1uXeN5bJruL9NrP0HiDonAslv+z8K8E0W\ntAanQPThMraF9A93dR4KjVO5HQmrsU1hFvBzbcQtaNkpzhMi6l5JhqZIpMLN\nebNq8G6zKiko5wTqG7qcm5HDAoj2bpU33xNOAqHzDpQamR1J7nevnv3BZwhr\nletZ/8X8umUmMAtr9kcx/akIpRaSmUWEr6Q/HSaiZG8o3etyJBq5R5g+fiqK\njjf5vp/D8MqCXHGyqNmUCPL8uJTLbPew2E40wzolXnSr95R4hMZKYYsaRNDF\nVZisMa8dqn6hs88rVGk+rTlg1l3oRs/KUB9HaU6BBUf53qLgRJb+iZemn9p7\nJaJP+h4HeRRYfGtplklGS6dx6HAtF0fw0OnQAmZfKiL06BxjO/03WC82a9Hs\nV/T+zXFj3GZr2TPaWkxCLPu9c9eYEBrMpkK9J+lx0OJEdgeHLryUw7MwaYs9\n3gQViAvpbxXA4cdgxA4hvBhm3brUT06M7qb0djsRRx15I/15QOv21j5UfNtC\nQYnn\r\n=KiBQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.0_1573826547359_0.015728371300521182"},"_hasShrinkwrap":false},"2.3.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.19","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"314526e2bc28715d83ffde0e6c172b483db1184c","_id":"gatsby-plugin-sharp@2.3.1","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-sNfDa3GjmJUazCMYKGTn+6Vtu485sKoOkQMBhdgU7Wg8kMrrouEsFbh6313ExkbtHsslPL2RLuF+4XStxv+TBw==","shasum":"7dc85cb432d6726897dbe3a032afa433f3b5a788","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.1.tgz","fileCount":15,"unpackedSize":90850,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd0jMbCRA9TVsSAnZWagAA3JcQAJUJkuT3mqHbgCRbLbwA\nMrGZAmhUD/bhmIE8QfdD8DOgTK0Fv/HpZeHDr+9ISCr1g4tRyL8oNl6gDRjg\nsGJw13bNXn/vn263CSUaF8/PfkTrHPgQZPA4d6yVQCkUAV4Ivl41v2Vk2UPZ\nMyJm1oX+f4EQjnRglnnO1lj352DhaKB5BpdS0DsBGQ9RgdwLGpcsdnQ0Me0l\nKSCgZyIxcw9L5TpUtUH/jwcDqdcrKZtg1PyHMyZ72fI3yIR0UjUBMSF+uX9p\nRCwSG14ljVx9dnqwouUoHejn8EU6G7f7AvHXm72ImUFQAcgLkySVNe57L/+U\nzaaQKJ6vZlW4hFQb3BO+MLQ0wizmYSV7ZxpxzDUMhZlXP5jx9DzKGAL2HfGh\nFT8VNmQFr04XMqhTMoxNNAL0obOU2dx4WHt+Wlzbmm2rbm8in3iiAD+Evm3L\nPfdRcT4t/go/V940lnq/7gQDPP8prA4cR02wioid5pdRwBKkheGytohMkMCp\nJKrulkvpQ8Exj6MU6gCiD8f43PQJogsnxoVLQBfuRgiQqjLXARm6ahGzQ+Tz\n9pdwRfr6Ecntm2UX3SPW4GsL/TmEKCwTDFBhrFKRuyMrgx+v3xF5/WrEECn8\n9+69F+DyDBhANgyDvheT8nT0wFBx6XXTvz5FuK5TbonqZ5qzCSnI9i9XnWYt\nRGwl\r\n=S4qZ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.1_1574056731222_0.1362621583339747"},"_hasShrinkwrap":false},"2.3.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"4e54d39f6b27118b30868ebe995dddc9efae3697","_id":"gatsby-plugin-sharp@2.3.2","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.18.4/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-H+TrGwhX9vK5PY8WWNBTnsP/LtD3STmg4+XAgVTyRllmh/tVLQ1WzPCwCdoXHsnykmpUkVPLjg2rbdsKod5vwQ==","shasum":"bf9eb6234f7a6c38a9611466f4bd7fae14635dd4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.2.tgz","fileCount":16,"unpackedSize":92036,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd0xxiCRA9TVsSAnZWagAA3z0P+gLlP5ArtyrjYeNIqPUb\n6kUd2AdbzlTXzFrMIGqpCMf3sagQeIo5hcbf+OEKgONFGo1l9JT7pU8GeC/0\nySGsLiytwlTuP8wGZSrK8gI7Bti0197x9t97Hn3uN8nqEzgnX/dqooOKtI/7\n1PKuflay1MV/rZYC9tnIpbKO/6NIekcJnx8AwkY2lBseWcvKbwUAS5LFxbn+\nJkeBAEc4WElDJjf3Cx1tQLN8wSDI9m3/UQnKLfO79kHukyC7TplIRHCeVPr9\nvTKLo8Z5ECmXhycY7YSGOb4kFto82t08B6t4cXxVCNdBqs6MWHyjJULzOduZ\n2SRFnm3ZgO6YW2bOq2QBn0vLTe+V41i6JCTskcfg2c2yzs/gG17fCBHuvTlF\nPWcDqZfcHej/vlLTnmvNv/jWpO6AIFPMuq3NCJcjfyuJXU5X3i3FCl/7O/0l\nkumXCKKN+aMuxJYCGk5Iax74nxmCjuMq8YmWrlMsgBI0zQILml1EOgnuq50R\ndM+1h6r6jqrBLvORZznKl5F0DmOOcxww7DQaiWttAog9r3mZa/XVJP92TeA8\nrcKzg/2++rHzMHiBqg32jR3p277iclbRsvc7Wt7GpMcbR+QQDEIyI/Dum9OC\nHQPcfsHfTk/LJlePMtp9b3y1gqBXuPy2UrEpY/AW1q1JHGldWnyrztvaweZY\n/SOD\r\n=GRrX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.2_1574116450479_0.2605302402272702"},"_hasShrinkwrap":false},"2.3.3-sharp-cache.41":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3-sharp-cache.41","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"94d38fc8d5b2b19f28dbc927d1c198f22973f4b4","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.3-sharp-cache.41","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-1bHsKTUs4YsUAF2DVnevzc9I27uIgXnYzshAAji7UdGDTPNzJscQq6FFRua4+wxV1sDtiOqgCmsuzjBAS5nrNA==","shasum":"ec108ed600770a5c42eb1265b3717e25569ba385","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3-sharp-cache.41.tgz","fileCount":16,"unpackedSize":92059,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd1//8CRA9TVsSAnZWagAASO8P/Rz7rfDdacU6DJ3XVcA+\nu7PB0dw75BHlMoDysrsckU1ehsNBrj7omyE9141i7VMPDiROgR9oi5ct7eDH\nnwnf+gDqL2ie5ht/KBIVcCiI7mNBVcTAnrNCNE71doMKk2NOG7IwAV6UJtKP\nad7HxUDpk7bVlmuR/XYpd599QZNKA3Z5uMKnT9dWaSHFqoxZl4e/mpt9gHzO\n5WIqQz+LWtzIB851Tuem4UQ2OeOch5cnm3nazU0+UGTg+u2zfcJtA4phTsIy\ncxT8/LcPl/TswuZAGkcSE0ztnjXBwBlkILxb3t5rFRkdjcAM1nLj1/mO8lLZ\nzFoRMHVEDm6nrs4gUKvrnJf4Iii2pcOTaat3/0qDmdiAUo/065nlupBy6Wkl\nHGsSyTMem5nSp7kyE/wAlBmbWZgidYxKHM8LICdOFO7vxEONZMX207Z+1RcE\niFo4Bnf7h7v/dCQYlBuXuOlY46I+Us0nmJmdevyxFHO5K4vhQk12R+jJS/y5\nVFIQV6JBIExI8hwKa/pqdcp6lMgGqtxUM/gUYGhEqljcozWvOQPQ5w6n5Ji8\nvAOvw+DtRvSH0WomObAx8d7VfQNdbZeGDLirLzTqqg+tMM4fULpirsMx4DMT\n80irWoQSycJMRkDxcjiyvpta0Wgs3dUkfnaZjAK00yFdeExO+Dg31WkiQunK\nMNuN\r\n=SqgO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3-sharp-cache.41_1574436859854_0.9259752636638501"},"_hasShrinkwrap":false},"2.3.3-sharp-cache.42":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3-sharp-cache.42","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"21b7be66a45d6f1b923dd2a00c9f6a463ac56609","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.3-sharp-cache.42","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.17.0/node@v10.16.3+x64 (linux)","dist":{"integrity":"sha512-Nwj1fxMGcSEvJg09OxAX/XKhay3SRmpk2P/DTXJqVaGYKclMo2PVoTA2WWa04SI7DpkrUdV1OgaCPLYRjV8m8w==","shasum":"c17c9fb09391323ca271cab935d086491975cd01","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3-sharp-cache.42.tgz","fileCount":16,"unpackedSize":92300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2AKNCRA9TVsSAnZWagAA1bAP/30YVNF45nYHMzEw7TmJ\nLu1LXWEcZnuJCC6QByxOeGdgYIP17wj4cr6z+T1gIRbKcvT0AQduZGzf9Y2u\nleK/Hf6yrf3PCufMwFTvmHoXYH/pdNIZ4Zp83NHIqQPYm+rc6LDiDXaCoSR/\nNhEjMND4Ja9rA/p4VKA2U+ar45L2Xi2o1ltwa6SBguisgmPOK0k0ugeqaSqz\ndrENBk2FQwCH9r/0PpEFmJr4Y6dqyU3ChmcH2J5Goj9DrAXzP5XvIt1N8d4m\nBoiwbBcIsHj/PxUBqosBQ5w6N4fA2sPTcsCuIrK6XrR+BHyXXjJIjo5iQSoH\nTqNWYfbFWu7MBCBnG8ozppprpxlqmOfW8X4UrgtvQ448xSCeoJmQZnC9ekEl\n/rEG5QS9LB9V2w90LjUyzEbusciFMorsfUlV1HxyKkaVxQLKQATPL/QiJweL\nc551IoqzRZKpU7cQ2y5QEBI8hL3UZhTklcxJHmISYrgbuyAvPL5ikA7cMe4O\nVxSvx3s6k8gLqJwp2QK+/d+xQpTyjIu/cj1qq4VzoVIAcBlf0tza3+C+UFkS\nlbnQ9lErBLyc9lmfrBZqeqWyRJfGlokth+Q5ymOz2iNFchxYAhYLQFg19QV2\n2T2fz+Hq9/Qyg+Y1nLvod6hDiA1SoIeDXI+5iUU8OpPaov5UMtL8sI+hgzME\nEtr8\r\n=xMf3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3-sharp-cache.42_1574437516766_0.30880289899668445"},"_hasShrinkwrap":false},"2.3.3-sharp-cache.43":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3-sharp-cache.43","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"a20f40f36171284dc3819a0e2846fa835416ceaa","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.3-sharp-cache.43","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.17.0/node@v10.16.3+x64 (linux)","dist":{"integrity":"sha512-2kqblSJEfJ52d8S4Mp8AgXfTZZQyhNIKpNcQmOvmRQLzZYyV2VYxEiab3VzRIHT6HZDnmwN3dBsu/OQ4Zx2O0Q==","shasum":"30660271476080d3107efb8c4c12af00cc1cb1eb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3-sharp-cache.43.tgz","fileCount":16,"unpackedSize":92300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2DXHCRA9TVsSAnZWagAA7n8P/R/E5Mo65BoaBz+LdbCY\n3qHSLVBDkqTX8h2ZzuDFsqnCpEl89mnR4VeyPI1EyFpul3XAkmuXwaUUAWci\naHVyhQp1nzueff0HX0OktQMKZ0lb488qD7ckUH6OkXsAQmVkZjzPkzJAnkAP\nrPbjJ19ejnOGTotgjlQCqvejpJartD+kJQEujYx7HQaW6csHKRuZckMFjiD7\nrml0gKL15MBH84AgoDjtQDCG1Z/vsi/7RVX4THqjFmrchkblFupcDzfiJAvN\n45crOSkSVwFf2AWlDDaH+6kITNQ4r3E0814+6YmW9ihTc3//SN1CHuxfv+m0\njTYARYoCR7x5eenpeA1SP24Rv9u5qIUPNuVY066twIxjjt/RN4ZnvLjg+dNH\no58OO77fetukiLos0vy82tYhswBawecKFDLg/t5J/FI9p+WWgywdfR6NVPZj\nM6sO9PgLRPLHlR1rsPI3cMMGrHABVAbc+r1QN9VuVGXPcF7BhxWMK79hCLCw\nBr6PYLLDlh+whmyIwg6ltXfCXriV3Q4m+8ZDJotj6g7fIYh3TrFLsm4VygMp\nyVrXZSCQ+mO09JeT/pVwQgh0jwpHiRilDGOQMzyQxqKg4imdAdFFoHdNfm2K\nZDzF4JUwjqH3A0CL6GY4+0SkPggoT6/fpZZ0kgGEehvsx7S/vbCIHz2pDciV\nkBcv\r\n=VK4F\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3-sharp-cache.43_1574450631049_0.5683082997913247"},"_hasShrinkwrap":false},"2.3.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"^0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"787d9410e0baeeed29f74d0e93ed894e2ee6ce90","_id":"gatsby-plugin-sharp@2.3.3","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-WVR08k/K23UClk/bqcFBm974vgT9DwlI1H2wKlKesQ6949SWRqzkqrdtjUXsPdgwVF4C50dlc5aDSKYWfG6Lgg==","shasum":"8c6b23f462ffd2a72f2926e6d5b74c03be9aaf04","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3.tgz","fileCount":16,"unpackedSize":92683,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd24NuCRA9TVsSAnZWagAAQeIP/1hb2u288mXRDEua3Ypo\nSV8rsBaw9UPtDBvapqvAxmPkSCaCF5CgsYyUG/8XPWCNKewTIV+U3/LedVOC\n0zQnaG9mzvmy6vaUfuMcE7ur4sim++46RXCul2U+6CXNNMrNi7SBFjG7LU8h\nSUXGaqz8Kdshs5osZcImBKSuz/zzs2RuhZvdl6IhsjQIgoclKMsfCZdXmiVK\nX0deJv5aMfiUA45BaYBvkn5oZkLXET8hRy1JpnUIuRJwqj5v/BAwUdg9bW8M\n+DEPiUcPlRJ5ibv+y9QhN6LYzCldKnVpVMTdEhhJRJaKyg/9X+UKf5y50XlM\n0yvyDawsr/4q49WX+iG4Ie2521gRohi75MVw/i5bU68BystzGD7T7VL1oqGw\nc9fVUGcTG9NPIGDFBuW+f1VV+zeMALWyJjQjflfyod2bDZE5yxOpF0N2pNmu\nxZ8iiU5gCu7qrpDnL09nYkHhap0ktjbt1H/7h67cwQdDJAi4Wj5RoBvwlCVI\nQDYWBhOD76nSxgNfGoEhm257/T3mC1JWsYeDrMi8SxVPx/ftROtVRXcV89p7\nDzhf4Gs+UO7a74HPSw4d/b8trzPkD9Hznb6eBcYy/j+dyZaszBIMRKv1WlxD\nuP/747H1yizepcaO/WBLM0N/j75gc++IYDoPinHVn9+U3EB+tpDKr/y5AvOf\nwxpZ\r\n=bWLg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3_1574667117825_0.9741416814860446"},"_hasShrinkwrap":false},"2.3.3-sharp-glib.81":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3-sharp-glib.81","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"555c3d8df4b455fffe6f220b11480677920401ab","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.3-sharp-glib.81","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-Kxj+BoQIkLBTquqSffnxt9V+n7w9oT4fk3eDwoGIw4J8NbDtmkbq9B76Cy4JnuB/PsnKEo9pr9bActE4+RCAYA==","shasum":"f051150f89babcf9cd55317ce56133fb8bd4be69","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3-sharp-glib.81.tgz","fileCount":16,"unpackedSize":92120,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd2/KmCRA9TVsSAnZWagAAUT4P/R7wH8Lc9jMycCKWFfHm\n1YMb/4uKLJZuQXbqwPYKSWx2BdxEtAQkH/PQY7Z4LS0GascW3WF5SYU77Uxi\n+9eHRG+NktUDljHSzxD6ZlRFXUCny660zbxpLEbcAW+AMkKzPKZF+Towqrn5\n3lFbxalmPj41AxrGT01KC4cYXg7c6ZseCfShQ+gHZz8PFuanIYSqDI1lxeO3\nG+qT0vUhiiYTRUjzymisWvfy4WvWDhAEz8JAwJhQgKDsz9EIWcEXk4eyNc79\n0OGA2MXRCRPfk2SmnOaGg9TGbgA2xwmUVaSqoGusKKhwNhFadeWXkxCxylGB\nqfflo5XHCRgU0mQWIBLANFa9wqWoNGLkM/ytXrX2LE3IhbS9HtOA86AMULL8\nYDf/EX8Oukl/I1IBU8iJ49roJKGmClebjznVP1e1LLZYhMAskYcVqW/8bBxk\n8ETtjfM6FUyarzbBoWkAce56DFIEDUu/J0tIt/pZLGfWn54HGv+svUI5YYZq\neV+5Dlj0To+A0gQbeDcYwvIhkwNm06FOjoxfMZUUL+zNx/zHT5vge1jozwGv\nh4+YixrV1ZkpqnpncA9W08UH/PAaQ/wfQeaQW+K/F/3HvP9+hhDpnU1NrHYR\no6I+Yw8mCybCMQmu2WX5uKaKchkp0d3KoO8co6t/rNcTIl5Mr8adpF5uFeBM\n1omi\r\n=LOhB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3-sharp-glib.81_1574695589157_0.7785134160371685"},"_hasShrinkwrap":false},"2.3.3-sharp-glib.82":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3-sharp-glib.82","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"392fb87686247d0e4c98da38557743993bff587c","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.3-sharp-glib.82","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-PZWyRTANymKyiVx/N6TmkiDMT/EH+5inNz+fw3AckbDPafFsRuew1Ivb9l2NC6LwD9GqVhWHt5gVcvLcpdZugw==","shasum":"7665f94a4527abe076c3c1d1f90ae907c590634a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3-sharp-glib.82.tgz","fileCount":16,"unpackedSize":92120,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3NvuCRA9TVsSAnZWagAADdwQAIXzaOHdlEBjXgA1ASLo\n10MvjZxBlKmAJ617kIZ3xKubjUGCAgs7TjZU0ALygWrttE/nxALSnkXTNzqv\nETjaWkf6HMb988b3qDR6SoLSWOB8c0I1V9V8jUOTb29rjsfncJzcR4yFOttO\n09o26x+4tiIWHcX/CU+g3eWSk2wSMXZ6Xnnb3anYu7WEa/PFEE+lt/5pJikl\nX++/XJwSauqD9DomjxvUyCdclcU/cNPNo2a+b46RGd0XMJ5UDY76GG6EOuVd\nBC1YIfj83pP4/j4G7xzwGMyYyxJdtjYT2oMCA9v90xyQAKOmugDtQ366T+aX\nSPAjVdqzdP+3103uJgqEQqzv6dinOpdwZw3crsQvAmSnuoFKg54Q5a2j2y6F\nJ1sLIxEBbXrcGDTHURi/ten9O3SNTZQu36QAH68NidIZZEWsfRXRLoSKofFm\n6JgBt36StTx0MX3at/xMChBlC26+RoMFX0HLX9ggL4wLufJMn1bIax8FkTHS\nuewOI3SZFWvErc9NMJFJjvKlza75aFsaXt/bCAuPi3f4TuTCbbVZVLvLIfxM\nYCUOVlezjhbdU0V6A0C56pHFtJqZ59w4iBG1ctAtylahDTMlyIDZ6CEvdNas\nsoxp/hFt5MWuN2RZy7jW7CuAOLZ3K0MxhkppSe/jS6Lt0ukkSxcAzxXwdW+V\n0lCz\r\n=DEYY\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3-sharp-glib.82_1574755309572_0.8005428857298456"},"_hasShrinkwrap":false},"2.3.3-sharp-glib.83":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.3-sharp-glib.83","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.2","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.20","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.2","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.0","@babel/core":"^7.7.2","babel-preset-gatsby-package":"0.2.11","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c6bb3d0049e731ebacc0103f0e7a77a8c8e8fffc","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.3-sharp-glib.83","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.18.4/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-9j7nz567KZIQRk/+14sY/zHOjQVmFDArN0BhZ5psQBH1O/l8UzvE6whuNo4kQT7aKioEuknXtFB8+ArqtgLpEQ==","shasum":"9f9d4e691b20ea088a2d555842c3fbddcea35acf","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.3-sharp-glib.83.tgz","fileCount":16,"unpackedSize":92328,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3NygCRA9TVsSAnZWagAAecIP/jEU34+bfGh4vnUCqjFQ\ncWwv/wDklQ2PGiu34kFQ3Nef6RDTreNpMJJhVKksDBNiq3N7MfKxr5MSRpyH\nxYedC4xiGlPMyEd7HWuzXfV6ftQzLUcIyf2G6XBeovIDAshDItToZGGjx/+P\nK8lyQhBCHpFTPCgEfm8D/qDquf+BPkX2N8FTMPlIJo1nmGjMcvxJmVK3EfjD\nvRJ5xxLDqLPPZQZEF4bVYDGCWuMS3VPBmO6LDHPnYX1DwQdlm398o9cqWLdt\nCNM+rXBnmJkMtvTjXkMC+YEE3ZF2K2D1srLkxUt8/x/lqMfQru49e2BrhhQn\nNlSkkFqL2G6eeVGaKZ6T8W7GtApPwRDphrZE8Ue5j8Hbb2/WbgyTIs8z/ghF\nsmdlAMNdWXt0v4ypr4D74Uq5PBH/vbZ+fN8N2YkC1iANJ6d7R3GIkCpu1K9l\nRplRx8VYabIHsAmnG1wnTqsUIyw1Q9ULn+7oW7TPcdlit8DofaVqluWuZiwc\nenMt9RR+ZVeNmRxrqlnIJcefxtIny8isgb1lFwsUiIqzLTDa8Lm45Tv60Ryz\nBeM+3Ico1URni14MOJYwTM8oXmrBtYTnm7NBcEBBTLW8lKOIDrYgSI+lqX7m\nEHBEnePKdZhUuM6iu3D3Hw7Ega6BCgRMXSuHusKbuS2i+O4VyRn1Kp687oso\nSOnH\r\n=lPJ4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.3-sharp-glib.83_1574755487453_0.714574490477494"},"_hasShrinkwrap":false},"2.3.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.4","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.21","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.3","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.4","@babel/core":"^7.7.4","babel-preset-gatsby-package":"^0.2.12","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"168bb344d6a5e7f71aa4f3812fd3fb22ae0a7416","_id":"gatsby-plugin-sharp@2.3.4","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.19.0/node@v12.3.1+x64 (linux)","_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"dist":{"integrity":"sha512-F70ZX0bpb0jMN9xJD3ZDfi3M420Dn9QQkbEIz0lhymL+IZg8u59jlD3HZ/VUGQBPxp1E/etjC/E8P6KOY1Y6IA==","shasum":"1b9e21b56145413b4f1807c685574956a2efba7d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.4.tgz","fileCount":16,"unpackedSize":92867,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd3SkICRA9TVsSAnZWagAAbU0P/j7lzl8HWuThCylaTide\nxKyxOYjWvJcQ4sRVUjLBigdY3WaE6AT+4wCkYGh1whEE2y3hdB5t8Qmfv8mE\nECWMgT5bh+EL+7Dgsq9TxuOPGlIXH1JVpKb+eFK9mpb+25DDyyR59C5x0uHr\nKb6xyeI9diT2eV8vetA9cwjEu0HiHoVHXpM7EopAaJfj2dPJGZ3B3WfgQ8dV\nzSvwFj7o3W99HxUKSzh3MYgK3XZye6ubEeKg2y6WR8rBSq+/fb05zVZGGcZT\n+nXE7rAMa0InkL1Pz6kE9GVrb/UrOj9cJnITJCYF/hY2AyichQvIudQNLIBG\n6Pidy84eWyAfg+qRhwfPa7Qb7w9EekMO1RGrzEeEA3qfzWpVOPraTuTcZLK5\nfm2OaT0VfewqlMbLHk8Yrg4P4vcorrDj6WJc1AgBu4+nUUCzax4kj/ln7493\n0J9QWbLtTGLEEUzTqmk8Aw8pT1T57SiWlAJkcl10AD5CwE7yk0F79vpUP1ww\njW5i/RT182GQtk25deXUpvp+xlcRmjoApdjW0z8+5cDxd91KD+uTcHVpG8Jp\nIZ9wRAy7UFmavauue3S2aDGkmbrJ99LSFjxL8INJq6KkzXe4aHSMsvUBwr51\nNE+hMga39PrH5ne13XxQQgbc0gz1xqHtbjeWAtVBuiAd51UUgjtm3OdqUZ7/\nj1Pw\r\n=rgo/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"davidbailey00@outlook.com","name":"davidbailey00"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.4_1574775047935_0.14760914597570363"},"_hasShrinkwrap":false},"2.3.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.4","async":"^2.6.3","bluebird":"^3.7.1","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.22","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.3","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.4","@babel/core":"^7.7.4","babel-preset-gatsby-package":"^0.2.12","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"85444a7b061d2e359f773c64fe180ce7cd9d8628","_id":"gatsby-plugin-sharp@2.3.5","_nodeVersion":"10.17.0","_npmVersion":"lerna/3.19.0/node@v10.17.0+x64 (win32)","dist":{"integrity":"sha512-2POz9S1n3Xh2+5nhkJ5Zgp+dZxtgNd/00Q3cjnNGajSciRHeA+wvYilWxiDtudu1gLt5dIRVizj2zRuXgcQYWA==","shasum":"1346e9746937ac20aacc3d11d550226303c1c73c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.5.tgz","fileCount":16,"unpackedSize":93193,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd5PNNCRA9TVsSAnZWagAAUVYP+wbWyyFyxjQd+PPP9cb7\nvmwRF9M0XGi7bNBY7wEUQKXjBsHucVcSmKQaqGxJEeAVuIYT1owiiVf3r4I3\nW8H5qyq9Oq8QKTmta4h0r9PorAjckkdfsQa15NWfEvLX2TuPJbG3bdC1yLPT\ndoQh8iBVHywJMki9FXOhoFtfqyLY7nT67C0ZQa4/AYFDrHCmXZM+orLdhpJq\nKk/f5/H0aOVXy/5RZ4G6PfD5OIapTWf4ZejTWNhaJkV9gxtYnRCgOUBhu0AT\ngud54UPEn3endOQA33zTa6qMj+5RGMS4b2XpUflH5793A0lzSJkmfNIRBnpd\nGT6oJ5YoyK5BbHWXC7EGbfRtOX1r8RNgFT0BaMSkIZ4vRC73E8v1G12pzdtf\nGHv7+K/C+fBL8T/Yb3q0J9R3QBVjISNOuXsSdJwb6PwdSEkwyyMAnqlCE582\nlRUWbOPyrSY/jtg9nB7xQOQSYJ3hG5KvrJONyg9jmFVgwWpLRaUYpTrPdmbS\nOCyyx+KdkXJa2Qj8m4/oswbvjtS3u3bvdT9/Dk07/ZzKbF/HPmd5IXD9IWPp\nEmTGOHAjp+HZ+u7UTjiGzyQ4pGso17AGbhR/lmV/89VBU3w4+NOfgU0GTUgq\nFXHhCUGKqZtLMd3Rws/HVqAs1WiYPlyRJCLuhhk2E5ckF5OkCqWmY+gGCOwn\n6fsm\r\n=Nlbx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.5_1575285580578_0.933947865595862"},"_hasShrinkwrap":false},"2.3.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.24","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"a9e404620b8d855b8c6f8ded028b93dab6071ead","_id":"gatsby-plugin-sharp@2.3.7","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.19.0/node@v12.3.1+x64 (linux)","_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"dist":{"integrity":"sha512-dXPjalm+V94oTo6PktOuJPgoTM+iP+WGPtlvif7+5gL/GxplnQ+M2piOM+ttKF2b/BdnN0Rkfq3ZWeaXwow9KQ==","shasum":"31e767804fa70b07c9ddb554249dd2d24c42cba8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.7.tgz","fileCount":16,"unpackedSize":93561,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd75BHCRA9TVsSAnZWagAA9sYP/inq/9fSWfi3YmSVBCa8\nJc8v+3RnWDCUOS2AZ6y/jZeavsvjecuzUQUxIp0qIMBYNfM3wZ5ZQOnAk1Uo\nyGvBQ5Jdq7sHVn9pCWIohb90WQgCa0sCBJHdde9SeG6UmfmBvPDFdIgvkWRj\nNcgZHV+YTCEsqv8NlcsD7PnGYH5OIJ1jdqU8tX1R7IuytxwH5UD6aBhq+Sfs\nh2PSQoDISTR3nxUOnagnHii1mVbx/8MEOmrn+YKMTvNmKiz6t1brn2AhIR7N\nYPNjbpvOriB7SHmktLZ0Pb+W8XiUnWyUzawepF6FxEZpe51LmPa70INiNaVv\nNqXvYZdIwNK2RCS3+kXsvmx6CQ2oq+sNJCYeAUnlvZNfG73jOeOQ2x+/vEba\nsKagnlx8gOPXEJOOyBWCz+kJEgnbCxmsCqJv4zlEXNklTWAyJb3n5ZK0TgHW\nEiOPeQ6Co0ehyinlQO2qlU/axTNhhsNomPCxxlNzAmA0MF0nxkznt0UCErzk\nBfCppPbfynwyx4YNmHq8qlfxQjWDWThLtXQZQysE0d+3uVRlmYGdFXh60BMU\nwEdq/SmYrFfHV2PHOdNP8TmAtWNsErkFF0OoUPV0cTdpR3zusYT29+ScEyMk\nHyOZ477hTfQ5ubLKq4U0TwrstnKz0jf3QGXTm5rdYRRHINNrdXzIsEXVpy1o\nWD/i\r\n=gWWy\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.7_1575981127268_0.109344963646818"},"_hasShrinkwrap":false},"2.3.8-sharp-jobs-v2.26":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.8-sharp-jobs-v2.26","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.24","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"460dcc3314e803688cd62ac5eddda81f639eac8a","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.8-sharp-jobs-v2.26","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-2C4IvtcE+nAtqfHRJauHZOdD3aFb1G7+YaOqRN3sFCpW24Mv8taLqT9OGjbiyEdavpEerGCEXVq4jBKNYDdTwg==","shasum":"c91026da561b60bc0f42fa44923a58b4870496eb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.8-sharp-jobs-v2.26.tgz","fileCount":17,"unpackedSize":95407,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd8hDeCRA9TVsSAnZWagAAlv4P+QHH9xmyBFJiBBO62PeN\n09IZXopMYMGvg3N1HFNnojGHUUiueHNksO/C+IYrXRr3d8lAfS+8Umib+oBt\n9B+BufX0hdgBspJzDkUEiWcrxtwLkXSna9BACc5O6sKfFVxYsQOYmARKRSUV\neLr+cn6KVA/VyXFJGinTuEaO8KvaKv8S5GDIB1kSrnLCpr8pWdvZAdzLRsef\nUaIZYz2tmBL6Kfxmnqj2m9NoqmqN+rM98aWFvnz3h5Uxw6BuYW2zLECNGgIM\nc6zdRugrouin9ys5JWdnf4MZvOfrUWC3zRAX5CLsbM6cDsBeUmUgrdUGOEhP\ntacPkl6ya3HV433rKSUZ791bedGoOiC8gG1UV+2dUGMRN97wWaOtuoEriUub\nOw/h3v/WNY5YWRzi8En2PVfGWpm3EO4g8+RtvQY/Jk7T4994GIqLI6m1YQl1\nm/E0HrFdKmXFufElMs/UCDAK9roAznHFkgsCD/xHtB5dBtJkxFTe0bsJ+QvR\n6d6JOxIkT7+nG40eczqPa2y3ORloKReo4PjHLazs1xeC3kJ1G/t+O3Cv0IBw\n9ZhG4GAnyYQOKDIbZCZK4TIwIINolqmtTAfybAW1LYKl+TK3dgJDe08tC0id\nfDMfXZTrdKGDEXGfU002GTzdoONPKy8xbz3+zyZLGbppmltWHgVd5hmFkyav\nWijm\r\n=AsZU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.8-sharp-jobs-v2.26_1576145117722_0.295780973771965"},"_hasShrinkwrap":false},"2.3.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.24","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"4000d4f8c9e9f1556fed22cfacbc7f9dd0e0f440","_id":"gatsby-plugin-sharp@2.3.8","_nodeVersion":"10.17.0","_npmVersion":"lerna/3.19.0/node@v10.17.0+x64 (win32)","dist":{"integrity":"sha512-paRIZvg6lVxDhUwPlKGg5WpRQWtghHfXx92g3K7vYKtb0uIYpNUHgvb3qhUDWT/lFULxeHxAB2oO4fYoPdKoWw==","shasum":"71ad4cb2fd9829a6be5b517705c97f9e37c585b8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.8.tgz","fileCount":16,"unpackedSize":93768,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd9zkSCRA9TVsSAnZWagAAFyIP/2YJeewMVjguqEGPhisL\njYwv5CYWfX+2mr/73bczg8vDQixhaZSfwSYd2x59C8vWOo6zDbExKIfqEZ7y\nLOEzLkinvxYM3U6yQ+9Dl2SGFXZFB1qCh3uZfn4V1HPsi/stPBFb2VYpvf/1\nwFxeGcqBVJLDCgy+RMl6gTtG0DASY5jj1vw26zgpTdYYRGGDvRhCbLJX59Xz\nqPqgLhyWZ7PDohPaTit6AGE8pTw3GWxVz9nAul3TXjXbkZv/FtiIbEH2V4ud\nbWkS9QaUr7+l5Oaiwkasq1AvPZy2rZbjkXp8c54ipwSZ42Sb7qz3i7ZOJTyz\nWrJfsnRXdtWAuT+M+TGImq1kGyYi2KUXUyxbrgYsKr4910C13WhcSLc7ZHhi\nma2xk6z1xhqPR7BeRDAWchjNveQ624Cpu5kIGv8xSaPHQemaxQw8TGZCU0JW\nWrZKfbHxnn/+2Vxf2b6MlvDEHkrOiPCfgw8XfVgatryiMgaxbPlYBYB6b7Ae\nzrQZZcdQ4/gPs65ziVi64rsjR1+NzjLsZvU95K4JDQZzAfF8YZs3v7/t78xx\neK3e8lIu/JOOL7LGm+dZIkzytZ65UBw3Y8wIXCDwwN+nYar0wE/khQbFLRy9\nd+I4q4oyqWQXYG/pNHHOpuwLyMb0sYiJBw06sB8eX+lL8AQomaqvjv1jLtcO\nnD5s\r\n=fy3W\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.8_1576483089435_0.988943362098001"},"_hasShrinkwrap":false},"2.3.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.24","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"ce709866ec1a0dcf513d6b2ba2833510b3c38a93","_id":"gatsby-plugin-sharp@2.3.9","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-+SG6ZfoeMRC5AVDw1QpVrdHmOvuyJjTA+bcwvavDKbZoMsiDG5QdTDGgJogr0Ak9VBwOj0V3Y3cMpMoNtvEg6g==","shasum":"8c0febc808bf271be0556e0e2ab608b741056326","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.9.tgz","fileCount":16,"unpackedSize":94162,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd+OcBCRA9TVsSAnZWagAAlLMP/3hRHgc/ufr6mRc3lL6d\nQM9/JH1pfjOa/goe3enB0FrnVp5n4o60dFCpQ2nlg70Ibs3n7yN9Awrg/Ow5\n37viOVG+O9SxpVOaGFZ5sC8nou4k6IO1I0rRT4xgZTFsIKVs06LmqRw5sQa2\n486cSPHB/vgu6j98IC59pUP1a0O1nXEJZWU9GqLWfZOscIw72TDu+FZQ68JV\ndwZ0OZCARtyKW53cvQyd1CuhkyMS3ai1vli3fi1p5aAMELVCOO8EEm/u7wAL\nHX86Gm3GVmGlPx93q/CCEKkC2lFF4KCQi/j+wVoA5WqWTJGRsHaLu9ojsO9R\nJhFQNWWtRCSXYYPnYKtFhNwDVsIengBggeFOvilnXrCoDCArgw7SurMyHn42\nxFQ73mfgpE0IMmnKmrRWcGGz+dq0wQrkyUmAO8MLawJPHPRr9skhENh4KfHo\nV7EryNfqhuaumIedWRvjoogkUkHUZtEYeDHbNqX9JnGBb0uthGMIa6MB8Zjv\n27RvgF6phbUZoMH+fXShKk0fJnFZ/B7sZVYIgsFRaDLAZ687m2+mVrcgkJiI\n/lTzqBNNtRhAYgZunUDIZMrYmLjCBxkwwRvTWK2DESR2Uo8lOxpKDa1BbvLK\nDBcDe1YwRvMx00SGBzJ35H3ILWP2ZtqmfZ842CTRZxy+BpMRuJVtX/OQuAeb\n7/pn\r\n=Mcrh\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.9_1576593153006_0.8848591866147537"},"_hasShrinkwrap":false},"2.3.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"f5f0c9b91d914cc86f9ce483e062357ed7ebbb7d","_id":"gatsby-plugin-sharp@2.3.10","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.19.0/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-uoVLdSnnrnpWxeI+ZNdQ7nuvx60LI8+nqsuUu0KfyAmEhNgcuuExTDYlM4WDn1BCIifCylTwBBTP0xZU4YvPeA==","shasum":"072acfcaf5de0eda21bbaf3e7d6e0cd891cac6b2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.10.tgz","fileCount":16,"unpackedSize":94349,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJd/QJUCRA9TVsSAnZWagAAJz8P/1UwtfGfeAulZklKuKuB\nL+PjTtqb/Dg5D78KCAM7jyfUzGQutSNM5N2eg+aDPFMUtR3NIA1D7Gec9/gN\ntr+S5YLKnLHGW8hqCGHodntGnCSIxfuAqgLOXxfYTyAn9cE4J8HHLkKqIje4\ndmIIdB1kx7kafwtwGc3jApYXesfaXbPpEWJ05RU6DEkWcJNcoMrIfRKPsrxD\nM+NAAvalTAbDa9Kc7ITvErvD7iN53udiprw1mGr4WmFUlSMlOTfgZqFNV3m5\nn84L85V2qLElhnWtrulnyhF8fgM80tibaeLXc28XS++uT551JF2N8LQkKDNq\nhPjiabn8bdJ9yOWkF5ELMxMCOzhK3Q5ZINOxNmG7BsA2rph8MxJTN0DEUhm2\n7638QE24GIKL7ZfNc0p54ohD9SrQoVa5HViUviTw+EovUg8vaB1b6giH7O5u\nY5qVZnSbGl4eSeJ4KHZBxfpFlbyj97lxNXctW2evH4f1QYVkx3F/mJG57aK+\nKp41YhgjmQjn7sCLOGdwHpGWbBVMU0/DkRLcGX1fiaqn/JSMe1VhQEbZspy5\nN4agCkcI1HVJjA36oh5tjJcE/JGY8PPDb4DKsjMx8uQ8aYCdXuvUmKw7Pfy6\nZbJDGVNTPCl9JrdhCRiEVJEWB+oG7S8aFFNzLycAmxhT/af7fQ+0RU9Jfp1N\njxXM\r\n=o6DE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.10_1576862291673_0.5209609343181143"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.63":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.63","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"16e7a34bd2165fbb710f24082681aa51fb196acb","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.63","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-SopmWTfFxeJrpllRd3oZzIw1DZVZ1bL5EtOTAk+ipA8o2+tl7YVXNDMrDPJAz4Q854FNc+ElM9Ci26g2VTvQKw==","shasum":"b7f25c730c20f8595691b725579d09b14cfbac66","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.63.tgz","fileCount":17,"unpackedSize":96475,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeEy6wCRA9TVsSAnZWagAAJzYP/icYFk/1zf3WnWAEFTwb\nmoijKFyAMrwJb0J9L8DXn4ZTxV9ssL6yv8X28EW99AdDESeZO4NSLrLwQ9w2\nVhvIrqGzA9qqCr41Gpxfv0lsEx8adhHno9tQGtOd1qxwVIOJYqVLl7FHo+lZ\nhtkl4yZBczZqhGbnAPeALO0OYraZGaPd7F6lv78ab93DBZBB08aw6C+PN0jI\n0cd++HZuXqfd2A8SEMbpaoR6gFXUjSMrCxqKFZ9IYIowqvP9G/dhwzmPo79Z\n0C6xxLc8dNwI2yWXZLe3WnvAmOs/afadbKv7EKrOUecY2yQjOdknOkp8V4uq\n4xtd8NJv902dosNibuTiTfVDyKqyRhNj/DhNbySFEXQc40MDbcW8RwYl0AOo\nupWE0QiAprn+Z/ILsxNnbRn1a2TPuY1+/s6NO1t3U4C0kxdDhlhxXy8eN17k\n9MeZUBthbmwBhH9l43Xix3lw0wIGxNAf4WvJMxtYY+Qzy6jvbiXMlMCrCKDc\nvVRgtsM8qKjajumd1w8ltA8Fx9Ik5sFizSh9Zt8FJgHjChaR4LaMJDiffAyR\nJWrzj7GpsXWUFL7ArYwodlR+06IW2YvXl73hBTcU8m4Jo3Q/LgNwqx64r2QT\nz2IlcDUUME3aafxSNnhhNfYxiaASzc4+943ND3mG8Duvqyda3k/vVd2srJ3q\nRVQ9\r\n=Po1h\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.63_1578315439383_0.6145165449280066"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.64":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.64","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"a06786b25d6a828e5b39608e2d2b706530c1d121","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.64","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-kEQlRXWYAkC45SuOJlOVEdOc5xQOrYgEQebtPVyR7pMB0Hibmcceh2eywg5MV1fWXr+/B05D7JDWHXXyoHjhdw==","shasum":"41e7fba4d32d6f190951211d069acb934d6b7a66","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.64.tgz","fileCount":17,"unpackedSize":95726,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFGe1CRA9TVsSAnZWagAARkYP+gPu7DOtvOx1dSMV9zRv\nyYBjzLaZCBZZ33nuP8FLRjTLLWRd3eyED4IFIEdP4rDcGrVdXiXDkv/HTHWH\nttdwrUP49NdkzLefcsfixH6hxxwFc/TwZAPTveEEsyVUZxEac6lPBfggLc/2\nrotokZq1afpjkcfxxlpCt3g9xgc3RoLXJ99CY5GAeHBuWnwXYAxYmQ5BsiFo\neBSu+pfXxJx3xFoHIhKqJctvkWMPDcBEhg375lQKBXMGi11nttTq3magzw3s\nN7U4K/H0A9xGhaZnV3UuiMwLRtQlvqx9tod9ARzB0/nWmz9l1TJgLwiKntpw\n2ASsWmyljy8HIaqiwLCzRJh/b5aSXdypfkGJRWd78Arj4o+Bh9taqyXIFAN0\nHqXAj8J5hOZDI2U3Gpp7UT15zQ4WsClZUdxG6rqKnRLAWNGiY6NHIOoYnSmd\ngTrtOnR/uF+78PM8EJFWp2kupckvIMDnv+PkofoygA3lb8tnLuASepmcONEF\nnL5pTTTTMfZvzMLQ1JfpBxlP6QxUcfxCp0Bo4ngZzJ0pfiCod0ke6kvKswLj\ny+ot5mvA27nUkEGYvYwwcWGVLjznP/OIubmUdlX51edqIrZ5dwKnv5LJU9M/\nNtMvtqXtNzgCrcfxqm54NrvEYhcl5IL44FUPPMzIt6VW6YHUDD3oACnTEAah\nFlU/\r\n=Am5N\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.64_1578395573251_0.9053462452651511"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.65":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.65","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"bd7468d73a47aa0d7b2de13944d6b03317cf1f03","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.65","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-p4WhSka5h3/E9oU5O19qrLm7E9AJnmu1D8fhP8yZwzvq5/1n793lp5MWyLqZAZlZWp3NlSG2tkJJUHTQdmLxXw==","shasum":"4e88525c04a35fdb983f08f5fcd52a1ab8fb57fb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.65.tgz","fileCount":17,"unpackedSize":95545,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFKGACRA9TVsSAnZWagAAOwoP/0uDNgWwVSsPFBa8sRak\n+6pDRMSLbYv1yef++A9iXOzoNygI4FjZI0FhFSn56gtQlPPiE14E/W5sGzj8\nDPhGCQ3RaZJuIcrWkyjEd3O1PRRTKjcy2PL3tvHngryQobig6E4uFPddRzjS\nCRBNJ3OaIFYJuOIN18sHkxi2nsOVBZUmKAk7CfHYVsP74rgtu2vQp+evOB5z\ncHJs1AA4XI5kb2T1Gg/seTJq6heyFL4anX7CwKXeFdlqaovU+zsA00qtEvWA\nWUBXt0d2jm1EazDottXYSzJ2fVejGoFDCV1IxWEO+/2p1c0tvY4JkOU5Hy0q\nmaGIO7h2iYUEMxLk+872YQcE1yNDXPRMeQucJCiXCi0UwK//5LOCr0YE6BTp\n2Z2pwscJwJZCC6XwFcIxQ+W3qMUoV8+cD0t9l0dCM9pkzi9M4jMhYGukzrrx\nxhEC6nfilA7gDBhMDAWJnLk0G/svL3m9G+UabB0q1FZLx7jH1jSDEWzLeJvS\nU7dzSFG4jvXCXIqmko3pdss+kGkwlOklMaoUz4Euk6Z6QS5rzVT0abzJQSxS\nVeUD1auJ/ndOhGt3uQGFlJ0kgzl3RVjHWm9b6x0g8hknDJn/kOG+cbScoNLm\niG8xqzrk1LpyEGtmxua6+EAbcj0hWDDss6B83Tqlc2PDE/+/t6v65HTpvWCK\ncy5Y\r\n=8ggV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.65_1578410367898_0.5205530358782873"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.66":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.66","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"856ff472986202fcb27d093c960ff25d035482fc","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.66","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-znj9azX0xix/sR7QsZhlcAr4GTLGICqNr8TsuCp3Nfj70MRj5mv2CjkJZLnjKXQGh30UVnc025tX+1MLWapcoA==","shasum":"2572fb0259ad344fd3e7ec3e6e35ed92d7a88357","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.66.tgz","fileCount":17,"unpackedSize":96077,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFksOCRA9TVsSAnZWagAAZgoP/3Oj8cnBDnC4QvwKf1tO\nV9KX5Os+VicKOe0zuECmR3pdMyfG6mB3eYg34gLVXzo5AErPXMWH7pHVcuH1\nXojFJb2p4H3WkFmZ1jeFQUeqvw7tdpmrXr77Sw4l5rfb7IrKh8Qp77TVJFmf\nxjpsnL7II7v/jFoNy4SB8BiDh1QYS8c19vvoVvD6p0jWyUFuyWZMXoRa4X99\n7Zz5IyPCan/LwH1PqtXdmHCAILPkXaK8u1huV8or+fmY1fz+AXtenWyFhPCB\nYXOef4ncje0NnHbyCvD0I3DPJxl6ovpYgKh8xqK3bNwK6hgnAZAHVWYXYJ6+\nAjFXilENS/XfAob5fOHYMsdYzE1Sb9ttkiL87B8AqdZs1INEuII4jWvEpEg6\nyncJmCXYt2PkaXySyZRZoUOSxkmzc0mbl9ZI15HIjhPYAyynxKqNSm6uPO59\noqDykFjB0JFwlBucWO2rOYvIdqVUIB+K9QBK1s5Xb4S4TMqavHCQvbxFu3pY\nyw3Gxn2McLQzR04flbiefBvWBYSDBVjOA2Cid+erlgTnEOcVkx9c0/znwwOi\nEEVQudEFyrJkIAjQLgG2+UtkErFhtHOilwnTrmMRD4kwShn2foW9m7f4iJfd\nc7aZe+kyAtAsTFjfnYORvbxUfqR1/BkDrnb/+EM5OZ0WbBgBL6CqCvyKf8/H\n3WNl\r\n=jcl+\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.66_1578519310320_0.8110738585715978"},"_hasShrinkwrap":false},"2.3.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"6ffd0377a9cd59d2d1a014f643aeeaaf544b47f2","_id":"gatsby-plugin-sharp@2.3.12","_nodeVersion":"12.10.0","_npmVersion":"lerna/3.19.0/node@v12.10.0+x64 (darwin)","dist":{"integrity":"sha512-wLzdeqzrxWSHcOJzDDLM985TUeHT3GzSSx1qdakaEErJRqhDFWR/O3JWIJmfS3edhVzyOnYyUmkQ0+or0vZ4sw==","shasum":"4a56e3acf811db7f3b88332a10f2232fe839eb04","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.12.tgz","fileCount":16,"unpackedSize":94718,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFu2ZCRA9TVsSAnZWagAACE4QAJM/Tu/h+Gm49LqMv3Pq\n4WX2jZF4wqh9RLjPNcr+fh/hXB/mtGOp6iJ0EEWIBEDF/j3TRIb+3Z+2UadI\nPGiQwflnOKcu3uBG2o52lPVaCTSCf42kvsfj45CyIqJd7lyt15UgrcV7Qrsv\nBd0vH9nuMjx2Qdhv5kURK6I9McqxbGYvB90tnkBiP/paeSA9SmRR9O1mGjZY\nJHcGFdcgg+1RwV3rTXK+ajoNiKCIfQ56bwH/wCYqTFHP8Fpk9+ZS1pPnCpPr\nc5l2CNDmjZdDCJa/uT/pVGEMHCvM4ptrUBBZC5pTfOfh8VFG1ZV77Jlw+fs+\nD5/f4asReqqc5JY1zKVKr/WEGj9SqUF1qhzz3Y3oPLcIZI9ZYRia6PVKX4O9\nMUXP6TamZREQQLY76e3xihlaWk4C0YgPaHnmxW+jyYh/1e0S1LNhbPMv+H3O\nzacHOgorT5O0BqFQp7OeU91LTP2LZLMUQEXDwg3i1AReS60nLDHbwKfk/a+V\n+GId7Sk+qi7RZRoi1DwMtgwZ45HP3alfYwKZ1uPbfSNmNvzY1KL4XFudkjML\nXkx5DLYoBcZoMVixL1S10PG9AHJfnPlrK6A0vmEV8XyCtUdiozbVD1+sJh7N\nTjyH1/6ZMDm4UlTU3QbN2O9fcQuGuRg4+uV0UC2c3+VX7DimQ7zk8EP8W+rv\nmNo9\r\n=SegL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.12_1578560921146_0.5576539255479143"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.67":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.67","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"36849b59f97d3989ddd64e1e02cc3ddd83c6943e","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.67","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-T5WcQmpC4FOMP3BeLZWvzPMP9N6ao+hag1xcOoWbHpmH+JGQGFyxb4CybNobf79miSOnAsKtlLX09i6GQjAXVQ==","shasum":"f2cd9970f8dd6dde66336ac57eeb59817ba84de6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.67.tgz","fileCount":17,"unpackedSize":96163,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeFw0CCRA9TVsSAnZWagAAcBMP/1kEvJp4khRR2TqXxA93\ntCv81TMnt3HND6f66g//w/3RnK07UljGR/jZDi3IjTOHfuYDFY8tY2l9DiM3\nFzQEijG5GLTL/UqSyuod/XJsETb7jO7iezUOfgryAZPSmR6RVcooQVF7uIpK\nuxSAtRU96F3Vua5gPXF2vyGIT+CgJjMfYKGMr1zhFvRKF6uAoEhUYxoX7goQ\ngUi8Y1MFr3Wwa/9NlpaljwEVg3Ma64jguuVvJtiIbLZmrIEg0eLmxy2p5TZS\nt1/kSEYdKK/086F0P3FKjYE1K4wBB5dxwvMAPROiw8Jae6m986oMGmQjL0ls\nrY3fHmxX0cvrj1Jt9AJZaINh0P5m33aXzXbLqeZNGRe1iuQMHqBZ98H+1tqw\nSE3qK7IkO0RJum7yneFCs1LFMY5Mm2SHYTxZvOP+W1ooEV5rQ/8SjuFi06Lp\nlr/m594iH06lMOCWdBew+Cr5je6M+0LM+dytwk0EOr4nAife+UNfJlpyKzMJ\n8Y2l2eyozKTA61cobRgpRXWDWfaXTR/0LwyNcRVSlruSlwbxwBOAMiy0/kQp\nHQ46t70oO/1r/Ayf7MU9l5+Ew6uowte2dfGDrRJLxNTkKRAmB504vahUWneZ\npeA2yCvt/pYA36xaSw7dFVejFlGKp3MtFiZdREGDM2Ziw/QxvuQRpTEB4J96\nS8hF\r\n=yHVe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.67_1578568961599_0.45577757523254103"},"_hasShrinkwrap":false},"2.3.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"4b6e778f75f531dba4f7dbe6c0af7daec1deac2a","_id":"gatsby-plugin-sharp@2.3.13","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-4R6H7qGRFjyYIv5nqKXKh3yXNg0iK5XZXRi1yDP0IWsytKDo5CKgmX9XWrvoRSnlYj5TWOsv32nfeCbgUPK0Lw==","shasum":"664d24f148a59552ebcd2fa92bfdab0b8dc4e9d9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.13.tgz","fileCount":16,"unpackedSize":94905,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeF4Q8CRA9TVsSAnZWagAAKVwQAIfCd2ieve9C5ZMTLOFL\nw+uzIghq9Uy/plXjda4r86ftQbTRp//oIo58ISzlkV1TNhn56zFplMqgmpMP\n1JRiDAkUq+qIi5fktzJjJgyYsNdN7wZUbheRxDF6Ib4XmU4WdVZGOFd/by65\nwx8h82XmoW14H5B0TZcUonVdvUrUMgm04/8TMDLvwUg9Ze5r40qtPKq4ST/m\nS0n6OqOg1bcI0hz72FyC5GQ9qK9Cb1VNVz1UEcTwasqmRI+lvI5mpNDn4QB4\nJUbrn3TsdmQ2cPIEyekUT/2nWjgqgPcpkVMwcUgaqQfwwbp8xgZS7ZpHhP8O\n0kaRfvaxcS6EnHUdURr1qd7IMnmAjcGpmQ7ohh0c62CWhUipay2tBpABaDnn\nMl8dneASao7mUMb3czygrRXf6Jm0ZAdGcg2WsWUgx5Fcri0Rcl/nOOMF3wN0\nsTKzcSHWYRsGEnT0jNebGPP4hdN/OwGJVCUPJj9euGwR3R6EiUiLVupPY2jC\n5xTUBSecqTT22UvCnDC1rqtJEk7GkMgZF2C2vsle1mKeaXECz3/g1obW19Ey\nsUFJwILGsGl8lSBK10lRcwswKd/h75nzQQMYbO0cdJD5Dbr+Po1g3JqyrO4j\n8YD/vQOPP39bLXDGb1Js0gbQ53LkR4HE+azMyk1YWi2nBto9U5UFAQxinaU7\nprsJ\r\n=OvnV\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"tylerbarnes","email":"tyler@known.design"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.13_1578599483521_0.9335297839919439"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.68":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.68","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"3ad9811c988510bf1e638cdb0aae67dffdd56ceb","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.68","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-dIJR6FEOBm+WN/wBmsSNyQ02lsiAbI2PHOyhDjkKt1cImqHVjAfeqb1rXR5FieM9l8paKjv1cKpbjSqYRB4SdQ==","shasum":"8057132ce7c0c5ff99ab82bf1b03b7efff98807a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.68.tgz","fileCount":16,"unpackedSize":95526,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeGFpzCRA9TVsSAnZWagAAvoAQAJRtdU+EelY/irvu6VH5\nZDbodz5+lnih/Z1rsU89pARcgzm7zoA0GRBZJIoEtJQv8KRG5wKJBpc6Wvur\nTK5JZB7ZfdfH/jpU/faugPuVOrXrj+az0FmuIB1BOiYY6TLUGoXT87s9oZ6X\nuxQ/GkduPkass9cRNujouSTI+PU96766ZV8jpV8NKPrFKjFGOsf1BlChkohD\nx2o8kMdkmAwssv9lflY8dYZccqN6uKjaEa3Nw2ViSrn19aLXfQ4TF9e6idLr\nlSoMfIgR+SpBuaznfCtQbu2tZeOip88AfCCCNO+I9gFxCAe6gxj8xPhV4CH8\nEs9t3nTr1shdt9y6ma8Nchnqva0iuRzqhIHh28YTgfrE9FdGH+yfHnzaqrhr\nEhclcme+ieg4MpzIjxn84X0PEtC5M3j77vlJqz/QbYhgAYSy63O5PCbKME7J\nY9UWgddvVegMV0LmyWLJIZ+78ezKDFtGmiA7r5OZROKPvo+dZL8v0xay3/m5\nkPBSOsLCFWwKOgvhBOr2UdcBfxipzYICXWYd0Y8HJb+tsrfEPzpnDd5iBbZA\ni8EB8QOlz4z9IMDJQV8UoPiESqag9nXdtrA8C68YRnXBWPkbvJfQDLLHr23j\nIfEH/3PLW80HpzfuHAJkIzSy0Mae7KiT/8JdiZKpqaYn07rV7u+TuY1nPeQv\nGMgL\r\n=QSP6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.68_1578654322864_0.7431547218525398"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.70":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.70","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"fcce5b6084c37a7c91dd982869f9e65d47a97222","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.70","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-DftrThMyT6os4x+VKT5kvmSYSjJnruU5l2LNg9GXQ7cnxZvF0TUSex4eobfDdk0w+R0VaF4El1homBm1hejy0A==","shasum":"3fdcac5677a91c6fff6e58a13089cb4df87355d2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.70.tgz","fileCount":18,"unpackedSize":97652,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeHfVlCRA9TVsSAnZWagAAOm4P+gJuXJ7F0jxxsxmh35jQ\nBU+Xmi6DtDQlf+nWj+WOkzk5zVJDEbzM5Fr8FLXogFbLvAhK0wrljRwYczRN\nOEMYcvOf7myeSfYLXg/OrKSc+H7Od77AJ9HUsQl6gw8v3ujl9Cx3Y3pP1pCR\noBgs6lrpz58RQSih1S5GGgU3HZLEOwN1k1B/Iq6VxpxI9XqE+2nHyQynP8eg\nY9Hz/NNrF+UIwK/6o94U1uCJ0jv+pDw0b/TI1HlQ4Z/BagUY26IbDkEw0B9g\nSFmPbRfL8AMagBaVsMSfYZkJPnyW6DXHGjU0OgsmQZotJKjpKfN0gp+5uyST\n8JjB158lH+u0xaEHALa0ZhXMU8uheXpQt2ifhVoF3y+YKthZQ5nw01rldPzV\nIdLEmebhv5gh59zjrcrKlv3kyb6HWFz3qAPGK2Z9rqI77/V0BSL9O58RrPus\nyCgVi6b5h8KlaS4s9gl9UWjKug98Ny50FtFdAOVa2+PLr07x53B3sV1OpOXe\noP+KcOlKbWAaxvOVkcsSnXVmCwp7cpwO0HXdcH8+HXEPget+DN/EnVcp8hlE\npwW7SAd4sHNQeEjajUVyn4cGosv+RdOOqxuAQUw0s9dLiaQsegGrlC4uLIp0\nHeoD6ndAvp3AZyAHSQ29jiWf+Cc9/EfcNTsUQlPnXqME30F3t5U1mFFu7RnB\nPZ0N\r\n=mtEh\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.70_1579021668934_0.3588083322371374"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.71":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.71","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"440c9f7a44ec0d54b9869a1f57a9a5dc708f78e7","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.71","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-vqLhDwWPpkAA0qw3KUdgl9UVnyIrE69Mui4QNPDswm1PplomvY7jMFPhzhQvZ4CVZ0N3swJhFKwBlG5vNcLNoQ==","shasum":"8d48064555a484ca9d568187d7bdf969e720ff2f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.71.tgz","fileCount":18,"unpackedSize":97435,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIHloCRA9TVsSAnZWagAA7zIP/R1MptekGNeW2gsqmpgb\nJF/YA+V7ocLr5El0qrn4x1evxWEcnEbd1p8woYmK1Wu5KWgfUigt1nbUfFBY\nOahboN9lJnbPK1Vb3BcCx9BnatyaSUcyng9MmaoAITYHPh/nZNGIZX+ohxOU\nOVhbODoJoceX1ZhnAkLQDEcbAXjO+iiCugD9y1VP4gtXmjjUWZOjX1IDMdFq\nkCX41k/NaP5D8RvzYNBsXCaSrJ0c4xUWX9K+i6g5asmJ6F4ir/ZHYYbCTgsZ\n+PrRE2bKyR97+D11OS7klCI2lH8qYs0NPQ8Mct0p09bWOZeR7vZoyC4h+jND\nJ+H23B9JecioSkxXMqRBLaAmaRnvbyzZ4I7lgf7jAJ451ieh4KmUQrUmMpTW\n19bEMqGZr9W+aZ3Z33QMHePTCd/tnj1LWrc/jp4OO0xETwBw70nvxGoqFN5B\ncvyEpiY68gK5gQEHxTkWmGa4l0HuE9YZdq+nHe5qQWjZDev9lvnn2I9VDbNe\nDurCbrcrxFTmDTHoaMqQWH2m9eO9f3FwTeb9C2leT7iDLIHFp3LTtRshArdU\nZlwvbrzIfoqFIapuBPxA7yg195hSsEUe6PgIZsour/6s1pOh1L4KXzGEOZrw\n4pcUNs7lEARu0AOm1CAWthIIUChznvQ/qLnIteOLs9AdZvvOnfDsXlwT/s5m\nvxmb\r\n=BGIa\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.71_1579186535741_0.8110635003585762"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.73":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.73","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"6342f4db3d998a98a4526f11bdecf74e4b18be1e","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.73","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-pt9P/RhkMLdcg44jSbWRpxTlMCCVuETTIpgMjHp1cXiYBdyneBuBN6GpHdaTQa+8SA9N4yC0ez/p38tHMKswWA==","shasum":"0f472c47c8aff0a86f936f2f472e6173191d211f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.73.tgz","fileCount":18,"unpackedSize":97512,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeIWW9CRA9TVsSAnZWagAAwdsP/jQn3on0eVcrV4hbc9H0\nwPh/GVMyXYe84lSL0XP/TM2/Rp59KNUM0LLCF6vaBYHIzyZcXB9nQ/F/D2Y0\n8VYoE33G8Bj0kx2u+jlojyr50B3FGo5M7La90ptRo+BfCf/YAyqgADX3Nm6j\n6biPDsJscwHZXFy774nvT0heSA59QKxHZ1F5inmk5A0qGQY/7yK7UDjPapTn\n671m4lsx+sgQGE1KX71NqOYvUa93DcrpZ9irkq2Amdj1UJe+fLouHrmELPHt\nQSJtVIlC6wN198feEKchmn1hp+Rb5Vdj/U1tTJsrCs+1AFuEs+AT5aBcVD2Q\nB+gsovS77ixS+zBRqio1wkvTu4TTVmjsivV1acM6drcPjr/NwAwvpj7S4yR4\nGg1mDSu0c7BffXFGNt884AY8wsQ1MpnWCrVwWz0e3vPWxWDxxCJOgFw6qCYy\niDLQO71lzXYD01ydYoiLypZCzs02F1za0W5NQzmqOnX/SsN0ulZD8E2qLeiw\n0jqacRqozK1WfnoMf2HcP4XNvZHhkiez16Z/+l8T7dqS2lagXXA3ncOuF09t\nPBerunEUdR1OF2eTEPVwfsGL050/AmbqyPaVyJiBK87z87SRlbYgbCPbTWI6\n/QSFzSARH1YEVcLSVhYlT1YSmIjOGe5tLkrko07Nr9o1od39Jlf4DRpKiAX3\nxAXT\r\n=1gZo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.73_1579247036565_0.21690211457230757"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.74":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.74","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"7a2a1639e0248232b0f074720fdb591260f1acab","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.74","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-GSbCWvkaTku0gz8QnqjdtOEIUrBXh/9GrSd5GDWI0W9FH9n7ACB81ERIfAXxHHOkg2Q5iScVCr+ENQWLNnX7Tw==","shasum":"7102481cee13cca0af920b8a7d636e3fb51b9ee1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.74.tgz","fileCount":18,"unpackedSize":98306,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJCEcCRA9TVsSAnZWagAAh9QP/35UPSqOd3GS5rwb5H0W\ncS90nnsfVeg6Zx7yShr0DmInnoXx+EAAGyA3fO8XoJ7UC1+juBIB8Ko7f1hv\n4mi5bvg5fEBNoO8Ki5R7csChJFxNjDocVJ53yt6FSsDfZKKhrvnSCExW3hQG\nT5FHklrXStcCDMkKvZ0m7aMzt6P/GobkuEOx6mEF0kJgwdZkoBbkPnY+Mf67\nHlM4On2sWshhqg5HiWCNmAb1QZ+O33LD2SGoOljxALsII9pgD5WfPhGdV7Dx\ngOGVf7QVC3V0zDjqwg3BoR3qMKZzPm4+S08jwYmlnQYDAeTl4G4Q4OLYBrjJ\n01P41sBC/NKQJ/Af3p3Sb0zkM7pSMjcx71w9soHlPGfHws/LtbP0T5DFUvlX\ni4IEiq9k5UbbTkDaYIeTCSlrkwgkQARcUA/AwPJVnEsZXo2oTEiSqLODUXK/\nLLS4QJo3czUTQNzwwFuP0gmeEiayoE7bcY9b+L1F4IriNwv1WiRmFGWNlgUL\nctOLVsBSd+aKdTv5ralgUBb9dHas6I6LV6Mt4LZrtJXR8r2TCEgH+PzbZtOC\nSKqlWfCE8Nca5jCYUgVrAyAXUi0qCNuGfsS7453xKPeSjOETwKhKny3XBFmO\nViqX1bahfU5kt1nQXz+FwOp8RS7rGVGihR966heaer1u6Z1+Dbw0Kle+nodI\nlphA\r\n=D14K\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.74_1579426075949_0.9475663087093622"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.78":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.78","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"b8213715805fdc40826d9b39208f579344286c2d","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.78","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-Cju2hjYXR9HKJJE4uXADOQRyFe6iFZ7dP+VaTPLJyN2G49Bs8+ORmV6AScbLDTgcTW0lk60Cpv+eS3pUjFEwqw==","shasum":"1a62230ed1a0952b092a1fda316fdf871f52f367","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.78.tgz","fileCount":18,"unpackedSize":99254,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJcdBCRA9TVsSAnZWagAABWkP/A4e2crISvfuL19VS5GL\nXNJ/zUHCTWbg4lFuwwDXHwIGPs532tXs1yKB3rvYfzcIVNfnCY/QwhWJPeDz\nWT703bVWufxoDKoOoMPFTVM158Bk4Q0YpenilpJ0eJIP8b0+9TI9Q2Ldppw0\n5kCqXruiwF1SlawqEAVgNX3LHSiZdmtLmPKPSmaXub5XC8Cd/3sjwHY/3V9z\nFVAh545aRP0x1VZN3DsfnJ9g/tGwMJ8yPhouAAxNSmHmtXpmIRbAi07KWQLO\nMVfe+MzWGEa+yz+FiL3ZZkiYYr/YCOi/FV5ymH7Nn7DVrv6IdCf3GwFe0ur0\nFugivE3aBHDehO/P8molCom14TTw7s87DXgaz7iMdHCxYmq7v4k3/ttyzBCV\noVvECuoQ0JbukTRQtP4083U9vJNn/Omb3+djyWtJvddVSWGQUOyeoMZ/Ac71\njADTXBBu3fEniG6HWNf4NbtWezcridTFBHQoiYLaHA+VnXr/vf3gn4+m4/oH\n/tp41DOk0agyb9hkkV2hIRMAJAeNSSzu2/39p05k/PmmYA3hYGaW5LBWJgl4\ntGhm9uku6WJP82BgtxxzMlZsuE52jt+b5tgOtcFO+9QqSGILpKTnN9LZSOIR\nyYYPV8nu4bdzburmTqVFmg+Q9dRpiNdq/UP3p40M52yxabWTzjXELR1xoVJg\nRbZv\r\n=BvdS\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.78_1579534144699_0.0878509920379622"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.81":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.81","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"e6419d14b40acf1d21aa96492e5679e10423d4ec","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.81","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-QjB98K/y9gnoxOKHPnxx5ReiIryvosr4SPAuPICkvE9fchHxlV9aAWAjGk7M3U/oGDBfO7pd1CjvJu0XOmVv7Q==","shasum":"fc0219720682c518ffa1d7086f6ca771aecbe8e8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.81.tgz","fileCount":18,"unpackedSize":99982,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJhEoCRA9TVsSAnZWagAAX0QP/36scc+sPs7qRUVQWWpZ\nzYMQMnRIrYsdrnNRfBQn/frT7jKw2BxDDATodtactIAJh0+qmSKtAyAR2ZTN\nOJE7kWZO1jFkkRuyy2UOSc1Ki+hezZWaYsdAXaZVdy4UG8wYQ3z3y+50oZ9b\n3hJHPzcYc+lJOdA2MHcnclFRvMGg+6FH1zZMDB+uFYHQZMJnL9Z7WXf2hSGD\nyQXxUwp37w8nmTz5oiAGOSqfAc291bOZ5V/5FZTlEmGYh+c2sRdppsJIyxyY\nrTNovREag/nQ7vfRAPdXcS3NGIJCyjkvwr/w+08/flzVtEKcfMiYKImGLgwE\nn3s9noHrq+oOrCjdxMX1LlrreVxXxZaDDgwLmqgC/XqUZ4Xh38CZqJCsxUOI\n/GRHrcK3KOp6McHvilWpfdDy0w8GI9d5dTBg15e2TElaqKBYV4rqlfzQbsAi\nmkH4Dk8kkGPYssAfUJA/KLslWs7mY1DXAljaxegf8C2tTkq9Y6Bwhn/DbXgi\nTM1Hwvyy88/aoLVs0koH16bxnrOmh3yVBF0JAlwoWdMLA8TyHMpjDOFgL/QU\nyjUBFfb6pK/aQKxu5J78slMrOBUx6kpAZ5GG0RrfDoMElSKuMlThBuMBdx//\nWYYkB2uDjDa1jdnvJ+bwW3R89eWFayBP1Tno/UHCgZW8tavL7x7UOU4CpU3y\nsfWB\r\n=1rjo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.81_1579553064429_0.2443363533717935"},"_hasShrinkwrap":false},"2.3.11-sharp-jobs-v2.82":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.11-sharp-jobs-v2.82","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.25","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.14","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"efcd1406ec08ada85cd3fc28c4be83c7a39c9bef","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```javascript\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```javascript\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```javascript\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.11-sharp-jobs-v2.82","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-OJyy7+JQXDzmtt9hflWYzVAl958Q5PbwXAYWXNtjew9FWqETUuj35wsro0pXQoL/f70OtlUVFHY7zp+4zNUjJg==","shasum":"b97c6d775f0524e5103767bb585821fbc0b80688","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.11-sharp-jobs-v2.82.tgz","fileCount":18,"unpackedSize":99944,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJhJRCRA9TVsSAnZWagAA47UQAJnTsZO3ogAxDgeWV1uR\n61ML/NtW0aSkVPsURqP9gThiZpT7z4X9xhB0a4N+NfcnqVXaVMd3rutzVgW+\n7OXy1wi+Z8XBjgczG1cLrKc1ys+jiO57re9l/ap4IrO4LbHhTGrvXqBi6FOj\nHDYu/3Cx52d1ZaJW8e7/nLsppvcPpXYMtIn8eTx4PyPsBfZd5IQIHwneqrop\n0qQERmakVAcOBfUJ2zx/6qdzix5Q3Y6Z3IioWIbPYP1CmITmuMy4w8FCxApZ\nmb4meQ6uzKRxSbtpikkYBB7zJR16dmvkYgVK8jfGulDSUqGiyCBdR4rQZy1i\nv1Xf4TOZ2MdM5YffikFr/RubvPmReB0f6OdhMIbNvTpFzYb/dn6AL2dP/AuD\nxUQfDaFzQYdaJuRMxLwoQemSgmJHpG75BCoqPlNHJpNJAC7iei8Q4zJpKJND\na3t8ugGS33GiPgQn+8/36zGp0hqIRZBCEz5AHsGiafJ+SR8MwpHZZAWYV209\nHmJw4U8E6IYCuYpQqVuybRgFlYg//vRa+/tNT1f5O7eNG/bJ5IvE65eIw9JI\nGgUjI+Tk5WHyNellNtGJy1xDhAa1HJAsETDJYVrBL86cQd4p1wm2+qV2t29l\nOOQ7tTbtotOQkC0rTq1siUGX8+1PfGfmJhej2DjdHN+Gmuj0gxBxWRicwv85\nk0Sx\r\n=2tl9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.11-sharp-jobs-v2.82_1579553360780_0.03321206718778802"},"_hasShrinkwrap":false},"2.4.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"616b95b51186b6e0e7e4d24926aed4f6cc70e5f3","_id":"gatsby-plugin-sharp@2.4.0","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-PmifXRuy0R16uoWPIMvjHgoPdkG30uUS9r+XYAp+WW4Q7oWy1q0R2tia3rcdwvGeOsxX98W95jy8QTqhQ3BDFQ==","shasum":"9df4c2646a34fb7ea4ff5428f6662ef3c0a80cde","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.0.tgz","fileCount":17,"unpackedSize":99655,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJqyzCRA9TVsSAnZWagAAWjEP/2yNlpoevb7er7iWy8Ld\n+dQRvc2K8h4d2zmLzzANtmwcGx5+/BKho59ygJILte/TsUzVRngZMavjfkqg\n31Ei3phHuCXpCRWySZEvOnDX76X2kTEqDDqnp04NjBlN9d1d8mkFbCyDelcC\nX9lyObZ6DuyOJ4DGpBojJt9dEpRZm8iiY0ivJspl4sNjIYfevYK3vGbmEbav\nyN/WDTxV1A3wJ9DJQ6oYMjbxY1AqHXcKSl5P+NSK+5acQOIZ5Qjo1O7tkiPo\n5OKTds0FIRlMWF3E/+iR1wXcfP2Y8wBbbPEZLFt049F0+37O1ZIYBl6mdxL0\n69CZeTpLIrsEHeDrc7uC8Iqbdf15Z3i+SxU6zMoGYUdpo8xzYEjubl7oCAee\ndyOY0yycykNkOne+s786oimUoZXfXBPnmpY6YOYPBruwnjO7B+3q11U4WzOU\n+Trm8YUKK05QgxpeSdIA6gTFv65PaHg3DpFwH9OkbH/eG1bIEUEUrzuHIzz8\nnW5tbE4V+yIa+xhBM6yTbM0gw2ASsdtMBENSinTizaDdZsVumio2CFkGhQ3S\nrcjA4spW7KhQpArVkHlN0icrLWPNXNJQDldmuaMnq2bf7vkaDxXHfxTnn0Vc\n7XXGrzjdXd5b95rQ0d+hgu2sZndvyz6e//jVqHVl+V2ivRYlR9kRCPXTr5jG\noTz7\r\n=IqYM\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.0_1579592882530_0.8050749656693961"},"_hasShrinkwrap":false},"2.4.1-sharp-cloud.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.1-sharp-cloud.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"3a291061f6ff852535515e432807259e0c661e54","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.4.1-sharp-cloud.0","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-rvDbCKkp6hF/baHUaGi9hIKyAGiNW+pDmAbgmauOICbzND1GUlz/scrZbl/hXIBGNBw5lH/ZSN3ViwugREs23Q==","shasum":"326e57c2844519cdbfe8f8662e39ca4b7a126ef7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.1-sharp-cloud.0.tgz","fileCount":18,"unpackedSize":100804,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeJ3gUCRA9TVsSAnZWagAAfAEP/1Km4x9IiryaoxCHX4/A\n3HFrson1wx+2dR9IHH4VPzMYOFodd4n9NyK2p7IxOuYOpNo+9yDXw3ZE+zcU\nsoPM7H6bgbcSWgPpWbN5o72QqrNbD9xkedrPxuTCYxmn3yz0XBcDYsUjttHR\nPeeJnx5KgI3CGYFdF0AZddJohZUE5rjAvtibDK82AVKGnh1YOvlus8dFn6Uq\nF6YCDVifD9rO4FCWv8PO3cDMspXkWbIY04ojYxHIsx6OoSsM1ISZeRFjroqx\n1aJY4CI3L+gLVZysDDfBaX11J+CeiA2R9YHqlRkSGSCnj340r20tBvet3Mpc\nrP/UrCu1fzCShsIDaCgBoYb4PX4VqNTguY2FU1nUqOXubvV5zlm7WM6ZsziA\nmrQvzmBlmAWFQH+MEAClgxyqyBuvB5Tz1Z2i0OIOqUb9w413LPK17eDELd81\nsCREpRGGP/zO53i6PPZ56s+3bw9LpHrpXDD5FLxZICFfv6UQ0GjjR+IpEMbK\nSbwm3Wts2OToZVGQT/IR1gqKZO/IVeJn2Hhycar3JV8oqgy0rSUydxYMiSi1\nZZ3iH07cldftva3oe9N3uxYFbsEOppuUR/OYsfKKAI5u12sLONFfzE8KTbjn\nk48Fou0CWFHmScUknVeXoFxFWDe+CI/S7TAWFzVQXn7zsQa2SMyv6/UE0sMn\nWDgU\r\n=ZPU3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.1-sharp-cloud.0_1579644948011_0.3820820265155507"},"_hasShrinkwrap":false},"2.4.1-progress-fix.27":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.1-progress-fix.27","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"c58e147df1147335ecad1bcf76e0b32359226e7c","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.4.1-progress-fix.27","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-HZSYEuH2N1sMUXbRtcLm4X6okDzyKDra+zU/7rYb4C//E1eq+Y2iQWQO/pjtIGV49FmFXuoAMTTjDqi8A2xe0A==","shasum":"14c1bd410be6584449f7fc017507b6cb5c079a9d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.1-progress-fix.27.tgz","fileCount":18,"unpackedSize":103291,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeKx8FCRA9TVsSAnZWagAAi3IP/26I/FFl5u2pJixHYY2k\nOVy2v88S+lB3VbnzP3I9li0XxM9okiCRlNQD9EZ4iIhKPX4N+oiPPqOPI6VA\njbUMCp68Kbh7iDqDHoKzh/Vki8Bj/dhVYH4FI0GyRvfaTmvjoCOwtdx/N4NS\n4FQtJAnLtfQjlfSaqBvuUxX3KtnZIp9i4+zhDDdY1sf9hC0dBh91yXpqqtXW\nIi1gxnqOUTOl2OpmbxC8AbyOy5wdw6g48/usKfzZTs+2jlwxAupKr1yzECll\nwyoMM6UTnDhvdZRhcIHnOZJ71OzFxww1TfaoSd4KDeuMqVDPc53SPo+fkEMc\nAkIsy9gGPwwF/SYU/iaaEEtN7YytEaT0DE8XMyS8zpTPJo/48KWZzcN9gfOr\nIwhb0sN/hC+MxDwWKLS6XA6AjzkBdvuTEl1TjDqWgTJ8dIaFcIGXRojPmkqT\nM96BMkeBuEKY4ZsZSMludbErML8Xkp8VjRAmjqEUJm5UmemTqiiUUwi4QGxe\nWrC0uE6BbWGMUwXxxtBp5XKNjcuPByxBehLM7UiZfXouvtjLrZz46tuSkoAL\nIYECOl7OurhiLrjLT9C21pzoxzI+IjEMmG8t5sH/oTyoyUqSFLVBo+B8eAhR\nFDtV3Oc3CoYxVsQy022BBmvTIfRd/Q9eFzuJRyUcSrxI2g5EVBCBCURdtD0q\nK+mk\r\n=LOa4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.1-progress-fix.27_1579884292608_0.7882623018814894"},"_hasShrinkwrap":false},"2.4.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"092dc54edc806f6285163f11dab87ee05d99bce9","_id":"gatsby-plugin-sharp@2.4.1","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (win32)","dist":{"integrity":"sha512-lpiXEvBxWAtydtAUESFtMVFQQ77l8xXZiPomOP838hTttOlntfIwnP5gmMCifV4HRM4xYI5t/b0+CQ59I+1LgQ==","shasum":"ee54d18522bc39a265d16f2a04975e53895eaae6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.1.tgz","fileCount":17,"unpackedSize":102217,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLs1HCRA9TVsSAnZWagAAVFkQAJEpy3IHSAn3dDKfFYOe\nXDxbk4rKkGZK/SEvFIeFfXyFIKsSvhq4HsCRBPcYpB1loh296yi201AZ1Tcw\nRCeqpF2g6lEILgrk9ewgltzTUj4bzafZdLYDnx0RoncgDA4iFDtzO/qGtOHJ\nqEaxqKemqMDujKn+uRz6JR8bYr1tjcU4ivOIhNv7/qVu2tV1MQ5AucacVg6C\n1B7PdcExivyAVmAwmOshQIQ9YFkNIBzQSbMSWGIGBX10vLZMmG+NZI/k/J+w\n8lL9hNX1rectQXREkv8++U6uBEoDMf744MNEMgZpVTPmfIsUkvaZetrcj9Q0\no7uYhZCP+sgsZqdBL2dt/2RfAeucj67DVDmWUkHHeOFGSU6NczsYUMoh1hUl\nfI6LydtHUdP+rdrOinnWWt1k1V1SzaIpmjAe6AbF+gFprZA6KOkWl2pu77SB\nkDOBFQH+/kMsa48cfM6zfdzTkKpWw3SQV9x4krC9m04nFz/BFvbfezYG6Pn1\nw0q5PcAroYgtw8Aje3/gZimykxNGcKEBiz9IJFNOxMNQAugAaZOLPj1NOohx\ns2oH7HK7El9DoYP4wtrsYTy3AKKtabMs7EpdgHA4uvmVFgVxMEye92Qo4RiO\n5ATdkr+o9yGBqzMP/R0URMN0D4biAdaEyT1SDzKJ0dpdxKVgM8mtjO4Ffxkv\nNQw7\r\n=K7P8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.1_1580125511218_0.9696916480234381"},"_hasShrinkwrap":false},"2.4.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"d0dfa960ff353f1fd174c0e7747924f3b2ec7992","_id":"gatsby-plugin-sharp@2.4.2","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-30bl2nq0E36TfstcMCx9Zuo1FcRG3VB7dIhbNi6hPdONAvLv08K/SEvERkYVKPPQ7coh2L4DpStz+M/0auT+Vg==","shasum":"30f010fcc3559282eaa24e4c9cb1644d491efb9b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.2.tgz","fileCount":17,"unpackedSize":102613,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLs7rCRA9TVsSAnZWagAAqowP/1Qy8kS81NU1c8r56vvu\n+4aYB3dTxAIb5406WLQwaqeQ98seRERE4GL6rLJduB/4DZt0fGvCdqAQGkfH\npqqUMgCQYOnBekz8ZV8fedKGi+sSSJBTKhqP7NmM8eUSuQSvqp/CXVFd37/b\nkiu6On1R84Ybb74dqxPmB5BnqOAvseqtfyP02TeNNUKvfO68wYdnPBxAY0ok\nGBTS0jgIP2rGH1w5PxTzyoIOI6RIjHFw3ftVLggBXJoSgNdt8g3kWBFK1jX5\nuVST0JiBqdTFJhWZI9lGc2x7Qc0V75rdsfj1aZ9D5Vp2drIO7/zvqhZ1gVo0\nZXC68XRn9QDzBFUGdkf16qhWQJJezbvb0s8WJoA56j0gz5r+cl2/RhHTBErU\n2pZJHvMWOvPwk3K+TDGMVVzVixrbGwnlKESkIhcLTpcBjAlrpemGIYLfzO3h\n49bcS+XjNTi4AP4oWVbjwH3lo7Q3bfUduq0QoaMhO4otEfR4Vg15tZzrePho\n4W/oyd/qNVp6V8OhslQiaPIdSOEVE9/4jg+WacUmMxDlbgqQB1Iz5Biby4vC\nTLtV9cTzsui+xEm3aj2+H0yOY9sccKRQ0Y88r5BsRRIp44j2r0w+6ghgvy8V\nHthkbjLjsg5FA/zgWtAPUFmpt+mSjP5kR1+w2DcpBPKa6teeOnMmUAag10FA\nDqak\r\n=g72z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.2_1580125930399_0.6045264729874675"},"_hasShrinkwrap":false},"2.4.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.26","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"b42a3e1bd1113d17d71a7817d4b68cf30c38b1e9","_id":"gatsby-plugin-sharp@2.4.3","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-d7nxPHbswrpCccUf0HtzWf9dvAqmcVXLQllqgvfeoQ/nOetFwFAqT14aQaVXV+nOcbzGQIMEA/ShTNnrpF8Hag==","shasum":"b5c72a8e5eeeaedd13f49e6056ab6275a93882fc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.3.tgz","fileCount":17,"unpackedSize":103413,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeLwbcCRA9TVsSAnZWagAArVcQAKJYpU6U32YTa1+9oYCY\nGRrC6agI2M2YvpE8769RaeFHj40WNKo+NSDH2uSQidIWPxLJOuoOeKWB4maS\nkd22QCVq3GK84HiaXQ1FEbE9ujW+Est9vlbzZFfc6hfMfsOrNd3qblHmGybS\n6LOJb/i9Q2dFXljhlWV26s69JqmEJ2seahPulyqT8K1lCWTCDJRgyaiL7XqZ\n8f6/MF0hG3jG9Cu9SQ9wHk3XL72IUMKyiBxIj98Dcz2f7uhvmc9doooZ562V\nSA6yEI5rsav0wNOPICTkNfAl8pOOCzx62glaUv333p+XXFYoGBl+5RprVSRg\nHf4IdKhnpisZ0qUa7Z1kLul6FP1vc8KnikIgYZP9jmcCO6u8MbNPchajKM4I\nHEx7XN+pBb10hcuahaiqzSj5n1vSgT27eOVbI0WhKq0hz+J9GKkpebnGiiWg\njmcomXRdULJr/X8dem83S+qnsRfJC27s9paWRq7dlwGKL0MZX9O/mD/O5zbs\nhK0l7EJg9TNG1ZB1grfAQtgsyyjX3kGra5yOCs3o9lDPscdlsQ+wGXKrwzNh\nXl4ez+EuFywXvC1eChl0Fl4iCA3rWVrHhjrwwsRVSStWoLhQOMNc/iWh9OqI\nFOjFmbNz1RhpHsM8dz1DgyJsqCu+8Z7gxD8Usdo1G+BK/ZPbBAczRtJTAIBU\nLjnD\r\n=fOPP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.3_1580140252298_0.7772686927487691"},"_hasShrinkwrap":false},"2.3.14-berry-mdx.56":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.3.14-berry-mdx.56","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.0.27-berry-mdx.56+ee68b8495","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","p-defer":"^3.0.0","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"ee68b8495693a1837c849e82ddbbd7261b3ec64f","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will use `COVER` as a fit strategy by default. This might not be ideal so you can now choose between `COVER`, `CONTAIN` and `FILL` as a fit strategy. To see them in action the [CSS property object-fit](https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit) comes close to its implementation.\n\n#### Note\n\nfit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is assigned to [sharp.strategy][6]. The `cropFocus` option cannot be `ENTROPY` or `ATTENTION`\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `fit` (string, default: '[sharp.fit.cover][6]')\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: '[sharp.strategy.attention][6]')\n- `pngCompressionSpeed` (int, default: 4)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [crop][6].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It it used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.3.14-berry-mdx.56","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-NTTP+/y6QwSbTvMRdflAoYyM/dQEMydMXUM1QvTg2k3I1taVVfU9O43+1dBPuHOsIuuskOGtweprg3vWwk5D2A==","shasum":"fe5e206425c39f6d6592e8bd40ab609381511651","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.3.14-berry-mdx.56.tgz","fileCount":18,"unpackedSize":103247,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeMW+7CRA9TVsSAnZWagAA55cP/RuGFKro4ns4tezRyUKp\ng6YkK5VdCKAGsQkEPaFXzHUN8njVmilw8ev6xAwqKlDIZNk5WD2sKzuImaQd\nmqjk+qvSlCmrabtUm0RYpfTThd4Bouri7yzB5/G5sUAP+NlnCU+qc6uklRLC\nDoScinmoUNVP1uCJ019zdHEvvtBJE9M19wHZolQfHJljIU+G9C5sjcpFfpjg\nz4+JiXGKaRYSGXrHmA86WL2caGWhYW1ZF7SXmKrYKlwFnT/AhPtP80TN0+bP\nrdJ9qZmc+TzEKnbBxw2RUCnaXSaPFeSVDAve2AONce+ymrm5oU0nzj4Go/2A\nwOyZWfQIx9jBBbwPIRiPAJalz9SXaV3MN7ddrdhdq4vU1l0f8rM1kFjfE/9O\nRD7TzIBrqRd8W1KmnGNtCDtWox8v5291WqcwPGNMOA3PuIECr42YT3jPMlfo\n4olo8k25zMiAUuOBJd/Y3p1CXfR0u6yVav+nGJY3a0uon5YZbnxoHKjTLLKn\ngNOeX9chLyHXXTFdp0QxR2BU3NWxWHQxF5BYF9TmzjshFc/Kq/rP3e8AwQot\n3UfggCHhmqUNyVHAp7nPGqYKrH+suPz5zDmHOtEhraW6Gef4Ny61N/lzGkt7\nkWXk/gDmEoJaXXUeQWjMquT9JnX3umf5WBfFqLEz1cqxi1ANgj0+ybASfzMF\nF0H2\r\n=K7n/\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.3.14-berry-mdx.56_1580298170883_0.24527044466891024"},"_hasShrinkwrap":false},"2.4.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.27","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.15","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"390b89c4dc5c5eca3c8456f8aba558a5ab77b401","_id":"gatsby-plugin-sharp@2.4.4","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-i8xY612UIHjOT78SD+FAkR7Wov4/pHn+2DJ7SiSvv7I3Pb1PTKm3XksvNKbKxFMjAfUROehqsRbYCIZIDaff5Q==","shasum":"d41ce4d21acf9b08fde0b27be383a507e92f7154","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.4.tgz","fileCount":17,"unpackedSize":103597,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeMY6eCRA9TVsSAnZWagAALikQAJkj7hkOghElYsiQ72h4\nlPxAK0/zYdm68JRE+Q4ruXVl1ZP2b4nyyC0iygeelitGjgdi5gyByV8qiMC5\nZ1UUuUmVYiU6+u/rSdK+H++3Mx61CZpP/x0Az+4447aykJeHX1YRnjV32qBY\nz02G7r0aSXbxgscJ7kvO5CxPbAEMGZw/ZD1YYOPA0Rd26fjjNzpCJW2zoLvQ\neI4RQGDS755c1yAHJ/7W+hD5t7Vf01aUasFmajispYGD39Yp/0v9OefKZFVg\nfs6ygK+pJ0ODz2kNWEbKEECa+A+dxkZvQQiOY3PsoIMsXxWWkXkeRG2GbdfT\nLy6OJUIrZVrLMIP1HzhmUuHe788XLG8ZH2KCUbxxXqf1TNXGW9vHcRewzyiq\nhDzr1JFc/6RZ+t5w4wD+s1WT3OJnPOAKIa1ad2uXEMbpX4lSd6WLYDyvu9f0\n+UM1htN6Ljw6/IwaqoSLpiMNLK9b335UmCzdv9JYXfzKFuAEM9ZpSusTawFQ\nFgmsk/VFB9J1jdAOzbjVWcItanCUXupJ34dyZc0B7FrbPnfboGC2RNYda0Uv\nIsVTOiQiXEG9fuFHfd9zR6pqJWSMhtUEkwtZbqJCiLv37XCDrUTTW8ck7OXA\nOyNCbW1PmNs/MwT1cZaeCDZEcO+0/W+u+/i9IwleuBoRYVhJ0IBRh9aMhQur\nqcEI\r\n=fQGC\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.4_1580306078017_0.06190090280195104"},"_hasShrinkwrap":false},"2.4.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.28","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.16","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"b349d1096e65f2f3738e7230184d288264b03341","_id":"gatsby-plugin-sharp@2.4.5","_nodeVersion":"10.16.0","_npmVersion":"lerna/3.19.0/node@v10.16.0+x64 (darwin)","dist":{"integrity":"sha512-O2FZcUd78aKNR7Hbommrbc5igW32U2MnenA/Oc55sklFUF+I1fu4N6zMoHfh7sVtWCqZEbQiNO310Zl8jstD5g==","shasum":"9c05a426f43546c61936b773b1844d920eac1252","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.5.tgz","fileCount":17,"unpackedSize":104049,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNeIzCRA9TVsSAnZWagAA22sP/3oPJl5ZR2JpGFKTo0xU\nMG3ikJW7FnA8nFw/6ANHkIG59+np+jiDBC4YPCzoV7+Ai+/kapJRaEAMGHyC\nXQ4r/LrjoSwFQ/J6a1tgZKgeynNTVa+rGJ9/ZrYMjpszoecaeHuse+8rcBz0\nquZU86Aw9BFxEFf7ti/N2wxIuUnRBXp1vUe5rhIvQ3zPIFULj6CJBMpnGt7t\n75cAqeZNT35qJMchKoGQ1N6bq8ZOOnf5uD8po/Sxp7hqbFyzGcCPJrOtCafH\nxZqLGRBvNej7rLXoIdo4LRGXjzyJfkBKtOEC6FJYs4V/tcCze8ghRQMjxE9E\nMKP0RZs/o84XqeJzq+aOEMecH4fWCko/M95r2/xZEwynA2cKwCAXaYbLBmY7\nyM6Z9LijnBoqPgoCZb/mGi2OWeQaZw6iOf7ZnIsxunnIVM9m+I7F/OawRXY/\nqJ3I1r1iU1sJGt7h9iTupqnrsI3jHnObZ8u+/1zZBum1KUAdqLI/w1qk3BjR\n+jn9nGwnsKOZNAl/O7ouYBAgUTfnHBYj38nrf6y4TMeSZjjVggU0LB2J3Pfs\nEmySHhh+hsUwvB28ztT0YO0Eg3UpvjygUq4tP1l1IqwqPe3xIgM3d53mHrMm\n16KpyfISYqUay8vFRwNrvy/A3A8x/NWnmi4ibReWAqpdNWBbm9mVvEF5vkS9\nmxaE\r\n=I194\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.5_1580589618762_0.8276021965834945"},"_hasShrinkwrap":false},"2.4.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.29","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"92fe0fe9223d6cbf7a54c769501dc73a00106ed6","_id":"gatsby-plugin-sharp@2.4.6","_nodeVersion":"10.17.0","_npmVersion":"lerna/3.19.0/node@v10.17.0+x64 (darwin)","_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"dist":{"integrity":"sha512-VJ0ShUX7Ig2Xe2BtfNGuZ45EndKKlQagglkuqjZZj2xUgrSkfrNQICMggYBW/sJRlWJ8JeMpz7Sq6g+HNKreBw==","shasum":"9c8920ebf5496b1324b0bd1cc2b0d9a4285a24b0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.6.tgz","fileCount":17,"unpackedSize":104233,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeYoNVCRA9TVsSAnZWagAAEs4P/01Ky5FyVJQMUtZqnmX/\nFJKgWx0amjDMpYlxGoq8rMXi4ssNj29PwQ4BdStK/HeJ0YhXSivP6cKs3hFz\nI/laEETk+3EKY3EJxRlh9VGsxpi0GJx8imBdoy76C2BVJP1kfT3n+W4e9RWm\nqga+tWA6JFHmhlRYAg3gzArPj0aczsHsZIqZ/po+bVh6xYzqGgFch0DIaal7\nGUk2ZRPkz1hxYE3tKqpCNUF+4uy6x2yF4s105oMsjQR+VBxRmfjUJtoTnocy\nsFMBqYTOa+mCuXTpHt12erLiSsBkbin0Iinq3Kxzbp6Ac2FgXAwREdYBWht4\n1N6a8G4RMhVnwiL2u/YeYzDyRDyFnQJN2OpHKe0pwq/T5v0DknaaZGE7TdJw\nOwwhKEsny7335SOWWl6NyKMjAeeQTymgc5VKdN606DzNF2JAm6n4g+4KhgQ9\ncZDJ4bKYRciOaw1FQmaNWJEOpq/apzMPrp24xLbyTMEFIvgt807SGXmlaOEE\neUGpicCzefhrxkj42JMkWfWah8E9ro/jVEE1lUVTQXqBqQZz7jI1NE3zpHy7\nHIX/HW+JhTWDWHiAfcpk0WONqk1EBzKlIGXT6CoRZcFtvPczht6osCOiCM0I\nJUuSHpC6p875MZ77hdicWGDqvPEnNQ+kG0HHC90wr1eZ//I0hvzivSSEBz6s\nMpj4\r\n=o2t+\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.6_1583514453435_0.9525260808975358"},"_hasShrinkwrap":false},"2.4.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.30","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"0f50e581896c59dd437ff3b69f856a9af1ea82e4","_id":"gatsby-plugin-sharp@2.4.7","_nodeVersion":"10.17.0","_npmVersion":"lerna/3.19.0/node@v10.17.0+x64 (darwin)","dist":{"integrity":"sha512-xXXr4bPRpssSYwE1y5BMDgO/OEt40nZjQxdSZ12gTrLiFRjGr0H71K65Y+YxJBZCof0OHU04Y0wxEUe7VdNrHA==","shasum":"68c8aadd70aabbebda75bef5c4f89956ed21ab64","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.7.tgz","fileCount":17,"unpackedSize":104417,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeYr8sCRA9TVsSAnZWagAA6jsP/RQue/4DkUQK3Y6ZHXmZ\nrq+xCwILX46YJutEMznZHi88CReXKDY5S2ufd0DxUJgpRsC6zGyec6/GlkNG\nfQxVT4k/jlcLdhWWUQvwKGqiSa1N71cAzpLwYM6ARj3ikrgg1guiqIo0uHIX\nbUeQokchaWo6Q4xicnExIwOaS5qIW5ypsS5l6B050/MPguOp/6jMnuqi78Ci\nUYqWimkgonC7C6S7vxrmwLveYSdNjulu3hjVPxueRIDEOAB4c8Y5v7uhONRa\nTnV1XHK/ac4oRdWruaPjkRrnwPB7gB4VM7+Ml8kJHfdl5GIu2+R4oZBsG7IY\ny/AVK+NWr9/qItvhD8q0pyDXL8yigMslgYQrUNsHUqpt9ssKG9tzS9PLi0zN\nUF2HfoNgdV1QNQErAri7snFROO8QAUiugCQCYIymwRFvD1dLJXIZYFr93Yiv\n9TgjduetmbGNt7jJV1r6G/HVlZEgUSLNF2FyjUQ5kGpKqzaBwK9Xp7QjaGAl\nWjV9/tYPmpfepjRtKD91k6FvsnbhUtv+qkrIpsmuH4ZZi/AhjnwBTD8osmv4\nVmuqKfcgmLEVw8+pVOpdwLjNwyj2ZlwJKcwrrZo1PQ2J3fiwMbeU4Kzq3hIC\ng85TshzwlNRIEWjaD0qBVelX2zMf4jT50hD1lovBDDJTkWWnaFH/mSRKsEG2\n0/By\r\n=X/zX\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.7_1583529772092_0.1582248130255135"},"_hasShrinkwrap":false},"2.4.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.31","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"8a141a5d5aa5d3fff2670cf8dd6d1c37a37aee5d","_id":"gatsby-plugin-sharp@2.4.8","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-WbQ5koNtUnb+5uXMUeI0AHT0go4WLYaezy4lc+vJIYmxQwmJfKipqCWNEbcx74mYfYmPxWKwGNdm7PxTdiP0Hw==","shasum":"31c96afaee4af882ec0d60b0ffbd785b64c12dad","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.8.tgz","fileCount":17,"unpackedSize":104601,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeZoiDCRA9TVsSAnZWagAAUFIP/icp7z/CDtZADXFGjdUH\nxwVN61AGnEX9gp25UehK5qXr9Pavf+8FUSQsYXlEHS6pI1bIjIhPB/KDqNxk\nmyzL19BucEpAS5pAe5EHogXbBNWM/2EGL5q2dy4LBpnxxj0CHfG+oCD3+wHZ\nAPEaKJyMrAU3kkXHISTF2vdWzp77eYjCc9H86hC8F23DL4GGCgZ+pQqCJ+GU\nxg43zVjTJbldNp7gsYqP5gWr84460BEL5EYN76l/bBe5RXfpu1sCwkf2YhUB\nTA1g5rtol8Mn9iPvvW89yqb+klue5j+q4nR7T/ZZH/O0Az7cqQUYNbYpNE3a\nH0MzmDdm9OTgsmpwV7fSKQievykQ8PHh/pXdFO1tFwfFQYcE+Ql8lBNr9yh/\nfr/tkDS9FSw15cUEsJ/oOW67LFGdTDdDUuzOPQyO36o7r50saCULBIXLatLF\nKCdjwOR7/YvGMVkoOrByqa4mlehV+Dy5tM9gXlXWJYliXLSGyMLXGTOwfu9C\n4mLK3cNpvi0BV2H9sOJmbVoqQgLqma9ZPjXMcdgBC6BE8kitrGbAvijcibOd\nJNmKL63k5wNwY5HHmt7hKQQANldf1ICcqy0LfQmO9OI2dnNIxkM/4LicPAhu\nmRZATzldZaWC64fpSRkePoOTT2KdyuQN62VFzU0XH47WNzokTbHA3TWwyDgW\nWm+p\r\n=LVK5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.8_1583777922440_0.44542062415429884"},"_hasShrinkwrap":false},"2.4.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.31","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"e3518de06bb9a5778f292b8ea8a465402e1bd2f0","_id":"gatsby-plugin-sharp@2.4.9","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-pW3f/T+iUZVunnYxr3/9wCSTn2dI1vtJ8dlfYuX8o97o4xOZdgazj4axe8XCCDoDUcsMuMNY8wlIJuRZUbELlQ==","shasum":"f0cf9fcb722dea88d2ab698fad45065e3e75f848","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.9.tgz","fileCount":18,"unpackedSize":964957,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeZ4BBCRA9TVsSAnZWagAAjaYQAIMbeVCuhS+fbx4I/CeZ\ng4PGkb/XebywTXXQXsFYUxKNOPqYrumkhaea3cJeJ4BXYNOeRHxY97EUmiSi\n14T5qMlgFF9/b8nj3d0TeiyvWGQQNm8OydVTdPn16qhEK5fMFf6ux+Lv6JOb\nkjlnnZlrYXtLbqVS2C3KKsELetVfDuvuhbx5o38juVI82YUUQoQTHkOS5aio\nO7hrh36vphEyQdXBAau7hOT1cnQTBuhUi3L9nZLEu6NvsXsTDsog5pywYnI9\nlFWZ6Js+cn9U20RnF9SYj89PueZj/jYB4v/NxqujmOe0qY9LuVst10254B5/\nEaynWSI60fKgiSd1EKBiTNeVmXCkThAqxP2KbFa5LFaJ9PA/d3vbwNOr0iM0\nI7YYokOcN0JNDSoeMmAB2BqQ9oFylOwhvesi7cHDFPdkwBZO7ZLJTPamNcPX\nyppfLYDkDtQkujSsjKv3N38LnA1i8i8q9JxblBBNgiCYvn6OEiQggAaNK3KG\n8Pf7saHIKYBGRbCvayA2bj8FCc6n+VCWKQ7VFafuRenEPsxgF6Sk0uFIxpJo\nNoM8ge95hsWlcARpgyf1klMHKoUPHIuOryj+G/u8a4amcL+WhVHQhsQqBj2T\ngs6FztzqzwBcUCHYrfZlLZ5Ms+r9FsR4nduf2sYTbhht9iHiJkaNUHKPz2TZ\nrYQh\r\n=JlLO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.9_1583841344767_0.8619510714579031"},"_hasShrinkwrap":false},"2.4.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.32","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"66a0933cce5a8cc35f6555cdb3eeb03bd9f4252b","_id":"gatsby-plugin-sharp@2.4.10","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-HAvJEbbYHWFho72ikcAH8l7Wzrr4K+7yuIZOltFbYNfhngdM6cYx7sSyFzocnSYx7PXpF7rSp7NSOx6WS4gbYw==","shasum":"6cf816c8afce9bc9619738ffda78f9c3ebd1bcb0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.10.tgz","fileCount":18,"unpackedSize":964950,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeaBsDCRA9TVsSAnZWagAAYSQP/3BkQBAu1MMti6Ov4UkO\n1snHqc2kbY+iOhDnNylDg3Wl+iSc6/1z4mChOgbU3QmPMF0yS6IFseQoCibw\nY9l8ss8wT19YzAqtKDFC+okKWH1ML7hLL85aeiohcT+aAfOZjCvuLcs+K0yn\nNak/P6xB6ldfbT76LWO2FmH2teVldFwucixGrpGtuup8HcMWN5WloLSzKy0u\nE7+RwIseJaB8hDEnOg+6OrS7jC+2QH83GsfVhFH1OCloYlHMmIGOI93XAEH+\nh5ZRuZU2B443sONeZHK2miWpiQUFuW0lmledfgVPuByKcuhy5DGkBEVWP+/d\nLlzzFXc2Og3T1PwNodTHXD5WcwtsjS/mmsmRco5VsQ8wtfBNMvKbbw2j+SRx\nW0FNBU9RCNR7JSATsXxiWZvLakScbqzl0wAkVvQuJzQ9SVMGRAAUvQz1ka2P\nAAx/VJ6bFZnMKupMBPv84xNLygPZRW0Z5n9evLN1dmv9444q6KPGMexi/nYc\n5viRVZkWzCWDnPJXABgtjNXuYDIRY1+oGEvrUDf3Vy+TiTrWKyqDaUc0U16a\nPFyQdwLFuoW817BeMiImWHbHPvII5Vmholm2YqAfeOXDdb60wHjOwwT/HQm1\nhyG98kntZuVh/cdmdE8AJpWRsquYoc7iZ3IuKw27MDm+QF4cNn5qgNj+INw1\ncfkC\r\n=tzd7\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"tylerbarnes","email":"tyler@known.design"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.10_1583880962749_0.8065609767466149"},"_hasShrinkwrap":false},"2.4.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.33","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"edb1423009c6a5cfc0e811331abde8716f07f306","_id":"gatsby-plugin-sharp@2.4.11","_nodeVersion":"10.17.0","_npmVersion":"lerna/3.19.0/node@v10.17.0+x64 (darwin)","dist":{"integrity":"sha512-nozPmlLLitkNECyjU5vWiHpGErw8x1xbY51izad4pEvbMqPpreHLOaHNxOo+SUATuJPLl8k0avQDOxUfy9w3lw==","shasum":"96386b89fb05f875f2503f11f77674b5d2aaa4e7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.11.tgz","fileCount":18,"unpackedSize":965137,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeaQn8CRA9TVsSAnZWagAAxLUP+wcxha1CzmidaCe6zG6K\naMxYt4uTTRHvA8p1E2YB1/dXIClSNihVvCBflWDqEVY/EqRnNjlrKaGg81y7\n+soisGIN0jpqqxExTFdy4eR81DdqxqnaDXiinpHorRgff33vXlCglkpvOFJl\nmWilkC4njbnYXyxNPOBYdGqnn73FTAMxeJ9n1xDQH+B4lcrTuL8YxtOyUu4d\nTeNoXPIRw/JvwWcS1Ynrk75muMMyFMI+dJD2pq2oOfa86NK69/EFJQlO5hgP\n6azfW/AoN8EMGFbdvSpMmUmdRbDFBIZnhvfG965ao0ZhMfvgflOXckwPj/21\nLZFZyEus8alqNpyzjGbjkymEo5CB1+XRyrppqJY/4AI1VNJo76mgwfoUxrhA\nfhE7syLMMNDMGhDg/Jtsl6szKnZl80Cr47o7pjs18a4v0HVmmUq1gaZS6ZgD\nWYWRJHh1uNysPwUOa9OUwvOhnCXZ/eXlwpuEtuFx+SEQxW55wN1sOER2cp/Q\ni1jFMjJU3Mfr8BX164IuxiaiEjvV6B5v3McqOEX3jkCKZe6lVfCt9Iqsrm6O\nZhFZpwf5I+J3cczN+KRyzhJtvydRlRXp7VXU23IrtCYNxNlpcMqgmy/2Fe1l\nERUMii9Q+/bnIDE/DCgtDYiqhNXUxqt6ln/tt6rRGW6gezYSYeDcZ3OcKnKi\nHKMW\r\n=YFyi\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.11_1583942139981_0.3935835590410244"},"_hasShrinkwrap":false},"2.4.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.7.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.33","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.3.3"},"devDependencies":{"@babel/cli":"^7.7.5","@babel/core":"^7.7.5","babel-preset-gatsby-package":"^0.2.17","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"8bdcb5ad52b898e99584bb3a0a41baec5fcccc28","_id":"gatsby-plugin-sharp@2.4.12","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.19.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-bgyPIiAxlYavSEtPspG/fsniP8Lzsof+ZwAz2D9TcLy8plWuUXRxiOlkOfrKbqWKlWqZTXZ8vfwEezCfkPYP/w==","shasum":"36d8e6eb5d33c431ad75ff324247ab42214387c1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.12.tgz","fileCount":18,"unpackedSize":965325,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeajmyCRA9TVsSAnZWagAAVtgP/1DKjrUmu+x2XPjfabgi\nu7/6qDY0wZTKap3gWPsdtSEDuZO52LuJMdFqqjl1932jkQpry9s4m3Qt49YN\nclUrN/BK7ghqvVlpq4XTe9LVJRVkUak/B+qtWPqTqR0vJ7BArWuKZhA1UQ5i\nNu/a14zaduEiZy6QaDhEhqa0LxdyEsaE0XTRLTs4eTQ1qSkqI8gQpanED5H6\nbGWHIPT05uGMmuMoQmWJqa6iyUs059yBV+ooAaj/p4PClYRZsJ7n4kVyMHA7\nY+h42k/wExLCm3o6oPTqBFWLGYdRinpnbA0e3Gla2J90VfHubPOA2hcCXKNR\n9Vl/bmPqbsh0RfpTXqIOKuESCV1/EiXUZKNK1vg/p+bMAXMd6KW6pwmhfqb/\nq0WIfYcy8vegMnrzu1t2z2SSw409CkcovjSOSaEMUw1qYGPOzgD1kT/bXpjM\ngGcfRCIFYzT3gPOxRPWKidi4/nipd+ohLLY3ZH2PHS5nIbJJPJSz4OrjqNlJ\nA4BIpVhNMHXo0ZjJNYDjnXgMwvUPkI67FGVuNcPdYG+lW/NWXGfjO8YGisuj\ngwRTiPsz/pEGcQ4CDkHGmrcCSGm6Z8KgAikEYumPl+Pc96MQs0PhzACFTvWN\n5cai0JiycdGTooxKHM1oNFNesMguVUzF4OB6BG8uv2XS7xdwpzw2gpfA+Db7\nOXdG\r\n=FOuO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.12_1584019889545_0.8417823300311906"},"_hasShrinkwrap":false},"2.4.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.4.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.0.34","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.2.18","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=8.0.0"},"gitHead":"2ff2ba395a86407e3ccfd1e010be7408a4817a82","_id":"gatsby-plugin-sharp@2.4.13","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.20.2/node@v12.14.1+x64 (win32)","_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"dist":{"integrity":"sha512-ogRe5CxBIBZ0R76t7F3F1ji00BO7qnTO4vZkREaSxDBwgY6SOGKT8uie497Ej6usfarc9XQ/jMnXBu5EkrT4tA==","shasum":"da47cfd8a0d80fc35b7bb072d8a84f6f4f29116d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.4.13.tgz","fileCount":18,"unpackedSize":965512,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeb2RPCRA9TVsSAnZWagAAi5YP/jZk5risHaujdFrWkJFw\nj+/MN82mXw6CDmCi8n/h+PR9KYBOimNrI4qv6ub8K0gd24iWGmVMFmqkWMrA\nqhrYOOYSz4S0oNPhI08SmKkB3KTbdL+kvqxFJk99105pGtjqgNK5yJdn4mxz\n1CimaDByRuHjPbC2dDjOngEiwRJBmITkthzeA9sDYcblCbi+JHox0cfLoWMC\nPx2mANVlOLYLFnLY8oOAbvIjpFg6VNl9GkrlTb8bCjetV8jwY/2KRLkkLKCo\nfvkNia2HGYBwKRoKJcd2aZPJwKTaUBhH820Solt7r0hGCJtokG+nu7o27cke\nFQ4DbZzJZ3Sc9xjhXZULozWmm36xqDu68T6iNB8q4tciuRhaSCQYTc0yJC0P\na0m2kkI5+8YTuw5x5uQfm1Rsneq5xxPU8TL2ivjY44xOvnOnrv6qc6dMMw97\n+joNpxbkiSeE39/skVaMDT2kPTNXonabdlcsXXI9qWut+weXxrk6HAC/vzSL\nhXDzTZjn/+IBDo8JOJn7G2Y0IkaxkYX48WlphYl4tPGb5lkK780FiRmadwUZ\nzKoAz3d1v4qSxfhJgi0hrO3uvqY48V7BLrUdoclPioN/Sc2b+0NaIPABmp/o\nCr/SN+idmWI4NWwReTKYgxhT0v3XsgRJJJAgm5naj4NBuM4U/EC9uPTj4DE5\njTrB\r\n=p5ST\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.4.13_1584358478670_0.6460527309342965"},"_hasShrinkwrap":false},"2.5.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.0","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.23.4","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.0","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=10.13.0"},"gitHead":"7f197c0ac8f600a9a748992ffd5ebff19424d38a","_id":"gatsby-plugin-sharp@2.5.0","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.20.2/node@v12.3.1+x64 (linux)","_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"dist":{"integrity":"sha512-JQuUMJ5VccwyOsm63v2b0aplTpsY7WJt94AzwlCnG2c2I26awWHLTGPZZSDnMOvTJE/O2MiV0NgjA9sFHRd16Q==","shasum":"d8b111c796b1cb3dd8089f02d672ea042819d606","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.0.tgz","fileCount":18,"unpackedSize":965582,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJedInZCRA9TVsSAnZWagAAmTEP/RfKYrDaEOOdArtNNZZv\nQvXxaMthfKV7w3P1aq+Mxutk8s4/jWY2IEXd94l6sqnV3zBQfcEvSFUqgGWW\nkEYuRq/dvMue6yFypzPc+r2F581U00ge1NrX8zaaTtWdd34unCdp8YVTWMSl\nVie8T7MpD2/4T2DP3iHGN9X8upR4YBYPqcZtFZYVxZUE3dMKhVfZXF5WJ4CK\nl6l6bnGUz4gbnHgI6KMOloMmrSuPGqVlxbUufe6WVAVe80jMyweOeeXef90Z\npjlpI39FCEn+TH4PKH65bjnb9+AWTnjftztWw2Bnq9BC4uJEAReIGEwgguD1\nXBUn7nVJqlDp25ZSP5dPLUWR1nOKY8tDeeeYmTapRuRmQ2t4Fis3Pc83dHfe\n5/YkMbzoxKFP8gCCX7HEWnavFMmQTs6hRSCaf6Sfy40UwlaRMTeg4t5j7US3\nzq3AwHR5nSKoD1obl27CqBR6i1YLBpWSVpwdVVfBtgrooXhWfzwBho+m/hzj\n491Pc7gytD6iU5D5phjCBPtiS2ItehKOwYUmCpNALXraWjGBx9RIJjiIsCm7\nyRRX+xB+/wT493gCZmqcCndwWMZWh5CkHbqpKW/qASWZqaopVAkwXmFORsHS\nwsLjSAls1YOBPkwDv5T6tLtL/93y+Np+Pn+dVY9YHB9FRgXkE57UU6eFNiDw\nrdpX\r\n=X3+1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.0_1584695768816_0.06907412727974283"},"_hasShrinkwrap":false},"2.5.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.0","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.0","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=10.13.0"},"gitHead":"cfc6413b067643f402b3dca0b2af3aca9d2324a2","_id":"gatsby-plugin-sharp@2.5.1","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.20.2/node@v12.16.0+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-EURedOKiTXChixllsOc7GyuU8JAaafGvcaOd1opLbxlTi6cNqz6RrdxNZ2/Enz2Koo5fIddTF5/ZvgcsW5zosQ==","shasum":"e901630a97823545404cb9f2f77eecf841f15c5f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.1.tgz","fileCount":18,"unpackedSize":965766,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJedKk/CRA9TVsSAnZWagAAb5kP/RuBJPRxGeTKkRDJLDOm\nshokNxnKoihCe8m6fpDZi0j8apwG2Cb4HnFvzUGzes0D50cGw32+7jh22GsH\ndikzklrdIAn8d4XW5yKgcTugMIIJSmGnlL0GL3hwkcjjIR9nIrnlGvq4Cbqc\nJSofErA5ryq+bJnBBA5RU007YcEBMkGjzTDzaqknwglvXkdzCNkl46dG8c8v\nW8OFJq09vuhCCPCXy1IF26fr1sHBzivkxnv1V4C53/aY9+9U9JF+cttWF/I3\nNnj2G3mUligJzUaEewOzu0BFA4BXyBHg73MIeyS8ijCKivdmO1mOAZuuZ3fY\nEwv0r5AEG+zrQLo4U36PK1rELe6io+3lO/94+LH1YkvrQhgDZ3DAmy4jXUN6\nuVZaAzXkvl/2eBtPx/l1waxtisDpak+U6pj8mHYDGVXKN0vNRBVNPQMMqTuR\nf/jj6YNd8S8xSq6GmMwkANxFjiCRiEJbV28VI8Qw51mFfoQX/vNCNUY45CyE\ntOgL5kun3annvtDcVUSKoQTbA+Vrwbsl7YeEA20dvP1uJBG46WJQ3SLA8aay\ng3Mc3liu5pzURjTDAJhPs4P7UjNONG5chAs0uBuSNJ+eGwStXCzED7jNiTY3\n4D0ajw0js5J95FyUFV4/BkopTFYCkuhtyAe5aY9c+xlessXPrCwDa2MDnKLW\nkwwP\r\n=E3K7\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.1_1584703807084_0.00987408143309687"},"_hasShrinkwrap":false},"2.5.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.1","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=10.13.0"},"gitHead":"10722585e3544fd7672c6a262198461a6968b0eb","_id":"gatsby-plugin-sharp@2.5.2","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.20.2/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-dWVnuOeeZhEsaYaBcctSybDzYv8wmsjZlxhFspnveMscEgO1whBW5eolBNzRLa+ooocW3wRKg0TYljLlLfHv4g==","shasum":"73a12ebfc053a940cd75e920cd3f292e0bdc3dcd","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.2.tgz","fileCount":18,"unpackedSize":966280,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeeNV6CRA9TVsSAnZWagAASuwQAIZlhqFDxTdfvFDFNIej\nHEePxxPvMJevVIsthDj/sEUa564sVfmTmdgf9BrsX9O7NOnyHex77Fe2Yfb1\nocD3Ts3cT3dz6PY8LAQjjrb3Zv5JSf4m3/QiO+67MXZMRDTJakA9I/v2Icif\nDWSdlF6J2z36IdnGlyf4LSxux7RJhIFHBzJzDgIX8CC2sIfxpvc8viL8r3nT\nog3nu9RnDufcvl/fh1ePvnHeY+y0iP5sO4NlbJzPx3V+/pTWSsSXOh+0Bepp\nmCK5J2DFK3iYctOIvY/OSO6DRT41MD6rhBQzSV7F0hvjyVdG3pCnvKWaeU4b\nsCECa+UQ3u6sJCbBmuecCxHJJl8zv+ej5ZELVItZHREYhzRF79w+xwpF4gaD\noY+c+Umw3vpNskEr0Pf9L6+p1G2XBvjO7m0TNmTokWWkOG3hP8yVowhLvzNU\nqkxURhRRQNZYqxRu2PCOqpXfTZIvgBIKmRmojEDsn1d3/50bKFvyTryhLfCT\ngGLs6adMStcIwIbMlHcgmSbxv0hJ/kQT4KGnFS6t1qofUBVP++4elSKAEHg3\n3jN2QHrd0thKI/CeCJtuxhyMfOTS14z1OzXBEHQ+4yuikohi4F2O325iHZAg\n83W2b+iKWITEcGotypa2tuszbqp4Ks46l4HM0/G4MFz2pVQFAAQH68cvcHd0\n1mKW\r\n=OtZ6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.2_1584977273984_0.8459347661866006"},"_hasShrinkwrap":false},"2.5.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.1","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.2","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=10.13.0"},"gitHead":"1491b316faec858c746407a5fdf202cb3ac00620","_id":"gatsby-plugin-sharp@2.5.3","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.20.2/node@v10.13.0+x64 (linux)","dist":{"integrity":"sha512-/qx0QJNXsmHudEGlRm6oqkq+X228hGBJ6KjCJpJK5bUwWdhcZRJNar337g/2BXPchaxk1emJTUK9y+qSvVpPvw==","shasum":"7644ab20228f13af5b9fdebc5c1bb22662dfc7c3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.3.tgz","fileCount":18,"unpackedSize":966779,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeeg4ZCRA9TVsSAnZWagAAePwP/i7pCHarS/TDRUP2dU2R\nKnasm9KCBWTGNYa5tbi//vs7vDd/wWh3Noegy179wMf5cLvrSAb0XGJs0cTT\nFv4fZBRQpA2tc7vSVe4VWlJSqIBIlcvpipomJUokv8h/lE3QK15bYMQDf40W\nlNbCQyil7Z8ldpcfWSMUtr0L+KZ0g/GvuJHHfzcrtkywVSdbRVJcgTmxdgiO\n7NYztG147KlKhptSib+r4GwwqTzegLdpgrzBUV2pGi2z90+z3Nqd0PUEddvE\nuMw4zTgQmGHknbabn7ASNeuOowhim9R7Hd8Cq6jL2nPdts7VR9GJF6N3h88b\nWLlAVHM5dQr+F2nZmrmysOuP31TXIWCx9TcZhqZHZO9g2+6oQbZigLIGcJXW\nLc0oNh39v4OBUjeU5PONvgC13WkF1rCP4BAApeeX87ILHvoBmwYBJds0DVWc\nQCF3ba8Fcg18iHbOnp/aIdyNHJx7lK29P2n0EGWu7VZmzAhzGVKUnlq/LTUc\nG/eoAgQiRU7QIEc0PO8ea96qS/2uz3HWyX5Mn02gsVeoCna55aUGOyadRpMO\n/qhHALrg19TRVmxbdwmGnh4hjWWU814W4JTB0VSTqBnzDac9XuszXVFVe5n1\nBKCOiHMWP9KWRQRFPoPSxmrkJALZCUHokLyXcdrNIDwQH8b+VkxailV3Nfo8\nJrQI\r\n=d6Zg\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kuvos","email":"npm-public@qfox.nl"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.3_1585057305433_0.7776011995658034"},"_hasShrinkwrap":false},"2.5.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.1","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.5","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=10.13.0"},"gitHead":"7508565d15be38ae4f57bf53d77c017021bdf812","_id":"gatsby-plugin-sharp@2.5.4","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.20.2/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-OVAbo9B21GF3bf0BVLpe7DPm9OpLTsk6lgk9RytzU3yqJCh6NmGTINUN+VPdhnCZNcD17j4FSfMPrquusauQyw==","shasum":"255d5418fa1be510f5a2bead878a1c487f351279","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.4.tgz","fileCount":18,"unpackedSize":967082,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeiNaiCRA9TVsSAnZWagAAwHgP+wXdvyZ+p9LCv+rmRz1O\nMp8djVbrwbqwRcNEG4pX0MmodPSOEgjw+UrPjAabR85QB6mCyLK0jQKKHfnY\ntVQR9FQ/ZaLouwcRD0OeuGiOpvmHQODZYBAdZsj6SgQDhAAR52hUWhxryip0\n2QK7pHZK5I3x6Y4OhdOAjhac9uoa/m8RVis+gKQhwIQ+FIyzwOqDBZpCYieQ\nPtqoOCP1bYCxQvZ8Kd4/UD/EAPj54UyvwFzp7yoVHHg1V06WV/EtHG5PjQWx\njsC55GY/52lPTQgtwfzrXQlszcXwdyXBqDlEThYYPEctsqd+cefwqib29E5y\n8thL+SY4IJE6lYK7mrTvmd8pcdlJxqYCXB/KdQr95zUnBo0h+cSEtnvVbrVK\nrDg4NuJthNC/+9vM3vMYMkGnTuKpftEBWP4Em/4m9crfAT/0m7tqCI0lmP1P\nVfcgHW/I7LmlElnsV8HyEBrJTS9U8fHDRduSGlvUQovowbaTGtMILSjJt8yE\nIZJeOu6fbybdgdq088kEE+HWpJDGLKHOPmdcGGQGVkP5/RDmrhwQR7Wc7Dew\njAYX9alEgyOUuEJ7/dLChZN7gDEMT3Dlm0CVOmctzC1+0rwWHoGOjBrnNvtA\nJFlCFP4JVMTrq/Ve8QCBj81C1jJwMiuT76qdP80ygg7rgUTfbeokSMe0Ig6z\n/Q1C\r\n=WFYv\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.4_1586026146378_0.8445894958647302"},"_hasShrinkwrap":false},"2.5.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.2","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.5","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore **/__tests__","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore **/__tests__"},"engines":{"node":">=10.13.0"},"gitHead":"d3823b5b2af478ce861a38413ee6b4d4f3cc6da9","_id":"gatsby-plugin-sharp@2.5.5","_nodeVersion":"12.16.1","_npmVersion":"lerna/3.20.2/node@v12.16.1+x64 (darwin)","dist":{"integrity":"sha512-BQzt4dwIoD+p7fQlsBGEv7usr815X82ylqr8j6VT2TDp/gdT42Jns+ig0hzN+7OMZyHrpxtVT5W3FLjyyZxDqg==","shasum":"38eb887c5714cabd0e76fafd76dda70c731486f1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.5.tgz","fileCount":18,"unpackedSize":967404,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJemHvICRA9TVsSAnZWagAAc/cP/3qPeFOAkBQHy3hKo9nD\ngw8cVtaAc9B2bkFr0bUER/IkVxuyfpBoEE4K+n9//QvLUzCd2iJIyTRIcVfs\n5O3k9oI8FiL5DJTDHhDIeOfz4DPagtTYbVsqDUyBgbPTWVUJcpmDynCUEjdl\n671VUsd8PRDE21QDF3u5FJF3Ic+UF2EYsvDWEOCCA4wYmfvEbvpX8J3CR07Y\nkvlOtBxahyikmJwBvnkj6BtAkirpZmeaIQzbrUVS/2TV9O/tUCOm/I4K9B7T\nSATXo/lprsTixxJvxAVLWeKxeF9zBvRo66hmQLXWze/8PULAkE+EiJdkzlJr\nENIujabHT0/7zlTkpcuyHttrS+jBRhk6jZGxJqFVqFDVF7Tp+SibX72Cfrvs\nVk+228kC7sddsfgno/+NH+XlmlBmM5tzgf+izxV8yhLi3HraqJjihsDEuV69\nwkn2QmvZmAFZMYo0eCU11WVGhdp+TzuYgFttlHpsZJfztJMb/jbJn+QpnMvz\nKL2QvlzXzcpka6qL4xMlcQSGrCEzao8qeM5cKKfKn30cADTQuklv0Sd+oWJH\nAs6GJN0GK4a6GObP61LkHo2ImIlsrEV//86MYtNRg81QY6YBKTRZsn1C0cTH\nCIVKAeGvL+bLMJhOHM9rtJ0kpRf5lUxd4n3ShbqnhGi2nnH3FJC36XgnhurS\nARGr\r\n=S0PQ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.5_1587051463301_0.5318724265202095"},"_hasShrinkwrap":false},"2.5.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.3","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.5","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"8b6b9f338b6d695a30c80ead459c3a9ca2f165e3","_id":"gatsby-plugin-sharp@2.5.6","_nodeVersion":"12.16.2","_npmVersion":"lerna/3.20.2/node@v12.16.2+x64 (win32)","dist":{"integrity":"sha512-G+ARmh/OXzIq6cRgpKLIOaafuYlmoRc7AJkad6O0DfVFyY6OrW5bIx6MYVGyj72AZiB1wh1RIFmCLf3aDFvzHQ==","shasum":"78c7ae6b3d72ba760ca728de312e2c6dd0079fce","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.6.tgz","fileCount":18,"unpackedSize":968086,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJembWnCRA9TVsSAnZWagAAQzYP/1uRQBOWgKdH/uucrNFG\n4SmWpOV/VKUvkeWfw5EAIQo5VzSoXjc6COBgj5vrP8kqiiviZ3UClbIitEI2\nDWKq+5UG9uDB3VTaHcjRZunKdPWyKzbTxqDGTVhhGYFUWQcFdSgj5R6xzSXf\nPz/jb8iXfgzpcOjQ9qrcgIhBmuJSUGF6rcpEFaQYTritiK9badvtk00tSRfi\nMfetprvN4Mu5zfG50Ni5ENEKeVCVKAFu0JoqENMo54C0W8pRe1dz+NKM8H+q\nEewJ/7pU4T26Hpd7T+/g258eE7miDafIUIDoN0b76RPFttgBF7q6anIIy3yg\n8xkFHy3/aeki7WKqzf6E8ckWLnzT3I3U0UIz53Do1aOZ9v7TP6YQOaNKm2zC\nQ9PoT8cxcfnBndUvXVgKSEdjDqQVT/T4x6hC08JWmAyCvf3hoFUdhMViEm/Y\no/NloRiU94QdBAZq3nb0S59pEF1e8fuQWv+zAaoOSMVj08tVyI7KbDR3EUIt\nzJgZiSueW99106CA93XL7xJJXTnWYvr2fGhMCEjGrLF1EjFXodip4Hb++Y3v\nAZ7/8FV9nSf7NKI1daWUKTcrpIWNHEwVajcDRKfajNtoNuh0nCXP6TL1Nxig\npjnZX95CmEVmrkl192YkTb6vBWfrG99u8kJwjXZqhgG9gI46uYTWh6ZEEdfE\nOHWa\r\n=W7hW\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.6_1587131814929_0.8575328511617433"},"_hasShrinkwrap":false},"2.5.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.8.7","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.1.4","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.5","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.8.7","babel-preset-gatsby-package":"^0.3.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"35154266b55896fb6bf678d8b0ac61e8470dcbf5","_id":"gatsby-plugin-sharp@2.5.7","_nodeVersion":"10.19.0","_npmVersion":"lerna/3.20.2/node@v10.19.0+x64 (win32)","dist":{"integrity":"sha512-TYY0+XKBwSzi3XNcRdusVe3uKrYbozqNgTgEp2Qji9yvNscXYAD/0nCPZ42Dyhfm+R2IeRMLzeajXQy7ZUwQBg==","shasum":"1fb9b65a49a842293fb5c3b032a0de6cfcc325cf","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.7.tgz","fileCount":18,"unpackedSize":968270,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeoqtPCRA9TVsSAnZWagAAmG8QAIQserFyl1oSlXST/Ace\nx48IrVNs8jJriSMguDoNoIDomcqrwzyACqnPbARKNhKzMkg/dMBJw+EYmXIt\nFQbGENZXsquCHMFHYcIwvip7Yt6vV45/AI0EnAPuTpMoHygXcpwiV4U5corF\ny7BKR7868mnW0zTtu/DQuJ+31NsTvU3pjv7T7cpBEWxlvVETtlSZJKDwc7Rg\n6dCRwD3/YdefA9SBQqszzzgMXe1tJSJYIIqCWwDqXOiRBhtzqeehNfIgaZLt\neACX9JteUv7sTVRc3dQpfw4Ue/JM8DLQ6plMxyhwduU3atRsNTokmuJwvN7B\nk2dGwV+OcmmIzbWYM1+wvo1bijJEwp5zVOJ/3/NvlrOgnt6i9gXv4vASJADl\netz3CsvdnYA+WQzF/Qp4/yGWOAMYV83h9gy/Q8hMSuur6ffAMv27sfR0HXMY\nlnfwHAlzZW9531em1M0Z4U8HxKXzaAOY1pw56nuKAWLq150p0qA7KmVkcrD9\n0EaLv6SOYNxUrra6cFSsWj04E7z9lkohiNRFzd/m/MSiLet/rOdkrI3hkqb8\nr4bpkNqGd4rv0BPQlXCa9o4KTs91MiYGwtw04KHfCNqjTdeLNLMKg/Q2u7vb\nyG7omDSpnGeyMBO8SJ9rJQgMNolQkyiK9FWxSAaTQkJdJU4SWp3/ufZfXO47\nvNFC\r\n=VmKs\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.7_1587718990826_0.45207836178051086"},"_hasShrinkwrap":false},"2.6.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.2","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.2.0","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.0","babel-preset-gatsby-package":"^0.4.0","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"fb92ede949f67c16a247ea5b0bc96934f0534dd2","_id":"gatsby-plugin-sharp@2.6.0","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.20.2/node@v12.3.1+x64 (linux)","_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"dist":{"integrity":"sha512-Bx6Nmnf26rtEplf424eF8X9QIQui6y7Eq8mUxxYvkiq/aKZQtSCwc7yzgovW7xgzrjujbOG00+6q3oFKqW7qOA==","shasum":"0f438d9e3bb3ac76c0a61921537a69eafad5d893","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.0.tgz","fileCount":18,"unpackedSize":968453,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJepsulCRA9TVsSAnZWagAAL08P/2mR//GrXrU0a/HPcUB5\nS1qkA9cwUI/MJEMBoEg6eK6Q/jKnL7VcIVkQ245qEXJ2pNhbRbBgZ+X1I+vY\nXLmYKgPlwF0jJ68VhhSN4cfHUNZlHGdK54u8LFzG8f/03OSFVga7Nn1Qdtmd\ni2XAaqmyMFDDf+Idv7keo7NLUFStCymcvG6neVUjXsEEe9kYwwfCoaaK59u9\nszoPL7WeCOjyBWvESjMB7/LLeo/JtaQedfxcSHb7ToinakR8UoWDGHMs7shJ\nuEcNiO+nPElmtiD7gNttBVL+WrDgwC46DTFItoRVH6sNgVTaT7kA0VzhNUzo\nhjJ9zNXxe9bA6H9qLAwCbOBzP1l7+SVEiUM05CfFnHAmyDhiEWMAUVu9j4T0\nwWbVp9W3LDLTqT4pDMLzlx6ovhE6dKLyRFJPvPyL2f5+JlFlP04htNgsBpLW\nuv0b+KiuVRmTr6vrlEKUQQqN6219NpjBxafePyH91pLCsdfh+k39NKy5yc0B\nRePrccupg51cWiMBzbqY2gDNB/L3oQUdLwFK7mXS1Cg7Fh1B57RcrFSwxCA4\ns6+hrot+iEXzzsMUw9c7sdDtD2/kyOY0WdtQBK+QO/HPfgAE29GR/Hp3jkaF\nK8lf3T/AwqAr11Yt62uOs//EkWqp5J1AyiGCWYJzJ8LZiuHdFXXkvW7JJGyb\ndCf+\r\n=067h\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.0_1587989412792_0.16032087203062217"},"_hasShrinkwrap":false},"2.6.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.2.1","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"96a8f2adaaeaf6551381a8abed549d65ed30b592","_id":"gatsby-plugin-sharp@2.6.1","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.20.2/node@v12.16.0+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-gfZtAvMx/Q81hZXsGlkcgEVx02fZJwVz7+IaWtHC30jfvF6ViQ+NKRNBsOnGL7y3HyIvd2qeF6bvL0TUoA60Wg==","shasum":"7d7d25610cdb28359a50ffbcc7eb9b2a7e24ec45","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.1.tgz","fileCount":18,"unpackedSize":968637,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJesTLTCRA9TVsSAnZWagAAilIP/0f5s8SPKB7sOazV15/6\nhMg573EjsZMXsKh87sqmTg2E6zAiYglBTT2Ub1YTnMOrwPbofbqtimvtHfkX\nzH1Fy8Q1O+SPBRwoRssSYG0D1SvGJQbK2wieNjjihgd/89JYCWcq+dEcvKoK\nr3geUgg9DSmekWrk+VGKpOIXXRSFRdp/KeYZs181F3OrKY27V0jyeWq+jxLN\nmp4GwRTLd8EWrdOQernC+HN1nuaCpcXTKrepUJe96Te/blyIs2VzE0f2C06H\nmWfEjXeyzVwJPerz+IPk4gVgRplyPb6zrGRB0DR7Rco6r4EHesmNi3kCU7H0\nsBNSoUvXOM8DvEfkEGCdsQyEHSyWBixP+npOVURpqsLgj104vr8suVmUhSrc\nNWBfid+qJjoMB6DwGFoJITG4SR4Zg0LZxIFqQD6kPTRq3JHdHSEOl54/5Ud0\nGIFcg+GdIptduwBThAsoxXyUp7+BmHO8y3d5TXbYR5scGrdx7LKaLCLE3Ed7\no6qw3PFK6Q9qXhrwoaB/cRCfhG/abYLBgVILRaf5RwzxpCKTn1TyNyWtwJxI\njrPoc4HcoV0qK1OHgLhyv+zlmq7/Fhxikz6gOSemvbxw4bBOZp7PIbEQeD5G\nanVPOwToEQPk/OlkBTNYHANDheuVPMwpk2pJmakS1ffyoKABtUfCdpqNRa+d\n2rwx\r\n=dBgD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.1_1588671186495_0.9541282108160016"},"_hasShrinkwrap":false},"2.6.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.2.1","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.1.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"2273523df0aba7024e5cb4a1fdc0973913c93b74","_id":"gatsby-plugin-sharp@2.6.2","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.20.2/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-PjUjcZxr6pQpEFbv2KU1UkmDo5Amc4deU8Ih88EXoVU/4ZwreRKKC7pjKIeSm4V+E8RbRWAxLBQPxo0Qu81t0Q==","shasum":"be52a09b98c5191d8e40e93e00ceef42b39ef162","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.2.tgz","fileCount":18,"unpackedSize":968936,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJes9o4CRA9TVsSAnZWagAA1GwP/i1g30w/TA3SjUW+zRl1\n6bS/6n4/AXri86K5WJ1RrmlPNrucWHVvA5BjUnnsV6f3v3X0S/QXpWS8sPFo\nJb0RLezpbRPEO/rxGy21jojkgslyEUrWOsD9npPQjQBfkqVU+gsmMbwE1V24\n5W23xgQxR59GNiJx+cERjlSDdMRn0vi4PEUomLtH/KHmzbqR+Foxi9fwqMAQ\nyCvKonvaAKPd7aBokxcGrRX6LS5EROsVVMYdtRxu6F1in75hJeS/orxc/rqy\n9HCBfUuG2ylkXVoX8PofgT8oxXx6ImKeMH6jV+b/kNW8EPARd0G4gY230iis\ni8+cIIP9JnCi2cRaWl6TliMiXcI6Q84yyCz+lOp1pWOiWNQqK45tUFBF9mAN\nqLZjc8/YIrak0uUGk7g4Y81fiZJ7Fui/GlpoUK+69F+5n6NGDbtcayq5yzUk\n6gEegdyoAK2HMtJ/r97l1/YXm/IV57E9HVNBx4dQ64K/vMOn80RQQy8ES/YM\nz1c+rO7bL/mbWBWUn6qHY+ZiCAzkvfy/dpp4B7iGTW6vZ9SGftg/wD4plKGz\nt0RA1hABh6IJrk5s0DlwDV5bC8B5vB2T4ybOfyW/CCw4EvehSt2RzpW7W32F\nq+igafHG0lJUhZzYQCV0xjFsO+EfcTzpdpjFWktNNSRc7cE+1w8UIP96TFjh\n/OWn\r\n=ks3b\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.2_1588845111444_0.8677933814950405"},"_hasShrinkwrap":false},"2.6.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.2.2","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"0f53567b9a21f3c4284ff59e8c7316d9a4b1e0ea","_id":"gatsby-plugin-sharp@2.6.3","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.21.0/node@v12.3.1+x64 (linux)","_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"dist":{"integrity":"sha512-9ZcQpDSEUpWtfbGvmjRXNZsPxg6/8cK/NwHnAXcdRy3vpsrHM7WGJH6W0NdT+GuZLFDRApm3TgAfUhVuwkdzmw==","shasum":"c152d051f23372270f731f1de5df92f8eb15f8ee","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.3.tgz","fileCount":18,"unpackedSize":969120,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeu6iWCRA9TVsSAnZWagAAjVkP/iDwig/ihyZocoXmGOz5\nLYyMkL9W3ugrJ4JRG5BnY89YwHw16LOgfEiuvBMSQyEE48+r+0lWemdt311O\nNlO5Xe2PuvxaUhusq3dUkH2CV+ZHb8q+hMTPs8IVq9SfZj/huwBGcyuueP7U\nm05HgzAU45fUEuM90+oHslMZ02xeAKagOh7fhN0J3J68qBNLipnZAchHsopV\nvWVDABP7Ivg67BOOT0X5VfbZq9EnUCHoKDYU7u+xuua6Ik9GJUiqeQx/L6Vv\noftENnqDarE4pIiCOMl5ox1s8bb8hc/r2LLTmOp+BsJLd8rqEYsDsC9aCdBH\n4w2xLmM6lSSPHFm/n+vdjivAW32p8YzKLfykcijA5yivfHHLLH7ioJAHZtlV\nDKfZgbzBqsOSsGV7y8XffBIISciJGi/OaLWXC4yTrSKdpoqk7iWlLGTWm85n\nkz0PLaxbv/Xgeh3sQuel/W9M92ySSCr0eTa6pgUR4YtmUUIHmcYNUUd7HgMY\nlz22RJrBZgzlzCX8IVjmt/TpxQhd5Qj0VaA/DT66knZQhpIChafqgUEiPUuM\nlxb6kw1BYVTNMZ6be2Hg6DSaKd1KW5E2dFrzFw5blJxAaqtjVyoIU1y3U9Nl\nk9c6b5YNfQxcui0NfUbUXAptGej8QMayDl+bqz8T8BzwnTGsFdKkWyxLzPJg\nPgd2\r\n=34Bz\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.3_1589356693777_0.9571024855311498"},"_hasShrinkwrap":false},"2.5.4-prompt-restart.105":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.4-prompt-restart.105","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.1.2-prompt-restart.128+cf906f433","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"cf906f4335677f5a3a89c153e4eb28f23130427a","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.5.4-prompt-restart.105","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.21.0/node@v12.16.0+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-tLquNgFkGEwr7KlhJ000nxw/IzGw9xvf5ylw3C+2/lYtd+SkKAVAJsDS043JMFpVBo8/1S/wgb71B2cc0zP94w==","shasum":"d5d8180fca696cfd1a9dd4a0fda331f40d8a514e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.4-prompt-restart.105.tgz","fileCount":18,"unpackedSize":969176,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevoubCRA9TVsSAnZWagAAzAkP/jF5jRxEgfinC/rZ9/Yo\n0d9/KdkEyeBUIpttk3Aw4a1gyLnXPBNPWhe7vkjZdMSZQY9QMNwOp2PJaFRD\n5dgDRQIQgjpD6N+tOaeWBg90AquFdrnlGgxztVzlDUUTwvtGV6JtM2oLCJvw\nXyGUEfA6tG0txgQLQUmcPjOr4qV7Pe0N7K4MxYPpWINko/WwU0cdv9AgeRgR\n6nM8L3xnJITfNDFlqynQLLzi1gmczo+neVf09eXQNv1y6pf783vF6v6vGy0d\nsx8Pom570vdqalw7k5lgjFLBLGnRoISwMeQN0LWt7DVo9w2Ku4zbXA2k88AP\nECd08pnCBNRMXo+NiO/sCGsCK3De2htIn1cCPcjj6ePRY1oC0u6w3C7BQS/z\nOd6HGGP0GSkL4Fc7AVHXHvPoAVce0HMac4OjDMXPcpkJ2TAxpMo/BoSSTU/s\nzHfiA4nzg9Gz/IgSPX00NhHWojEExZRXyrucrQc0Ohnk0DNsG/7tCe5FOwst\nlMpXSn9UYNjywtysRUjIHAVBibibd12W0YUjKGBR2qE42s7rT+X1qo3NouIJ\nhqrkfdpyYNHkwYYVWt0kdlJzaz8ylRUrxJk4s5NIFr8p9hYdCO8/j/z/fzJc\nF4JfGyn/YngVOTwqKDFOQwIThTqxzE7BDrJFtdN9JaAeuczT7+C7X3h4Zvh5\nUZZ0\r\n=oI80\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.4-prompt-restart.105_1589545882396_0.577849955242776"},"_hasShrinkwrap":false},"2.5.4-prompt-restart.109":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.4-prompt-restart.109","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.1.2-prompt-restart.132+089b745f0","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"089b745f00020cc06dc4eaf19b0f8b2d4ab75550","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.5.4-prompt-restart.109","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.21.0/node@v12.16.0+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-9bLM6SNmHz53LZh9q2CrI0bd2IprzCBQcKOcFj9qp+iFx5S5gGB1q1NLgvs5DMvHLubmdkVOLR5b80T83oFWXw==","shasum":"29debab55ccf19ba644ae227b9a66df176d81a23","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.4-prompt-restart.109.tgz","fileCount":18,"unpackedSize":969176,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevpKgCRA9TVsSAnZWagAAAW4P/ibgosxFpWgdpvoE0A/8\n31+v/46zUXcU6LsbBqh9EacWr97vKL4YKHuB5NcF4Cfn1kEQ70x83H3q2Lhy\nxyG7O8xGuc7cBtweeq/HNeMKG4AJQeEqhipIrd/WM0G5srEqlHZmAGCVIFzj\ntihTqOhRyV0UeAjZAGcG1bOz6g+qzZ3yWYTVQv0uii89PeEFpotU8I5d5KzT\nqnGlpk/NcXf67NfsGIMbiMfpe73NW/sR/BhAZosh0EKrXo3iNrs0wK+ZycaP\nDSq+wQjtjZMmwLvw56nODmdv7ZeWbX5+ahQ4f5AGYMCZ+epeM5yWhWbKgFJZ\ntIpRvDFcSewjKaRjdG2XceXX7sHp11FCR3h/B39Y0600/hAPlnaRhTPJylT0\n9nApBwgLpyUBSnemyFrRmdQMclHRlJQ11abzkNNP3oZ7COhv/YvC0IBg/qpT\n/7fLtvPQE3tOO+ZVKE2BOAaGgcuDewG6UvOE267j+vbutb5RolesWyMDw4gi\no/iJyW/3SMrEPtwiFI9hHHf6bcW0/9cU3FtEP2KxX3pfODZCcmebEc/zoaq/\nrCTLikBVPLmGMrNdZgk1/+wgyD36e5Xm6exLjkK0onsmEprw31H1UkHihF4s\nG8Aj6UlPvOZDHmprrqI3Dw2UbMMj73oKd8Kol7205uIzxx5Q4loOJ1DaYcwi\ntRL1\r\n=iXbu\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.4-prompt-restart.109_1589547680362_0.3646865077285393"},"_hasShrinkwrap":false},"2.5.4-prompt-restart.110":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.4-prompt-restart.110","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.1.2-prompt-restart.133+4b2cae5a8","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"4b2cae5a81e8f75e2e291131812751fb95a93359","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.5.4-prompt-restart.110","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.21.0/node@v12.16.0+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-eh4R42J9KDY5PhmaRevOMSoMiSuDKK3s0HlzJOqd5XdGOPR5Hxoq0tyk13kyA5ze7zPbjkvbfqc7+wDJAx+a6g==","shasum":"9dd6e95e074f83e5ab85e0952bd46eb113f93b07","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.4-prompt-restart.110.tgz","fileCount":18,"unpackedSize":969176,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJevpYNCRA9TVsSAnZWagAApEUP/0aseH2rAU8oHzEdLAiz\n9nTFv3Fjze2vGVUVkuenIwDMa7tbNeoOs2mOfLYf91Pt7Q49uHP1ApT5t/Gl\nob/Ij96vEtv1lgMwSQnd4vJJZLyFGkCxn7DBpbvJJsII4TZQ6EVEqh5ZuEKM\n+p8q2vNkpD4bSAuM+E25OZo59J2H8nfpm1bQItblewsZn8TxKx3ut2oH+9Jq\nFCqhv4i599cwjJlCkpXdboiHMgeUVotWz8rdPLoXnJ1VJbLiTWfMjO0ZzPXl\nlcxLveDl7bnXW+ui3uIRRvw7qx369m18FFRMGgYohpFPM7D5inq1ETzVXmtE\nTCKDTw9VQ5Co7YaSyFkilcZzLLUKGHbRnrqA8OWPM/rLBtYMghiKChX6exeU\nZw/5eKb8QBCkneipSvH/qvsAz+OK31/kK0bSS6CvX/s3n232zftQPE3sQMbE\njJCm2GqK49cRKLEOoNiV9v9rbulGUTPp/y2+vhsZ1NyhDu07Mri7qbY8dVDy\nyqezcY93aOV75PJLl9wykLdlVkBXV8fxug8qd/jvee9KZO6Zgg/6vtTda8MI\nUhl6PL5U5IeBaPXdV6NkgVWiDuGlH0dQ4nD+VGvDh/QOpUZcTxNAbigYsG9H\nTsmH+/cK+ua2vHiKtZ72FH/r2u2eb40W4bRaChNLvwotjxDR3z0qCxJHlQUc\nFw/r\r\n=8Xmb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.4-prompt-restart.110_1589548556871_0.4911319196666757"},"_hasShrinkwrap":false},"2.6.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.2.3","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"d19567d310d9cf92960a4b61e6d73c18146aa1d9","_id":"gatsby-plugin-sharp@2.6.4","_nodeVersion":"10.17.0","_npmVersion":"lerna/3.21.0/node@v10.17.0+x64 (darwin)","dist":{"integrity":"sha512-tpZVu2ZPkYeEa0CVm/hvW8gSABpjQ/fmMOdkEwvQfYGpzRCE8L9OnUscUcZquYs4OV6tvLym/DtmifpIGCu4yg==","shasum":"7672db7ba16e20be72d38cd82caee815643c0c68","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.4.tgz","fileCount":18,"unpackedSize":969304,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJewuReCRA9TVsSAnZWagAA/lwP/3hHXYsOYy4yTCSuNF4W\nWaN1QayFnE8QqWGD3bckAk1TVe+HD7siTEmNG1wDMSmvMx1t0aLpxCMuX3HS\nfg7cOVTkkg0Rdo6GIRu9g64fzNuOw7VqZ84DNlv0aMIcHW/z/Qe8W/yO7ynz\nSvsF5ORHIyCBptxpot0bQPJ1a81J1dxLKqGWTm2BhcQ7cpUa5hLvVb8aXkp0\nhB72Z8r88ByhrCBDlSzdM2HVQttrF+eoos2TVsKES0fmiOeNu52QGrWfeTRr\njwWuKHUEhBziwjhReQhcTBP+ets54121dXImyWfvwwftheg6MQCpwvdunZvC\ngybZrWZ79tZOcMFkgV1/TpaGqn4aj8r359Yo9VIakZn5RcTQApqJVC0Ui7+c\n1hVakLQUXc+GN3eV9GLn9vroQ+k0G89nNaJaQ6f+xvxuVhx1nkMTnbUYhFdL\ngeAEI+bRW2D9ZGsm5wRonxcwJh6r/bLZW7gP/y6b5pt07Va+0e/0oGmo+oRU\nqADa0nGhd4+vpCffQhxZT2vQuv906P9k6aPm4MWE4YIz+XB18b7op46l2uVY\nKSST0Tiz2plPA9l928m7S2rOcrIy2i98HTuHiKWV5GYJlJxFAUcYHWE2a9jE\n4hvFPQGmVb0Kixj3RVdFX4A+GXNxSYmXbqy9usJ52Kk+VKvRpXMFzz58rHvQ\nRo4R\r\n=sI4g\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.4_1589830750294_0.7978756552122332"},"_hasShrinkwrap":false},"2.5.4-prompt-restart.123":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.4-prompt-restart.123","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.1.2-prompt-restart.146+34a9473d7","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"34a9473d755bedec71c66c0fc3e8013291dbbd49","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.5.4-prompt-restart.123","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.21.0/node@v12.16.0+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-o45uOys/S5Xf1ZvZ7lC00yD037qYDgDpKnpbt8etl/mGIBhtYGa9jCDMwfCxZMpUBWjNJ0YIygF7YYRBpcdm9Q==","shasum":"ddcb615ecf965d162ac9e0eaf2e97fe6371a8e6a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.4-prompt-restart.123.tgz","fileCount":18,"unpackedSize":969360,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJew5aqCRA9TVsSAnZWagAAEL8P/1YCNZYCMFW8+sJTUfjv\nGZq/FjTeHPieIu6pszO5qQY0jJdl6oeIXMqIs1j6EvILrAuAbT5/E0SktD62\n+iWf9UkJ7AJdTPMaHUr9a/piQMgO7FYyIsGAFZG4IzXniVlXDysXhLvr1wXF\nEKqAEbwUaybymZ/NJTPMmKDzvSjQSCxJQjDRTL8+LTtaXRRtBfdKIbJwRrLa\n/mbard9WNvCP0fUCUFO9WBUqSqqRFORi7w1mvDAT9lp213rSWXd2f9qMg4pw\n2ymUb1uIFRwzgdEExw3moVn0ibhikgpqL2Q0zzj8f1TvNPIJxuqmTRvlmuBL\nNhOthH5vtXozspioSzwDxudaLaLOqkitnjM+mcp5XFc5e4BrbTzSRcUwrSjH\nuIUI/O6c653Dn1uMcp96m0gsah+y4JGvbCDaTLq/5TtSCB22Xnf17+zDaDrm\n1+qDQzB/A+nJETtLQxpYYU9vLra0aaP2GJxMNVKdwmEDV4Uzy2jpLT9yAV77\nQHLadX47DGWtlqx8xHX6nXZkbT3mE1KHpO1MaHMRv+VTL9klgECL0/h65hHv\nGd4s40+m2anHfundo/w6koqk4Iqc1OeOpK+eKB+hmKE5Nk1HxmtNFZ563oKV\nQfNz2LnSljV/zAaCBS1LAmsjDUXCL3j+6YMvJ0ZkW7TlWYgwPSisOgxUwUYk\nM33r\r\n=+uXE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.4-prompt-restart.123_1589876393381_0.15643347801922602"},"_hasShrinkwrap":false},"2.6.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.2.3","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"6d93fb81e0ca1862547f2af607f9844c16609689","_id":"gatsby-plugin-sharp@2.6.5","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.21.0/node@v10.13.0+x64 (linux)","dist":{"integrity":"sha512-udA2HIDH9c2Zf3AtVGFMS9zgyIpws7uXS2ajNWMhQDeBVIHchXId+6YD60am8rz9Rc4s/rESWSP5C9yBDhYIUQ==","shasum":"0a02c9810c946e3ab48834a660adda8382bfb8ce","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.5.tgz","fileCount":18,"unpackedSize":969754,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJew6gbCRA9TVsSAnZWagAAA9oP/jV6RSJzzPyrCWwWneAZ\nDClE3Io9ifrHBFLrUh7c5M5Z3bDkxYxdjanaQOrcSLpMk1aXlNrW7kXUi2OV\n+qo4ULV1o6KF8VYj2e23P4pOW6omPScM7SXK8OCvEKNSn+BCNVHw+mi7ETHg\n2mTaBhwe3yUz0o+q9SKXLlgCrq1Pd8kInCPGfW5Fq7T+pssvMrWIjZIjhMf8\ngTZpy0bJOAJj+DDR8lvm4J90DdRkXfPROM3vd+PNUHM+uyTR/qHDx7uKbwFv\n5C4e8x6i6rzPflxy4xpzS+qQt1AWxNGaGikt1+k7Fd35jJNWxLYPQIiLCpGt\n2vKA5fu2g5YUb+bcvGu64pVDUgCDe2VHlfojC/Yt/dMUCCxMAvOcLenUIQ+G\ncdzmKB23RMTxHi+EZ6h0Rpu/1FGUXodNVf0aeRG6Y7hY2CxPOnA8c9e7LgrF\n5KboqDTB9fwgMbrtOT0nokkjT9FbMlm8Mz5SqMKC7ZyRbrqiiF0peUmpg7E1\nUOkmFYuITkQMq9I4aGgGeL78RRqDr73YG2umMOtUaiOyOgT1lv0LmhLEinaJ\nE3z5NSLHiz708s0EwMGUSehP/Alb/DgXe0V0xkdiQuk+LHSt8OXU+u/HIfl3\nQg9R3xHK9t+lAcddruicqwg9TJ2+K1TWvIvaqgNUQ2kS2CWJMr4+5bZkntNB\nnP0V\r\n=ZACp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kuvos","email":"npm-public@qfox.nl"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.5_1589880858717_0.42450932152855625"},"_hasShrinkwrap":false},"2.6.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.0","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"e393c89cf82db382a1f080c7a497536b06aef1da","_id":"gatsby-plugin-sharp@2.6.6","_nodeVersion":"12.12.0","_npmVersion":"lerna/3.21.0/node@v12.12.0+x64 (darwin)","_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"dist":{"integrity":"sha512-jf3rv1huON0x5IKm6Vi6cVHo9pI4CRGOF6vaOVZY2fI7MVzEihOB1qg8Otqfg2DjoWzX6aWvvcspsS98U6pRqA==","shasum":"6ec0d9c45bb687c1338304aee5eee9d821f02352","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.6.tgz","fileCount":18,"unpackedSize":969938,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJew/gqCRA9TVsSAnZWagAA7+sQAI0pRfT4WtdLHZYCB6/c\nJo7WcyHrWpld11OeW5LFvpNCyIx4zQUwTjelWL0TIAo8AxNcRyAWQVuo8yC8\n4agsFJDbKFFJmPt/LbRzBX6X+kEZQ8XpF6yOv1RVKWXoQtU6LS/C3ON0CGPL\nI3c0lZmGYGietWQevqjJ+xl2o5vO1KqizsN/ghKY0+aNtpWGw3ikMEOH8Tk+\nocqedLuelqztTMUuBPaAVqp8U5nn8DMJb7eQ49SdsszFZ2y/BETpqT3Z2Bx0\ngIP6TsEZjykXEnF0wHJ3MOHi4N+KYtC+oHblSoBlX2O/3OTW5p8R15llXRhL\ne9Nd6YRliiM8qX6debNrr2JBa6/VCNjYsgHVVtIj8x4Z0PlnWSDb8rDZr13I\nGAOd+tJjmB2mPxPgtGKeA3liEgOP4hG9b+l8ZmI1bksoXWpK8DYfxMPE6liL\nXhz3mYfrI+3wvgeBGMJ2fbVqinDZpEeDjtBT7eMHNXpryY9u++QBNKHzEZop\n4qETOC8Go/SbdxLwdB8zydKYfHCz6c0Frst2KzyJT09Acutgu5JDlMjHBvy3\nju77WLEH9+Efq5o1NfATojM1j8Xy8zWzqG7ER0YVTkqZU1Cpu4LIXQEggx5F\n4f/aDqWowadNUJQNCJLPlF5xOYnZ/GHQOy7/ZMkV5MFb/4qpXARGISyCk3W/\nitQ5\r\n=D/zo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.6_1589901354004_0.497967421712461"},"_hasShrinkwrap":false},"2.6.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.1","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"49133e2d8bdf81bedfca76c88e210afa82441490","_id":"gatsby-plugin-sharp@2.6.7","_nodeVersion":"12.12.0","_npmVersion":"lerna/3.21.0/node@v12.12.0+x64 (darwin)","_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"dist":{"integrity":"sha512-nsaLgh9XRFFX9Ye7874NfzANkVnyetnsECJzSi81E5zNM046yD9mMSAumUE/cu0J8oFAYB8t13LEaklH7ZQycA==","shasum":"a11d19d1e842a98d8b18965b19c8ab058342b548","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.7.tgz","fileCount":18,"unpackedSize":970122,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexN70CRA9TVsSAnZWagAArrAQAKTZFYUZNy6TOVUeqG+m\nEDNlYJ1Dd4UTLiDss0KuRajAJRHMsgCCUnlIp6SqarlRtmmCjDj8UkIEsujc\nDJcKSyt/H7R3JnO7uDfQKRKqZYfNFTd/9Ug4c/lUsKKOJyzr+8z1+XWmNK7j\n646T3+uBHckv2s1lO0cTo4qqM078qKSgJVelMeplk6xRSrKSk/6WYn/hbW8G\nY+kpR3F605Q/Us2bWGMKL3qEyjUKyLewMzbFFhRoA0aIaLIAM6pLTnZsIyNP\nvQUBrURzjG6BypjOk2clw5snMCw9LTEf+nhY0kYRQugOTJdx114HSgfonYxD\n5zzdkcOrFq1YKwcMOrpr9Ar/A01a7Kv61U+2945hsLUrHbjJ60o1J5BP7XiR\nYWO2k2tGXDokcVstt1KqEg0g+mJOgSyS9LpNrmUJdJaZAJNtE1Bl1uFtrw1K\nlaCTSyWnNfDDEDKuA8ckdhLHpU3+tPyfMjawdyKimR56L714i1DSQPwpnARU\nyb8H383uGEbWGnc3dBUXsHUPkc45Qci8gaJ6aGB/n5H+cfU1niz1uPb37VeT\nQaOmpwtAwgQ1t8mYCxXMmeQ6+rea5sm0NWegvdMUFD+JyGP/TNLjq3FR2p/V\nU5YBxH3i48BXmfKUrhgQ+y358F+/drmZCRvRMOrQn3ouAbjkCmdSJoRcLEUj\nmK1n\r\n=4CbA\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.7_1589960435816_0.6974768704608931"},"_hasShrinkwrap":false},"2.6.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.2","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"78271c317542bab22705508cf1d7bd4cfdb37200","_id":"gatsby-plugin-sharp@2.6.8","_nodeVersion":"12.3.1","_npmVersion":"lerna/3.21.0/node@v12.3.1+x64 (linux)","_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"dist":{"integrity":"sha512-tsSQ8EFOpw+FLudon/h6YipHRVZ62Z/l5aYR2oBbPI0/AObrry1nvwmF6ovVLPFzI+D3GvPml7bvkGWLThKaZg==","shasum":"035cd43e441d351f2ff5212e7c12cf0b962aeb25","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.8.tgz","fileCount":18,"unpackedSize":970306,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJexOe8CRA9TVsSAnZWagAAXmAP/RD2xOq8+6lTPvviaeUw\nSrrjM0Yd7lfuzwhZTVHNe2ygTSgQJpNn/0p/jdMHZn+1Ccdc9PfmbHGXURp3\nBX7cYuYqMjd+dLq5PPYCUUYMc0mAzVg0ItGaHhSImo8DXr4SwfXiEF7dwuI/\nDPcPPTVznz7sExk8v5m0+mfYD/Ury5NEZE07Iv2Y2dNJ+9Rjf4QPipNmZMMu\nq+U9nSDrDGBPG/fbrsFXjOtMpj1s3uVLDHb/EJUaWbhrFhw35ZW3d9nwCvIk\nvjNULzKX03x5fdB33TfqFly0Ozs13Y2Z7cJPaMy4mYfrxYtiMvxOe1+lSaZT\nrAyf4bw6Ixp9DBLwsDnt4czT9k7QIs4b0u+TGthWjJbUjfZslhla2w0n577q\nffvSjaSimjQxavik5W8yJDrjQfXj3ST1te8oF6K5WX9oB6oy25v4c/Ss28Gh\nZGp61oNg+04uQ76vMYipgjuQOzlqzC/yYA0oOKc8LBbtDXy42gjZHUnRKnTU\nubmCzn5pql/dmOzamOXnC1IkrHCcx2o6hCMRdEeJVQBOPWYzBd1ShpGZnnOv\nDyBqxBUi5A+0jCDxp9bfpAm22u7Ix6Bj50SyHB/QMRjPESdfrg5Vz9EdPU5q\nJICHaQeZm0vmjkHXdDR+WUXvZv9975K9UiXLMGk4bhCHch8VgoJJoLQ+w7X6\npu8z\r\n=0Dd4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.8_1589962683985_0.7123573204073546"},"_hasShrinkwrap":false},"2.6.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.9.6","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.3","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.9.6","babel-preset-gatsby-package":"^0.4.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"e3c4efcbae6f5eab377a40bc88f45511f7c02c80","_id":"gatsby-plugin-sharp@2.6.9","_nodeVersion":"12.12.0","_npmVersion":"lerna/3.21.0/node@v12.12.0+x64 (darwin)","_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"dist":{"integrity":"sha512-H90sUQoFxSYN1n7awKfzidltyf+Ho5YpVZxSdEnv3nermNT07sLLarCz3Mtg7DKnxSePmXuWz6Mu30+CgToQ0g==","shasum":"e18b6f3cf83c1ae09fdf975947b88af01e51b72c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.9.tgz","fileCount":18,"unpackedSize":970490,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJex3UGCRA9TVsSAnZWagAANnIP/js7TB26lNYBmhox0xV0\n+K9AUXo0iugIM3FP26zJp2bvsqF0f/ECynQaWSKQQ8j1Wbg+on2eT+Kd8tWB\n6TxKcKnHyVqvE/f4Lc6ryB0ji57zeEXuY/accNvS5QZjdfeOYdt9CM85rTM8\nKMvZCb6QbpCQ+yrGNGZsXcnmXvMCTilVdqNwhLCfYb4tncs6TG3m5FtvRC6Q\nFyUDCJhT+FSBAwqq7CB03du8dAZPCeJJEiOS5meGcdV0a/Fej20IWezUywlL\n2GTt8Mvb8LNjda6uuP2GFXtdhjo8d6QDU5RaHvfa8ft2cz5fBhP1YESq5hy5\na6hevqf6Rb0w9b33VYi6Br33R8ImIz3ilMu/e4VVFNrG4Ll1kC3t+eI3LOvM\nE1hddUWQ6vsurw1mGTHuL/ikVPzLLcL5M3YVNwEXb9T4/sBUF96dkms3A5Xf\nEYvypmzfrxRebvSm8ew8r1+0Nb+0e7BbCXAITcVECnc3Es1/T0SzN7RAmGqx\n2PuSt0y1Kx+SQ0qfL8cdVjO8MlvRz5pw/TnVyydWkIBgCFweKfARam8gE/2u\nuMWPHiRcqTh7hr/VVOHUUENjW5SLKp/sPVfpNE9K1ZCO7c/A3YbHNIT9LPWC\nwO3TxKrUQzPbRVgdia9mvoVSW+41N9TSkkc4TLhZX3jUN2mj6g++FRN3lFyi\nJN5j\r\n=tQ/G\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.9_1590129925782_0.8551111390104584"},"_hasShrinkwrap":false},"2.6.10":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.10","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.2","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.4","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.1","@babel/core":"^7.10.2","babel-preset-gatsby-package":"^0.4.3","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"75f059efb1135362845bb347d2778cacfeb1454b","_id":"gatsby-plugin-sharp@2.6.10","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.22.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-XgA9D05UOCBjRuDjdQpltS1k48m43g/TF8HY7Cmx7tksFVQ7+Q8OVsgxtZhpbLyVJ6EglYaDA5OFvSkkrks2IA==","shasum":"b33e6ade2ac9b6fae248363838b052f7075efc53","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.10.tgz","fileCount":18,"unpackedSize":970680,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe1kPICRA9TVsSAnZWagAAWLcP/i3rD2KDQknZXMlSliSn\nkPOiyl460dSJ+x+bz1azdZ3FvMDmKsAaJC24zKOu0p9iRQZ7UdIHtnUBw/66\nzKmvr82VFdoenkK/KpyDbgS4h2Z6yEb8y8zlOotauh7bLKDPFVjrttaXiyA5\nouCph3vqm3e+aG9kFxRXoDI3AIdKS/Scx8ZX2iZlSDzGm/FfxMD+CqIf/6nu\nJu23hVjaNyR19eir+gpgy1Se/MB5dFyU5UVXy6Dfvxq79D7C5KtLk/fMO7aA\nwoeirr1DhOiG92DnmZI4m6KW38lBxat/i2JBMDh5keZSi5pLNzmiuXQaIdBd\njnAk/NRt2SkzsVUquwNw1OCAr1v27YfHaGug93nPN1E57Io0qky2WTAezZZB\nZreusdx+ICXCcXfzJZ/jneBJO9rzjWt3d3P50BvXGpWmHvq+gAPTyOOEOrui\nL1uN5u9b4YUntHrJgZ8w4YBJll5D4cPOKlORBMyOgj4fROcNFR21jZzMmaLQ\nsoWIoAK0ZFxUNOgPVraSxX5sX9En4fC0uPsWYAcMMI9/yo/mIZe+QcHWTxQU\nV+vihrRmJgrtIFA8mLx2peNd/ErrTMAKOsTIQc8pF0etF9Iqh79CE/+mU/bu\naoHu6VetcUnyj03EveXgUiNjnexJLwguIe8nIFlWusmfoipIqLVjZsLuCtf8\nWoWp\r\n=6q2z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.10_1591100359590_0.3808119950254445"},"_hasShrinkwrap":false},"2.6.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.2","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.5","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.1","@babel/core":"^7.10.2","babel-preset-gatsby-package":"^0.4.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"221481bef7733c9957fb9ba83178f08280243b81","_id":"gatsby-plugin-sharp@2.6.11","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.22.0/node@v10.16.3+x64 (darwin)","dist":{"integrity":"sha512-OOHjhb1SJpjvxBxYjISMJU1BwzJMCYrtO77/qG2UDlftWIKhsjjxlB0x51nDkRtnbZp8JQo1GGIIJ5YD4f742w==","shasum":"5a4327306c381c6fd3ae3954ae0628fba85d6683","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.11.tgz","fileCount":18,"unpackedSize":970867,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe31aSCRA9TVsSAnZWagAA61gP/00dh/IkatqFlqqBuGhp\nJNjSHKLJrWuBiyq8Wfi49qd9kcHL7AbtsENoHWhLAjPJCVOWGC9tDJbzNJ2N\nFoOVmKLrakMl5Pk/pjvnCHLbxjbMyb3fq273VmKZRDquKGtf5+Co/Sem6ekc\nWvVin/HcNEqrlQ+OiUAXNfHpHbkQA4Zq23DdOkEw8E5KWx5um+MU4EBN/tSl\nZ7XKosUWX111wlFwsL4t9jBgvOKo9A91Be55eDq7GAzFc1MV+QAlq5hl6Bv0\nGO+z88MLlEK1bFhLVf3/fzEAgzkT5T0CQ/LUusKTWiA30/hyZEWherHIgUI4\nG7pYIhHiqv9BenmmuUC8MWKFJSUy/ufop1V5ypZ1oHzpdBWjOrNnWUZVqnnd\nfVvTSiujtybTlgjo7DGAwMhEWmLb5ph80lzDD4jMnNLLyGIJ7SxYy/qe8Cl2\n59Pt62fGzYZsWQzEPq1YSyfOFJyAIY2HfN/wqd6X3svxsaz8axwylW+iYjdk\nkUUhUMKYFg3tUNcTOVP7Bo/9SVP0/075UpAXbeFGXFp3zebBXUIaGIkkD+RI\n/f78kcuR48q5ZoHTNvAp0HW0ulOwdi9Nq1K6yJI0vq54861AMnJCFKDJ6kGS\nlIIB4epl8pqCW/HfOq95TXGkwwzs/T3ZY+VqGzMU6TWwFuFF2tfh+oTa9djd\nnptG\r\n=17lU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.11_1591694993810_0.8039613398858887"},"_hasShrinkwrap":false},"2.6.12":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.12","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.2","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.6","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.1","@babel/core":"^7.10.2","babel-preset-gatsby-package":"^0.4.4","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"b95439c0dbce9c1434278a4800b51bed5d17116a","_id":"gatsby-plugin-sharp@2.6.12","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.0/node@v12.16.0+x64 (darwin)","dist":{"integrity":"sha512-cyFjy1KcWvDK7JyWcemMesLIOoyWQQ8Bal133oi29VtLR2A0iwhhm/k8K3AFfYaWeza34edTXsKFVxYhRtRkNw==","shasum":"e3a3b830e58a676dfc7e12e6f94188790aea6483","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.12.tgz","fileCount":18,"unpackedSize":971054,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe7MNBCRA9TVsSAnZWagAAYL0P/1iaMfub3fg27O/9k7DJ\nuUkmDq7Y22UuOOSstMxj4n03u5LCfI0QhIDOT/Mt18l+LM+lR1E8VOUT7EYU\nwo7eczON4yVNlN372yr09XKaHc2MGIPqhcNzIG7DF3ZJCefIPexv5cl3lmQP\nCSiEP0OBNeVhsmE+kEaVyZPbQW1cs7qTaaRQnzwrHx7GIPkgm9NbY0WRKDpy\nKIwqIzSgzWtk+g43P5MIb5QJjVmQJoUeUCtVTPElcIqcc5dPHTRRh6QKBHsR\n7CSthye9WmmtdGRBJBHH7kvu9hGMwn3Swb36IUFMK3tLbEVb2RpFO0fSJnVW\nJXp/O56/Qbh/UQy0B0cjok81vceyYoCRg1tZCbVlY6wqCzm5lDa9VaxSlopk\nDqiguN+cGmjBRDHcp/Y20SN2g4mm1g18xCYM+STO/XTK7jejfSag3AGQE3CL\nSGOXgizNXnK40eAbEYuSUgC98bHkhmlzsHxLknlB7ej6y1LxjZZifV0gibdq\nb1YCKnUqOnMBewT/suobcJKBGGaleqYDh2/sWpQFXiyJYGu8CALYjRRa0/sd\n/i9FqIwYHoSa+bo4GzZ0Vl3S1LlO0lBve3cW8SXMcUqLQgQJzKeOHw8hG8mm\nVhATEKPetzPUx+YCfXpAf6EuPHs8IeCkLaXKB4DX6EY5gSa+klxH8k1dXElb\n55en\r\n=Vtl1\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.12_1592574784658_0.22149750534922386"},"_hasShrinkwrap":false},"2.6.13":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.13","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.2","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.7","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.1","@babel/core":"^7.10.2","babel-preset-gatsby-package":"^0.4.5","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"934e51691b29d55bbad8094175b6d9d71337bd61","_id":"gatsby-plugin-sharp@2.6.13","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.0/node@v12.16.0+x64 (darwin)","dist":{"integrity":"sha512-48S9ZoKLBp1qgBv+Y6vjt+6Y4n2vrO83ARF1q9sttrjDt1FVqtQZ1pQt49BZPaIarDvMucBgMG9SHPB1ZbDQ2w==","shasum":"7b07674d4ef93a4351c588c6729e2232fdfac4f3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.13.tgz","fileCount":18,"unpackedSize":971241,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe8NaNCRA9TVsSAnZWagAA9vEP/j/pA1qeNmhwCxG7p7nF\nfm3D262lV3Q032/R2zHpTV1V7N53kYlsA90WRoQ3bECPVHip2jp9QhICJaU0\ngAhQA8eA6Ksk+5yyOX3PcK/Ae+USDUo82ypv67j/asPiYrLi+LUtn7KIfViU\n2cPCtZcSqdyf3XdIYMo8qin5jfXpSffRzRlESL4/yBd2aq8x82cldD1Gj9N0\nVjTx4/Io+/a9zycFxaWzvJ+5q2islGtub5O8/ibOO5NgmD+H+6k45wBI38KC\n5HOUFlhW13AADQkBKNx3wsLi13JIerxPd/PC4XERF6ep+L6E+JuTj7uhjess\nbs7wRcxzSD5C+2RwawtHYz/GLvcu6ObSioztdrN3+2/8JJT6x96zZ9ieAYSH\n2Tcdz1TefIFjPAhn6RvIgGbrkmsAAIrJCqrDbtvWzk+F5O9r3sQiyQDvZdtx\nitO9RPWMWREXKz2iEhkAU/6qst+uLBMM7sJZFiIvEThNXzXO/3aMvHfSGZpg\nJzDCGRetITbXCVz4hGF0OUNLixcqbZN0EBkNlhlYKlAaBy0kCr+9FFlxslXZ\ng+/2u8WAFOX6a3cpXkCXp9b21rOJvOyAlybPAQ0Lg/K/1BOKmEjY7FUOU5RC\naquqw9yvvRYqBLU8j3U6xv9Pkzga7E4LQkVGioM44P9POX44qO1Lz0LyFeC5\nYisb\r\n=ZsNb\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.13_1592841863675_0.6627591424811115"},"_hasShrinkwrap":false},"2.6.14":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.14","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.8","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.4.6","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"0005a1f2c905e4037aa9815605360688767b5e2e","_id":"gatsby-plugin-sharp@2.6.14","_nodeVersion":"13.13.0","_npmVersion":"lerna/3.22.1/node@v13.13.0+x64 (darwin)","dist":{"integrity":"sha512-wymSLcssMgaVYl7c5gQVPv+iSU8LQdO5RLp8XaCxi+cmtA/XR1HEM0IZsEzywGDosOrIKWSXdVXI0tkROFbqRg==","shasum":"92b1e69a57dcbd316570ccfc58ab4e03bfa252c4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.14.tgz","fileCount":18,"unpackedSize":971588,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe8u4nCRA9TVsSAnZWagAAGR0P/1pqv9CFP1M0CW70OBqh\nBPFpWSaieB4hNQKv+pUktbX4J4wV831wPVfzDvldaQHIB2NmGSn8Syd+iqdc\nMqRCpv7yaNDRVAIq8w3MEwpY/O3SEh94kVYJx653n6WNHTPOkjClQBRPd9Jc\nJsvPsJ9V9/ttDWnSX3s5LikciPd4AWYba1tpYO9NDFv3y2PldxWKikv5WzWm\n+h8tuqwfELGKPdoBjKWtBzi2Sr8MRR+SGBhCFwI0Uw8rfGYJdYO9uk8xzbk5\n0w8BCcEnSTGfmtxDdr3RZooZgH7R+zC1eRdrSFinVUoDsZQ91tBD9DnO5v0B\n7BMt1LMBsQweGfT2uRFXoJhBcoSVYBkMjJutjvGDNwQilyHjCxtJFukd5sSw\n9Vd6NQUz1/5sg1mVayvexl2EwVNAYx6uPuIEUzs1q+U2bgFiigg0+cfwGT28\ng1S/w0X4JBPd8s5/Tk3Y7sAVfnxv+SPZTYtcBym3D0wnbVVMcNjnC5Xpuv9B\nNAaFHwpThyP0zOS4SJVf/IrFdwgGJjTW0ICFMZ6v1k1RuYAw4CwaNUqRzuSr\nmbQpKD0SpW4PePFVbGqWPWKwGuPN+K1wqcIHCrLus7E//Cm1+kveoQzeNbx0\nMVsWbQkha/AJA04fXzxZLZTJFmKqCkIRmQxOe5ZlsLLmsv6hePzOj4ICa5zi\npyV7\r\n=+zbm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"lekoarts","email":"lekoarts@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.14_1592978982865_0.9540212204923775"},"_hasShrinkwrap":false},"2.5.6-unifiedroutes.76":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.6-unifiedroutes.76","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.1.3-unifiedroutes.76+bcf66b9ae","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"0.3.2-unifiedroutes.433+bcf66b9ae","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"bcf66b9aec63f3498c353ecfd7ba8bbaf4f022c2","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.5.6-unifiedroutes.76","_nodeVersion":"10.18.1","_npmVersion":"lerna/3.22.1/node@v10.18.1+x64 (darwin)","dist":{"integrity":"sha512-aZjgKdnKLh4xy2nmdhDUXXsx2pOQUlORm/KXwDEKPQqPd264vUwlHuQbcM7KeIV1mm2luI4rHdU1AvO541AQ6g==","shasum":"347acee185de767458ee34a02a728fb0a7ea247e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.6-unifiedroutes.76.tgz","fileCount":18,"unpackedSize":971667,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe9QKHCRA9TVsSAnZWagAAtpoP/AyR2eTJbQbcUuiJWGM0\nIZBLiQdbzs2hTczMmCMJo1DwPAoNqdHroWFoUfvohBHwSpBedZi7Y8B2H8D6\nMmFCKL+6xnpy5d9OBQ/5CN02OAdNjLrajBOsZAx6DWLeffS6SJsJI43c2gDm\nnGUpQ00+DIMMFkdmdXzgTXsRs7Ax+LZkiI63LkpRo7x8ih4ryBG+wVdAZPez\nPnhL1XRTe3JMT04BdEO8qz1emZectflKJj7SwDP4f4+NUrpIC4Wf9WmRxq4i\nLiGGs4HMN0htn/PDLc5326Cj6r6hVbZTB4sDpG8HkIk7PFEqOKot9J7aj09d\npdFyXUrTytcXhk/eWZHdUOTNsghubLyws3lPmYLPx4NuwPEXpaduuyx2eZeN\n+d1uLQhDf2CbEuiTt+pStrNVMcdBalpcdarkrChU+BHnBkDIkbUw+lK6WUJb\nJEk85DDbkGrLVL6GchGy6nhT05lDpTWpXzFYTxATStYGD+1x+G+KvQuz3a0h\n5zfGdX3t7+cZH/bt3pGdgSYZswVFvCYUxn0wAMqaOPt+aC+nGOiyEnPdbluQ\n2s6io7vsOrA2bltV6RXhxVxL8CXbv9G1HqPwEZcE3Y8/xu4qc5soxxCK19ya\n/pDo6ZHj3IntZykvFmGVQgTNwayaQux32JdNxMatpkWjes/Yg4DuI+HDx1aB\nAob5\r\n=act9\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.6-unifiedroutes.76_1593115271064_0.6334548652094825"},"_hasShrinkwrap":false},"2.6.16":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.16","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.10","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.0","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"ed034d4e39e8990233ff6325db642f16aec65437","_id":"gatsby-plugin-sharp@2.6.16","_nodeVersion":"12.16.2","_npmVersion":"lerna/3.22.1/node@v12.16.2+x64 (win32)","dist":{"integrity":"sha512-U5k+2d4GkHaH2w/7umYoHZ9/5JvRsrWPDAPAl7oNjnnJ7YGIzkoiOUroH4ihUIosGVfiXmw3f4wM7SYBC3D5mA==","shasum":"f9ec6538ae31a4ffb402ab2fb436b090ddd31c57","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.16.tgz","fileCount":18,"unpackedSize":971963,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/K/ICRA9TVsSAnZWagAAWC4P/AmsFMYVwUmMNclu7y5b\nujGKcaieYjzgD8gjYlMe+7qNY4NFOG8wNSHKRjbnXDj2ogkDot9IXoOLFY5Q\n8gSD7z8HMv0zOyuLEINcMzSjU/75pv880YKIR1WmvTJdlhxx6SGG7tqyEVti\n1735ubqH63EQgpvJG8hgLmqhJ6VLV1W76J6NlBG+3a6zU1DAJtwV+nSTXcin\nnET/tXBUnGzLHJdAvkVbAm8OTCHpkf8xzAkfKQs903sUpQuD3W1ecF0ZZrkf\n/fXG6CaMjxjJtgRV6X4cGgL9nBXtNOgbIBFbLS0sGj2oUfSwc3I/adJTfukR\ncz9lHF2BvSLIIkhay//PGbAeiqTTFcmneBKWYq7A5MumZhKufGDMoUwp4v96\nTyrqzHEv1qSyDxcp0/HcDeYB81jdYZ1Gm0pHLFCSpJmFDWA3358Ti80Zw3lt\nDXBS9vQr5BSUbMkgeZVl0r0j/Wlo8tnZ3xPMluR8p/xV5GxkxS75HnbYDRcp\nVaRRwH2I4X0p4IlKyItB/pMq88OZ0LLr/SEICC7ZXPOHiv4RWURXZgh9XcsH\n3HgPzzAfMx7cPOGjfv1x7ojyMDO3oUdHEuJYXNiYJzJ58ZAovYZcXdGkdoUF\nUEmWl8dtFzZM7cHLQSbMJ0mVJnSriBfUdmfRKip1/0vvve/RGqzsI1Z1ajuY\nyHUZ\r\n=a0TK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.16_1593618375957_0.7410499600554941"},"_hasShrinkwrap":false},"2.6.17":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.17","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.11","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","imagemin-webp":"^5.1.0","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"e623913b2cf9a6fc2894b2c3bf0ebe0f6d8ecb1a","_id":"gatsby-plugin-sharp@2.6.17","_nodeVersion":"12.16.2","_npmVersion":"lerna/3.22.1/node@v12.16.2+x64 (win32)","dist":{"integrity":"sha512-ZnRBu3XhgQo4KsOmFBEO4QVmU2OFofPbQ/1xRkIL2exDcVBX/HF6Qh4edwiUQRvYEOgdidCOk3fSYrH+94OsWg==","shasum":"e93f8cafb28f540c0f2d76bb3d94f79e4bdb3655","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.17.tgz","fileCount":18,"unpackedSize":972150,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe/ftLCRA9TVsSAnZWagAAsbQQAJ/TJ5eX67O+0Yc224Bs\njoa6RNTPcyLWBrgRXRqYeYLFevxkKUgemOT1wbybm1to1/u1txnP+m2lJc8P\nSjhbIa7eEMmnc9TrXNTFqrVliDaJhyIv19mWHm/1GK9eDC5GcDletV9pdDNw\n4vlyCKDmmm+yWJiySpe4nlF3rItlvy4GRqaytDMiXwTusiGPfoY+fK5G1Ps9\nlFTRRSHfhm0Bm1xy05lRIwZJZ/HOZJkV3kxwbqiL5o+//FZdHI3wFt8dHeqV\n5z+xzAt/X6M5OzZ06xQKeeFo7pm5Am2P3yMvs9I/XZqGWt6SXErc2VXxndM9\nlWsMxEw/H8kBbOBZwZfUCJ5CfH76nUiYIVkZmgGnRrkb/KXX0/BHIbGw19Mu\nBdQh3wAI5+QZqwDdy/jva2A0qNAPDg02dflGPFydNYwHoyno4L31BXoZ7QcX\nQLB/a9NidP1mK9djufuHSvS+UL/PzUB1k4XE+H+kHy87g7vMa86a6hFnSqjK\nvAdLxLZpDe4TVIO5klT56cbZ03g3aG5T2OwTHRSkqT0eePfs9op+TiZMzmd6\nu4MLebVwhRGJVZveelmrCcjXLOhanxZMb6dEIN6ceCT7KygVuTi7GrAxBSol\nioU2qNR7ONYkvLXgUZtzrTFaN4CTWbYMsxfAxBAnf5h/7HEr8AH04Ugx4RCR\n88kw\r\n=cJdP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.17_1593703242858_0.8488050857417959"},"_hasShrinkwrap":false},"2.6.18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.11","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.1","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"77a6f04da505beb7665bb3a68a7e46f4368dfe89","_id":"gatsby-plugin-sharp@2.6.18","_nodeVersion":"12.16.2","_npmVersion":"lerna/3.22.1/node@v12.16.2+x64 (win32)","dist":{"integrity":"sha512-DeSPCdwxCsBeJcPxbNtptvn0ta3y/3ABkZm00EtEOeasIjPWDqLDDXi39Q+xGOJVcxsWPs5zinQurJMTV62b8w==","shasum":"53000b22ee08e829822b1488141df8ae00017567","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.18.tgz","fileCount":18,"unpackedSize":971917,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfAtvFCRA9TVsSAnZWagAAB58P/1D7ddrAm4IKS/ZXGsic\ngJMqSm5PDqUT34pYDSSpqwmhKK0fFm9w6XIqp3GK82WGmAaqVLr/Six7FvIV\nMVo9znB88hpvmiMsxdJ2xaevtbqsTOzcGRiOMZHFTXS80rk1vctTie2X9H1h\nlMDQwIrx5JQqVHKxUqeRIu+AlRS2DqeEAYjmnvg0+rY5tYyS6fW4aHg9Vtzd\nkMHKta8ySVjZog12v9zCJdl+SnOHkf0f8IcN95jKIxSeVZKgsPmq7ayYUyOg\nhjntfcbHZDy8JKkarLDhGMkcIHjlgdgbY/oZNvsR9GOjeHKTB2C1MD0eU5vt\nOQz9u9GsPiBNj7HkskOOw091WdV7Ow91imQMetrMfzoB6pcxLVgjK1LGs/Zx\nUi9TkO5BQ2OfsgntUXKbrMLrDbmHIaJe/LHm084uN2LvvnWKHItKyFjtyzNn\nJCZzf5ZZijKzn9bDZD9ZDnq8MHoH2fvdaQFKzITaM6N9IiiqUZSwZlIO6Lz3\nr0OQKsjn9rf+uAdX7E6r/XgjfACF8JeeqyCVMJcVlnfxrJP2s4jwuJC4LU20\nwd0gV+GQGjglKEXvxSCiFkduOGuPEKO5bG0Qo5do5ZRvlhM1w++M3tgW+jVd\n6up9vAX/KmZPfMwaSVzK/7lEtFkh9yIzWGX60qk3nAySw/R73ZippPNRCgQX\n4r/W\r\n=Olp7\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.18_1594022852537_0.42302582640621655"},"_hasShrinkwrap":false},"2.6.19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.12","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"960d523861b855c1fea45ceefe9cd01db760995b","_id":"gatsby-plugin-sharp@2.6.19","_nodeVersion":"12.16.2","_npmVersion":"lerna/3.22.1/node@v12.16.2+x64 (win32)","dist":{"integrity":"sha512-0SVP2xk8Ml+hml30+oBP/SRm/ztGV6sDOlOUoEHuv6SssxkDcKc9aSScn0qB1HsKGDYDm1gcmDmw48Bq4U78rA==","shasum":"027e9a55e44fafff80e1c4c4811242a2fae8d12c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.19.tgz","fileCount":18,"unpackedSize":972104,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfBtcECRA9TVsSAnZWagAAmy0QAIA6/mULc34ucQVpK3ZY\ncus9Jf+1z5Qp1cAzfemZx6EJcNAWwY7JPNzGf1V3h0YamJjiqk2vqkw0sdDO\nho52askCPDwPV/MlTIWKrZC85c8k7VfAshyGCwu313Sw+6ueVQoZRacB6ycm\nxuzeZaA4XnfT6YGXjdXGhVkFuri1eXO3ECG67rZHpQcSffeDM4CY9jRxammr\nMAQ9nwMlQK++yJaKrqYVRNOiDUFSt9xIZ6sTEBtz9l8vdW9zCmYUmd2k0zoH\nEg2+9CDEuJJP4rVE1/1n7xlSwiUmF+QTIGNWdei9dfrhix2iOgS1TUOgUNfk\n/T9YKN9HjvYh4yZDMxHvs7JDBvY/tQhaX+T3XHjah16JfN2cJ3iLnCyBKKDy\nYldVuOKoknSRFjeaj0oCSNnAUOixkpT5CX6VkLW0W3jTpkQxepz3j23cneEW\nsr3qN18ara6eWXa2dPRhi7DUP7YY/Quf1i4cAUiXXJJwqrzZ9NDlu4h2X4cL\nQZyFXcO+XGwlC8qSBF9VB9WoH8xDD61QEdv7EIEppbDgCcdwICJRFib7jtks\nOJNad+z4rw45uULtPsK7mtUN3sMfhIPd/CRVhP2I57/+LZfj96kTG8oTd2rq\nOxQ2lK9IU9zQTSbGMVCpSenrbIAihZ5dKpRdvD0HJ4yefrvnQeLosIFO7yJJ\n4uat\r\n=aXkk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.19_1594283779462_0.8602029177499217"},"_hasShrinkwrap":false},"2.6.20":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.20","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.12","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"52140119fe58959fb2cdd9427e2b5d927da020f1","_id":"gatsby-plugin-sharp@2.6.20","_nodeVersion":"10.18.1","_npmVersion":"lerna/3.22.1/node@v10.18.1+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-5M6wYzxer+yWEIhq+eE7XwcDWpJqm2Nr6V14UCfbR5KYmYpkEbDVm2dw1raBFonf/XUQ15idYjPp3U0mY6xfAg==","shasum":"c0e5bfb537a8df5be9650544ba8cec65759b366a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.20.tgz","fileCount":18,"unpackedSize":972556,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfFWJGCRA9TVsSAnZWagAAwAYP/2LtRnNmb5VYjFAXPJyV\nC8GV8mHwNHL+R/PKoHQNJBoHapmhe9vByELmHlmdax8kn8Vw1dEiiou6Sb1e\nmSToQSt86TWMRo12pWmHXf2/fOuG7Qs0R20irljrCIllciuZnWfNm4UK8xtQ\nmZZxttAfPRpsWar6EozS5vxbzomWZN2pzo4G3MqdZCSdJIQ4PG0N4j8FIr9k\nV/Kv14SyaLg6mjazjhN/NnrgOukwUb5NZ3LH5J6BQdZyAmJfTYedJ5pvcirN\nWazKWcJJPhxrwgrvu/Vy9AZFz6RvmnK8woUqS8xQHuT7LivzdC22jfNbpjGR\nEDiXXJQzXZdMZUXGB4tPsO2l3i43BbdZnKu3mhAk1dqpbTYZfPyRaiS3pS94\ngnCRslMcaFLIE8oN2jxzzToMSUeTOyO+PxhpjvrBK3LBXc1iKiYx/PnS1J4R\nMCZv7vt4B8WJ8pjATYqrySv7T7xb04nWZbfOD0rCqy2ly1kTEmCDdif58Shv\nzWp6bX7/TmbIan4M4q1VCWGUfpiuyuYUSY9J7M1XQAytxo+feM6uIaWr3QLK\nxgLJLOf7Ke9/Ofg1gUjuSS1IsFAQYediYfCr0Zha81KpHU4fRsgdmfdud0oV\nzlzSNynG1UYxuItVFB8lFFENNRJKYx+vTZoA+r2CBnUySw81Rqxzxaw0o9CP\n4rXX\r\n=rWos\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.20_1595236933757_0.8327717164798392"},"_hasShrinkwrap":false},"2.6.21-telemetry-test.18":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.21-telemetry-test.18","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.3.13-telemetry-test.118+1bc19c14e","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"1bc19c14e168432951f1b8aad939adc37fb0be44","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.21-telemetry-test.18","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.22.1/node@v10.16.3+x64 (linux)","dist":{"integrity":"sha512-740NzFYLQi3Zc8ZkZTPULNZZkCa2yoF95Znne8bEHKqdDulnV23lotIYcXpu/e+V0tdp0fx/Cf0iG+4eRdXBow==","shasum":"ae56e90a219be9def21c5d1ce20a312e10e7fcb8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.21-telemetry-test.18.tgz","fileCount":19,"unpackedSize":973934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfFZkTCRA9TVsSAnZWagAAS/MP/0REA5rKjbVAigzPHhi6\neBRNMmuDaBie1wN1mWV5/2gsT0LzbDGHtjLrrbfF7lc8zGpQHa+Fge/zm4+z\nsZ+NS87M/SxTP/rdlI9pF3AsYfzy3lTNa4NyCdJf1iBVMnsRs7Fpe6jywn7L\nRUKisP940tFIjaOTCkCbMBsp+JO7CXvldNjQCGVdoJ6Jv3X3c6w4LAfu1mvO\noePKAH+BeKCnJWevIMEJm+dgvnzD+NyPG3P1qBQzVlgnIETXzzdrAcJ9BVZk\ndBPtStF8ecelWxoq37sTfigfJpwuDsKeoB3fceGWodSMWeippnjZpJwJFSwC\no+yaYKroOWEnyUs0pljawW1GWJmYHLC3I6tCbGzjvMYTyqLq39MtATNU6W7/\npiW3LpgLJToYGFtw0/bu3c6q5Ke9WPx3OLBHOs+s7HTkhIxNTzO9GS160ysi\n4xG1LMg/FelR9z51+9UUKXQHhwbV3RbNKNVyCaZjRJNpNfka5C8AzbHWRjA7\nUl+umpKoW4Xg7ZhTQHNNgg2+j21eNPcd93dkVgkkHylvNl8mPnDpZa6eqQ9/\n9o56PGszYFtslgn+GOyIPPNWgwMXEMYuILk86bu+o+F6KO0W7Sc1b9/Hkdnj\nuSokhCwhWJawyH6oZlN6rYPC+yR6Wy5YozWojpVtexcI/5peD/2UcP3P25Az\nnTmb\r\n=ZewI\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.21-telemetry-test.18_1595250963195_0.9059633265834379"},"_hasShrinkwrap":false},"2.6.21-telemetry-test.19":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.21-telemetry-test.19","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.3.13-telemetry-test.119+022e1894a","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"022e1894ad1051077d93f9644cd53f6710b6cf43","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.21-telemetry-test.19","_nodeVersion":"10.16.3","_npmVersion":"lerna/3.22.1/node@v10.16.3+x64 (linux)","dist":{"integrity":"sha512-S3UIM/ImQ+z6f5DPeBPg65OmqNty18qGtbFrpSVvyyPxtUVhfCMoF2/HCxUMAJN4gsWYjzHq30ZiPi9ets+CiA==","shasum":"1ed28147a001b641dc0df05da6213571427ae553","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.21-telemetry-test.19.tgz","fileCount":19,"unpackedSize":973934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfFbiFCRA9TVsSAnZWagAAp9gQAIoT9GNfZEMaRZfHwzEQ\nA2dJJ/UDTFpjpndFH5ty04oc3meOXCccjVYbLHyW20U/OTzqmcYoVQRdQzYI\nw/+G8StwOfgMsdfNVknREBTyLqP9rJ2K16Jacg3Nyc5nd28/NfhqpoKZVpPZ\n1JpmXbX9WcOkqRGidAlSnesQa08Xj5U1HGF5fhQgfrSzFxTh9bOOPZ9C2vtH\ny6Y/YiiQ+pks9VJ1nPYSiY5fLRmfijAa9IAIwQvqhhHB5wDzoJ2QJRvmocNt\n7rwCwO1dHZJGpD+zVALrXSc/ZyuF/9xgzdPJuGAJ1U3ucOb6Z07ABAjpdKMs\n8QuMMEC/DIjvcerLetHI6rctbAtRf+rq6xbAb8FV82hs0SbazmYYj1NR5Ubj\nMIaIXL0DIHa3XKarzhRpdCAf6jTUNKFWfWvzVDcABPBAzaCoo79LfPjZaje3\nzLngwXnTDTBt5D+a1mLSIcrtCMopkW/lDbA1afNGLknSXTSTM152cgjsA/gL\nUUHSeDEm8VMiANtqNU8E9hf/fhfAyIkUgb3loOgVnSqvDxHVAJA8S87hgMep\n/UVhDZZ7ydKeJP959Had0cO4ZA8sgQqgZnXpdVrgNKlCKJmmOq+/aenXtIk/\nwuirXLO/TZ0FEqLBHMTaJ+D+F8r8L+70+y+0LHwGxLvCkJ2BEm++8pPY1WqB\nOlE6\r\n=sPpR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.21-telemetry-test.19_1595259012819_0.508495025640795"},"_hasShrinkwrap":false},"2.6.21-telemetry-test.32":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.21-telemetry-test.32","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.3.13-telemetry-test.132+130173440","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"1301734401ca906574aed90cd07cb16bc1b859c0","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.21-telemetry-test.32","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (linux)","dist":{"integrity":"sha512-OkBUg4JcIqatH4oehVMmaABRP9/J2dkLd9qEYib834jgqQ9xf19lqtTgrZEtSSEPbeFBitrHWs8xJtx7o6H+GQ==","shasum":"fa62b6e910700565d184721b165ec071c2f8f159","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.21-telemetry-test.32.tgz","fileCount":19,"unpackedSize":973934,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfFsFjCRA9TVsSAnZWagAA9hwP/3TCr102MSsd+RVSxm/g\nOF4iuxOLLy9vnay82O3eg24FrMISoLCF51euDFdeM2uGsM/6cAwOPxfwj3fR\nUalHrz6vk5NWdlHNwFF0G2V9oNwZ0Zmt+75Evl0B/L2xTS6sXe9u9JZKrJU5\nkuHGg8hHidzwXx8iHHWsjW7QkBgtV4Ly7jbahiCDCE5SGPR54/x94hlScsNx\nrowK0YyCV8pw1lDOKmvbzvHPP0Dgh3q0NPgqd2+uxVTRpoM2TU9/fAek6KnU\ntfLUv5SSRgPPg31PmvGOzrCJAs75ssF0JzHZjtKPuyKlPQYCnZgKAnaIm08V\nYwMWpoWQWXLzHhUIkU84tzl0IsMD2h1kx4z2imYmehEm9J5Cibph3aQy82YZ\n1yh/Ezbs0PafTIkxtJZQ/wJgZuLuuFlVBKlS3TyELtBOFx4Hp4m2nb8quM/2\n0Vd4xi2vRedB3anQMz3eZczoP08Qax/jrkeRj5Ir1P7kkgGdly5Y35ahFUO2\nM5whXxxYLT5kw1XsrU1O/UZ9tZ8aKthW5WZlHe/x+gwR9tsnvkuJeTCOFFhJ\n8ErkPQdhynTMQ8QEjuYFlYb1JQpLAll3qCeh+IMeUAYfgUSynEKSOHGMJTEg\nXyErnTqWlv65syLJYWQIhdnCfB9gOmXVtVe62LS9pcXpD/NmHxMZnXXKD47w\nRvrV\r\n=bA9r\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.21-telemetry-test.32_1595326818884_0.49620774781612953"},"_hasShrinkwrap":false},"2.6.21":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.21","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.13","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"b0953b0f846be774ef516cab6d1baaae8c90178a","_id":"gatsby-plugin-sharp@2.6.21","_nodeVersion":"10.18.1","_npmVersion":"lerna/3.22.1/node@v10.18.1+x64 (darwin)","dist":{"integrity":"sha512-KKVdMAysqZe8oPyPyGDC6tyfAKxqK0tDBk2PVp+Y76TjFMniFxCYJ/4LDPGLfQ+r1wkXX6ndK1lO2osTuzHSRA==","shasum":"872eb076f6862e773fbde529fa6b821a97745ae5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.21.tgz","fileCount":18,"unpackedSize":972743,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfFwoqCRA9TVsSAnZWagAAjGkP/0n886rSZxiy98QnTaFK\n22V/CwbJBGo6dBbWgMrCwHz1uMj+o8EAfcaz2WSmupc3ivmWP8Lu6VQacnEU\nLOEJlTgHAZk5Zcd3dEVvXwuxLRK10ZKOckbQ2dLsrkgUBUFOcVIYpv9nS4fh\nisoXcbMkPkvMps4h9QRPZv0AZd28XhXF/DsrS63QWIiAYOvud40HVytQb0Lk\n5iPgImCIXaU0v+cING8w7VcIVuwGAZKunUqeddYId2tZ/vi7hczv1MiAEkI9\nU5GcsH+0LVcht4QSU+3ZXwK9Avg6RS6qdwRHnoNni53VgaA18KuF9UITGWRs\noWl5/Iitw9o/fp7eT0aRaF6Tozz1qefsXxyG8eAJKN73gmWa4pGeLRj9jMat\ncmqYyVtFMcpFYxN2mG2mLzNhw1XZpT2gtl6H+/L3p/lGAaGwdUmeK+Y9ViyS\nYaWWvcO05UOUqHMwUmBdqB8JALM5brYjJGd8/yLPFwP1xYL3DpP4OFyMdgPH\nAA8JIs993Mj+4raLErzegtbVvqNOV2t5Itj08fuZQS2AZoBxInTXfrbeqAb2\nljcpoYsKxIVhMoV9AIGMWUTLlcERFMDH6pwpLd9NOO46BEM12okuUdUigaS6\n4Kai2+KoNqDKXixu8GAtRJrMLSPA7+zcg25QaKjaVIAIH8VjxdAcfyWKL6FJ\nIkl5\r\n=HrYO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.21_1595345449348_0.7469145929638032"},"_hasShrinkwrap":false},"2.6.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.14","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"0f2be968c0e3b889650f5fa5dd05692b50cd7b2a","_id":"gatsby-plugin-sharp@2.6.22","_nodeVersion":"13.13.0","_npmVersion":"lerna/3.22.1/node@v13.13.0+x64 (win32)","dist":{"integrity":"sha512-yXIghEbpziqSZw+yqh+W2SpNTZpUkZX98+2YZNctc6CH9ToaMIGuYMwxf/90pStNjkwnlHcmnZ6o6Bk0jrjSFg==","shasum":"4f35f03c87126bd35f7c5c92f7d7f7334e136542","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.22.tgz","fileCount":18,"unpackedSize":972930,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfGqiuCRA9TVsSAnZWagAAaVAQAIOScQowRqC8pfLi9xiQ\nJHRNY2YyxScCPJlHK35PFsDf3U8XtkaF/2yUeM0HUW19vGQs53fOFZ9D8GxL\nYeXQ50pCV7fFRC+npIpsfmVxLD/8WZpZyiO0Clx8ZOS5eGto9Yg7pWvRoG1E\nGUSy3r0IQ9HfVVortxhqpng1zunPeqRUygX+vdgq7I5C9lTHBMQy67AYHSHk\nptldFhw9vnq4bzZNP9qhNkNkkiNLzVbQ6beTGQu0QRvAKXeKD9x4FJSvRYjF\nW4yN6ZhJ59lCrn3kAUo8QyxIiZGrTZQ9u79KebcPDX8YgVxYFdkH0tBYQEum\nkfd7xJZzfttOjHRIr4rUzKIZnDsIPDYQp1C4v4VwbpTzc41sINw2vO3SUDhM\noDBgyqNe8ACGxG+Oc959KK10PqWgi/xosGBBVzCTdsHplKxWrJJQuwXW8ujB\nLS2eh4WRlpV06Y4jOmvtcKFhWLsxSVQqqpn1MK2By16BIp9qUgZnO+CjqXSM\n+tofXx5UpZ0Ee8N7TkB7F9hVXRKJWV1yx30seLMHgr+Vd6ax0eCg/+pAnWDV\nw4VvVuJ53f7q3Tkq2j69GhL1nHnKscKGP6+AcsfmwUTa4S2p2w/H+le4kiMg\n57WFeJtlYcdFrX76yo+2+6sJBfiJ27WYAG3p3ZvbaAf161lbUHM2j6TIfmjH\nj8mx\r\n=iUK8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.22_1595582637268_0.03384452419886741"},"_hasShrinkwrap":false},"2.6.23":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.23","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.14","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.6","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"ae10d6f0910e98bda55910845d0839f76fdb150d","_id":"gatsby-plugin-sharp@2.6.23","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-e68419vWq9zcSmvXJbWcv0tGMHFaqNNN7jwlDWusrK+8uv3iLCwQwIbqvq+ZmZ9ZVc7mQPsC/t3Xbuktj70vrg==","shasum":"24de62b518687d0b5a2afd2b10785d6042370ce3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.23.tgz","fileCount":18,"unpackedSize":973231,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfIAh0CRA9TVsSAnZWagAArkUP/jXgseLiwdfUFe4tjn/M\nRcRg6ZvAfYPuIn/sOYLw/W0U9CwR3gDCXWqcjs/zYMqa6KS4ePhf7J014P8j\nAacgbd0yDe3okeV1DX1CuDGS8G0x5Cwnb0AUaAXuA3WUvNMCR98HAurHbmra\ngtzrIPnydoYZ50p4qAYoODBeGhIPWXzwFaSItFzZyrekRmSEY6urM1koojVJ\nkVijl21TZsvHxpZlmeeoPZf6FneBy+JOKtgdj+bXqR2UML/XU9yBoCTI9gs4\nAJBqlcunpg9X7HglCwfj2XKf0XJ7hHmPbXRftryiXW14XF0x8GxNJVlUippy\n8znAjPC927QEopWVTaN/jXBMqjKZ9lOIJPaXDUbU+cKJjX/X1KA/9ZklQAFu\n63x8LoVIqgUUvgGXhGEs1Fu5yZC4tUoN8K60GotLuODJ5kifCyXmFogG/Ltc\nm4HfZJnhKScRY5jTQW3Zq3DHBQYzMlCjvojGfXcTUjAYSzBxHIiXVrnjq/KW\npGcOIXChXhgkrKfP4DKt8I53r0MUPxxTw0SuODdg180M/YXYp10zS0GRmbH0\nD6HQtux1z99MojR6Ver3Q6eEnRMPP0GYwjotfp+AzekSet27CEzICFGeDELw\n1rJXTIyXlCJ9hSVETDmPjQ3Pf+UshVuvZWRccumfHjyJXYuFTevx9V12fIXe\n/TSb\r\n=gRCe\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.23_1595934835378_0.7446946500436851"},"_hasShrinkwrap":false},"2.6.24":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.24","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.14","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"f57788810b92978bc0d30c0b4b14ae2a14f6a032","_id":"gatsby-plugin-sharp@2.6.24","_nodeVersion":"12.17.0","_npmVersion":"lerna/3.22.1/node@v12.17.0+x64 (linux)","dist":{"integrity":"sha512-tMcfnT4clBMv4Sok4sUvP7k+EIGKvQ9o8XGUT7QmKO/dybdXGhmH6N2jdSeL2Zt9xZliW5lxK5eLBTt5dH+VjQ==","shasum":"af93bcb155861413d3e003c631e67623e90c3406","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.24.tgz","fileCount":18,"unpackedSize":973418,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfIuIDCRA9TVsSAnZWagAAwBEP/RYNVLEn52Dd2OVBnt2I\nUeyEfGOh7YrQZqQ2/keurkLztwfC2hqOpxzAIWnKxHvXUdm17wbatQ7JrPbA\nz+neo+C9fBZF+LS3O/Z79f7NiYUJ/ZrnHJbKzggWX6ABS3RDb9JNVN3cAfa5\nvoEVHrp7MmaLi/khcrDOo32WUfrNaImV7gG3Yn8l1151Nc1VXONgbgq7BvjX\noW0gaNNGgq2/pVF2kFx7QGICXczlUB4aX9Pn0eI8C37yH6yEAIwB76g3aLgW\n1bVXVMe5U5jdLJhIxGoxHjEsEf84fMU1KTsibOCMghvUZ+ADN+mxZM4WJP5+\ndfY8LrYanF3kUwKR570aeXJop42yqI+DlZl7I/8VlReuR3iflF73Ry6Qo/wD\nCeTUI5mdefnr46eGwNe+rQP96wXXJnwUDxUAiA+5ASLz2yr84buERTK5lzmM\nBMcjTC9MaXhwEm395A3P71ZRYSbKC0Hge0azJm7v29XVVhumlowUqJ9jUkXY\nn+43QjGYJwNltlTKv6iF1sJYrH51YqP/ZDeliRBcSbrb8StTSyfxxcPbDP91\nHS4d5x15OtK/hb/ehkSpe2Ac5OZakHy3zDA4cCBKHVcVykcew5FRll61ObKl\nZr/yI2cttfPVd3JPJDkK9/3Q8wIPcYk4YWX9+RAEAGAOkb7ECFlXgPTLeyrS\nv3q1\r\n=sJ8Z\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"freiksenet","email":"freiksenet@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.24_1596121602451_0.19207023104605847"},"_hasShrinkwrap":false},"2.5.6-unifiedroutes-v2.135":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.5.6-unifiedroutes-v2.135","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.3.14","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"adff3cf1c96af3d8735a8d359ecbc2e8825295f0","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      useMozJpeg: false,\n      stripMetadata: true,\n      defaultQuality: 75,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.5.6-unifiedroutes-v2.135","_nodeVersion":"10.18.1","_npmVersion":"lerna/3.22.1/node@v10.18.1+x64 (darwin)","dist":{"integrity":"sha512-UTVszzQW+VrqEV+bmjvN+BmMxDOHMYAyeI3OfZrS5e33ju7Y99xOvFfW44vGN/PRqd+uJYDZfqDTQYUNXshisw==","shasum":"9447f00daccbaac31e9d37a985f1c55965cd54cb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.5.6-unifiedroutes-v2.135.tgz","fileCount":18,"unpackedSize":973447,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfJIY0CRA9TVsSAnZWagAAdaIP/1zZ4kz28sDmNumQ2reI\nJ6zpRezyLi7lBFuMQ+sZ/D0NzCK1+SQoBVrkCQj84pRb9j5oGmv4N7n63rBY\npwJ3H6apq31d21DXpNQ/Iy6bls/YRr+72ZmuDhX+XZtIoO6SQmZu1ULtEdVc\nWCz5/tYVniHwtnbCyER3akao6tqaKWChvUxmpF887VN6sRe8OX/Nd0lsQh+C\n5f0PNJfGdV9f8uJ8E6Ueze8wE2A3EyaHt5Smjg41ea+bSE/5yC2VPDdpJmNL\n32XHbCWfBmq0ouxLI6+5spFUtByfledxbgi3UVj9M4K+MA8JlTF62i4GfWdj\nwbM2uVopyG+E+/5gSKTI0R80u+gYcrq1IsXeayi6wVH68yHi5qV21rl4987h\n6ZETLttL59Nua3qoDLITZwgoNRBSGachDwtH8NjqPtLrgtGJeaan3+KhaynZ\n5YhdonaPmU6dQSMaReEy7KxoSJdrfBP94209Xp+4DMhrH5g3O1J9PmJNJ10h\nv0pQ5e7TGu9/zbKCCeYxyv8h6bqzaqQF7G0jQs4kFkHXRDGL+dO9iLq5bK4X\nbRAhvCbk6cu4uicHs+v0YdLwxgyByLAkFVJ90XG6ILx0b5xtIsAc3QpJe0fF\n3echrv6n9fZHmWS0g5ihbkj3wlLTcljrDwyC8Tgk8bvdkikzCotzoh8AY5gN\ng/lR\r\n=Gt9L\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.5.6-unifiedroutes-v2.135_1596229171942_0.02356483813735899"},"_hasShrinkwrap":false},"2.6.25":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.25","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.15","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"2fabba835f61232e38d76a99b7d15c53b66e5214","_id":"gatsby-plugin-sharp@2.6.25","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.22.1/node@v10.13.0+x64 (linux)","dist":{"integrity":"sha512-FbEGPwYnVr4ZRC5XPLGEyrUZqaKoztBveSXqzHW4P1YNIKXxVdJV/1YbcfWrR2v5xlTu8ZQUZOIbsl9bIwhLIg==","shasum":"0456238eff6fbb2f40d0056886fb2dc424ae6624","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.25.tgz","fileCount":18,"unpackedSize":973605,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfKsOpCRA9TVsSAnZWagAArQwQAJtAf+QjciXqRh2pam7C\nfYuUNLjXTmlz6k7Lr2j2MyeuMecMw72HWE5mGzuItEM2dNeNpT4Os/djwAE7\nwbsI7KfZRvUZnTbFKR22niax1EwdoZRHNNsnUiBbpbBTzCRieTxbzeUqTRDq\niJDc62DyO3g/lTHhnYnisRY7BHbWAMTf53hhQlBD267Heg3614lV7UUEVcLZ\nUuYABvAvvWRdulyljwtsTAVHM4mshOMBgruDgrFZ5cDTimMzEwtpvuOISSW0\nNIPEIwOHPeUMm3siX6TXhhQL/HElkucFddFWDKSRJT5ryzKPLq7wp0kiQXH8\nF8KI/coB5yJ8whSL8kesaXWNHtLsR+NmUvIKyfrgtBNAMsV5xQ8azOv026Lo\nPZov3rkBZD480Ea0OH8nx+sLgvxEH2ojdsW9nE/EC7yIwKbffSrwArKZ+ykt\nvoN3uPj16pGteWgtU2/N5hAq7mQnvwWhC6jeBTN7UEXxVukj1Mx3CYICDhmF\nKRzbDxz9SVcdAuzs5HpkoNrl5BS4W/D2W7/D6eQ1gnKixIWrPliIAlLcRcRr\n6qAz+iIsf+JCdZAkDubBmVPXX5WCBBdp2h3c+MI8kOfC00Vhp5NT9YZHxDed\nlCLmlAtZIEZX5dOj2sjZri5fQDT1z/zuIDEujaMbBhzHCeYZxiXnjRCc0fcx\nDcBm\r\n=wc8Q\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kuvos","email":"npm-public@qfox.nl"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.25_1596638113770_0.5701631417109083"},"_hasShrinkwrap":false},"2.6.26":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.26","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.15","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^5.7.1","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"d4dfec8a693e8434a7b0468a86458020d59274e9","_id":"gatsby-plugin-sharp@2.6.26","_nodeVersion":"12.16.3","_npmVersion":"lerna/3.22.1/node@v12.16.3+x64 (darwin)","dist":{"integrity":"sha512-0eUYckQlBy+WkO3qoGvJJsYFrDcyjbOXRGc9cG5K3bv/TF720I7idV1X5sW9uw+2pm8LxHwB2ZYjchg04aoJtA==","shasum":"14e72a28b472c75e1aa784ecf09035e322c790d0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.26.tgz","fileCount":18,"unpackedSize":976332,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfMaibCRA9TVsSAnZWagAACK0QAKOCxfmACiUN4tf2NZhK\nlwt29ZWFCjxVgb6L6rVyNBYScYcZScwNLisRanhW1Cn9Bg9sKZge7tWmKYBO\nNxmNkUJExRlp2LT+dKRwOJDiJCY1HVr/v8mKtRoXVmLBhV+g9pw5koaVzguK\nP6QfIfPq+/eJVIqlh27v+z19jAr0Ah3y7/zedTZk89RzkTgquoffAIIJGZvL\nM6Zug8Ay/Qt1Au1nhE8BL5xgvAB/AcpIMnD+TKtxsG/VhyzicxExdIu9biHi\nI+KgM6OnTCXTH4WkwG64aV4rGvMweWDu5ekKdONacKkUmOXpB+WhLrL5RQWb\nuej6QviwxPGMhVGUhSAc5nRwcdDU9qFDz6srluzIZ+Icq0pJtPLEIBXEuhrZ\nd4UAlKxApICrNhfIFTQd0oJFYwiD4b6zx+pmatulRbNa9DbxfdH05+sDjymC\n3jsB9D+zJUT6xE1Sw4oVg7pZdGiEsoB+b8DMuIy+JS5t6hOlvpFVvMGJm1gc\n/hhOY+MjGgPKux27KJNonTVyuy2h6xGJbf8Zoc/7u9igFS+Bxx3nLug9E+eB\n+soIWQjEVT9FBnsY2pijsP+MWi73mEUFYX5kDxkG8izF6ZO9Y4VhBk4X+Fbo\n2xVnDu9W7PVkv9dYz7c1zOzfor61Fe0h6vMfN6t4tzpR6sDHN2D7VMt/zj4S\nSs7X\r\n=m3+g\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.26_1597089941323_0.6328205576532868"},"_hasShrinkwrap":false},"2.6.27":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.27","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.15","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"fb1753cedae5cf4a344b09dcbaac98bcdf6181ba","_id":"gatsby-plugin-sharp@2.6.27","_nodeVersion":"12.16.3","_npmVersion":"lerna/3.22.1/node@v12.16.3+x64 (darwin)","dist":{"integrity":"sha512-uWvzxLFAXRF4n8BIa37cIYKvc+gcTJ8CmZFYlhb5daEOd545Z0Elq/mQdOAWKL14cA7AGkEdtnsodXde2gBafA==","shasum":"cfc66b5c465eabce0388f6b60fd942fc0198e495","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.27.tgz","fileCount":18,"unpackedSize":976519,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfMse4CRA9TVsSAnZWagAAOe0P/ixFxajmbwVQS8Td2fQG\nzGrEfQMcTYs27fH6EY8KywH/9RPJfrPh/dYoDCyaIWIB35K10THelzWi+AY7\nQbSIlXBWSI5+sLgNWYcHiyRbgYwaBzbQBjAIR4nsPoss6Tc8w7jLRbVm9tXh\nR/3JvlpNvru4NMDyX7Nr2IyMVMnZqiLcPUQbjxRW6F8ziwZrBgSG1/cfn24j\nCvsT8Wuray4Q58YAAoUEzt3O+kmDcS+67hOjjousNIHGXidem3L3d3KZeerU\n9FKUjHH7JOkys+C2PfomA8DZp06DITimBeeTrhjvnee7o/2Na55YQfOPIMV0\niMriLiEvNWq8RpaG0KQ/JWCVnaM459z1HwlYyrz4DpLY/V28BP11xh+jYzDm\nkUmyt3wHYSQIUB4yeDxPoYo2G77kpBh4qYNKcISGOz/AMTUQQjGIUGK8nryA\nbnTfF/+caN8B+EJQUDyPBozjRegbN9qoX4jQMbJ3UJdYW0Qc6o4rRP4BZX5q\nUzdv91GuuKN2bswY+F+TBAYy3PHvD7DJ1I4viD2ORQhPhXl1Uq6ccVKXXg6r\nWh6vLHBEYGv6YEdzgzQ4n2gnrKw6BolHFYyl2wx0AZzDywcgzwo82jcdckg0\nr9n/SaYyGamCZmJ/QNM3RxEBWZIDPoD7KX+gSZIuzD/b4Iy/NIX3GGHC61KL\nCe5S\r\n=e/xx\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.27_1597163447768_0.510778046245451"},"_hasShrinkwrap":false},"2.6.28-incbuild-collections.83":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.28-incbuild-collections.83","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"1.3.16-incbuild-collections.159+598335ebeb","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"598335ebebddd8afbfde64c8ed317066c2c146b1","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install --save gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.28-incbuild-collections.83","_nodeVersion":"10.18.1","_npmVersion":"lerna/3.22.1/node@v10.18.1+x64 (darwin)","dist":{"integrity":"sha512-3a2+V3ybUPLYYjj9i55lJLZDV0SUnjc3ZhCjndTZOSmKHoh35uGF/ghAEgijLVrBYehFYql+kkWotHCI9pWXKg==","shasum":"cd4f2ae434720fb144a569420b79246e0fc20738","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.28-incbuild-collections.83.tgz","fileCount":18,"unpackedSize":976588,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfPzddCRA9TVsSAnZWagAAdEUP/joGgdg0FO0yC+zFcLJH\n8WHIYyH07yBRapqNfVUw9v6vsHCHUa9MKqxmhpmt8IXEtjzCjMXNtLCWAH8N\nVj+09EI+ZjtoSdXW8TlTCpf9mOPLPYswK3Kl0lPWnmKIiL4fsfDgsXqPUCbV\nIAdsBoFyDfgaID/67jEhNH8yRrw7rM9OKIY6ZtehmYniIHmfzYfzVh73fmKg\n/pXLhvgoPNrxkBoDT6k3HvZRHTf1H3BFKeOVfFJAyQVUgL2YI2uwpoZrX7wE\nc+NbUCIjMjH5t+1/lWpVBKnN6BV7rkzQpFzvHoRhln7TkDZ81ix0yXYBBlXc\noGo0pLj9UqvgM9XzdXSLalXu8ExuEOcolebkeJuOoHgz6q0N+fgdzu3/Nb5j\nXuc75zW8JhS+BiiUbCJf7qP+YX8pKBYiuhHc6i/Ok3dhDYRl6Y2YKbx2TPZZ\nAha3WhVb4/rLAjLHv5iSs17uWxRZzOO2XdFWQtVDFQw4nB4Yk0GUjjMH7UzC\npw5g5YJTsWwmghK/JOHWM34dQtVzrwXVCkeHqicvYapzBz7nW7AGfcfVBM40\n4bFlt38A53xyeaYeA+6NRB9Z+EAG1F2exTG7LxfyyD7c7EWpwXswdsE+cRxH\nuYilUBqruL8QT306e/xB9x5gaBiKJ4i41Nf9cjOYal1um3/L9P7wBBxQZejF\nzfR3\r\n=DyGR\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"blainekasten","email":"blainekasten@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.28-incbuild-collections.83_1597978461089_0.054048740370673753"},"_hasShrinkwrap":false},"2.6.28":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.28","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.16","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"56990bdd49c01e4f4a0c659df542e35abea2954e","_id":"gatsby-plugin-sharp@2.6.28","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-7gAbrpOas7u0TlKJ1fnFHvRDaAodxoo0T9PuWc4guL8ZjfODPBvJ+hbuBr6ov4FJJyfHaCwxXLYV8yivwvmPYg==","shasum":"f5b9597d100c16c568f66e68ee68271691a57934","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.28.tgz","fileCount":18,"unpackedSize":976706,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfQ4BcCRA9TVsSAnZWagAAMhMP/35bQBGVaow2kAsLxjyO\nZUV1HobLp35Dr9cZq2uk2uaZrhvJmTrWaewDM7FcRunelj59Eain/tFpXMpI\n9oNAu4449TystVU/giSxDnsFyUGXLuy+X68zwRQM0prQYYzzxHn65cy9Jri/\n9ElV+MYwytGnNYZFOkVkRjHMAzKZe2rUzRTYA8iAmE35CcvWOjplADkA25Lx\nXswZY7bidS79adXywh0Nu6p+IN2IWMke+ipgo/WJ5J2+anGUI5Pky0/yd2Tu\nUOuRtO+T6NXtFW9dMDvTH+08SpS0cbrl9Nli5yzNHf2i7SJiOiLyimkfMYPR\n5qOqcqFrwVjRbA7UWmo6c8zMcFSxWNTc8DUud2Axz4YTSYOXl2C3cei4xgvH\nhryKK1c0PBnztXusRSJx7kQxePE4aZrM+RlecZ5EnD/Nrg238NhTnSxkgkQi\nmTnHdvAL7kBCYRHVrXRA9naXlSUfan5PQpPDsHpjXQxT19u4+jBMXSnhNdq+\n5ckJCreGQQQw48uH5spG3OrKCSezDGoBASinfTYKVLxBKta2L/fzvZGzxfms\nXOTjlV9SSF/2RgOI9ej54spOJCM8vOdnqiRCcK4GDBfT0FCT9lY8MCzt/AGq\n1Hy/qaE7fAcCqoDmA7mcd5FiQPv2JznEIA4ZwINhSLBcH+LP12z+6Km5kYVC\nXUBP\r\n=Aj7b\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.28_1598259291373_0.9156616358187257"},"_hasShrinkwrap":false},"2.6.29":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.29","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.17","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"093614ffaf94e827f278af4a3d2bce93905bf719","_id":"gatsby-plugin-sharp@2.6.29","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-mhk4k4RIPdRASj8gD51rLpc7eTxUcNIvBpntaEs3vltrz6dZqoLXHwPHrv3j8345ETeE3e3eGFt3qWp4VLxHtg==","shasum":"f48f437138b94f5f8fda524b5c899bc3ec2efc6f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.29.tgz","fileCount":18,"unpackedSize":976893,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfRm2tCRA9TVsSAnZWagAAkbgP/At68UXm8p7kKQIb8n9P\n2TNaquchlS0jQgj/7eufCBxgnRRfWEkFDqUMTR/Ti7rA4RfgHXL65kcNrfJY\nUPeJ0xSznh01ZiGXE/MUkFLU7hilA4tQ83GIl3d888cd+jNcdWbvpLkFqtRW\n68r1oD3UP1Dv3vWgAPUZU3de3klNl4hM32WVrTQG8uaAYaeyvwSfK3g+6uCw\nvVObmlM00OXX7RvzONFWYHiKJN58NywgLQGkBp/xAfVRh2ZfrT/S94wR8O/g\nWrdlkYaOOaJ2NL3AeNIKr4hr8GMxBiP0l/aEgNFKQUN4xSEDVTYKvAQbTPLR\nMiWuFqj+/KtUiPEKgy5lNa/7Qd7SbkIfPJFtsbX3JCg0d8x1QJu2rdWAyRQG\njUMpy7VCQK5wfE0jyUhgQW+StoBflDl2D76cRT3vP1owt98swDohNZIQnPe2\nV/lSvJ8pz3ON8pkm1f33EQXUlvYCGjPDDr14Nuvz0VvRyUFn/94xWKCbiD+2\nbiuTOPKUt75JmvaWNW6p0gXFqspuweShhp7Zb4VElEr5ReYrB+2r2jbwhRx2\nFHsls4bv4w1DclGQQ9wjrEc/io6gPw6j0EINKIfmKE87swEk/5EzvMpGqh/i\nQrmfiHYl+OfBiRMJaVCfoVZ+Zxe++DTpz1GgQwTopt64QwfZnHogxbM8bjz4\njbZv\r\n=IYBU\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.29_1598451116841_0.2015229443062443"},"_hasShrinkwrap":false},"2.6.30":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.30","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^2.6.3","bluebird":"^3.7.2","fs-extra":"^8.1.0","gatsby-core-utils":"^1.3.18","got":"^8.3.2","imagemin":"^6.1.0","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.15","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^4.1.1","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.1","svgo":"1.3.2","uuid":"^8.3.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"ac72bfb7d1ff2c06ef6652f12c1e861fd7cc21f3","_id":"gatsby-plugin-sharp@2.6.30","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","dist":{"integrity":"sha512-CAMMd4wz0NGsnxbWEABFO/oIRp3RQgy9sN+OTNe49hMuyIV+tJGb8cePS+8h5r7E3BxYciHd+TuDsovomI18jg==","shasum":"35f4c7a618771ddf3514808afba87fd245dd21ec","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.30.tgz","fileCount":18,"unpackedSize":977087,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfSQ+3CRA9TVsSAnZWagAARjkQAIxM8ILyVIJ0s+34brvi\n8vdSyVRwspuU2MLMUdYaXN1hEfJMl4Tr+3H6yEgV8Bl1Vq6RJXJ7t05YVF/e\ntUPJy0QEUECcoPW7XI+p5fDHKeHFjdbQFZu1oLX2+M3rKyQh7qayG8dPTNwX\n8mVg8jio9ViMof9h+1bwJu1QOeA9TKf37u8dVl4W1VSf7cjt7wWMeKLRb8Zy\nL1gkXbiOcIfFE+/SNGTyqW5otGSm1/vl4ifuHuhjnAgMRPKIA2S3wmJKh2kR\nqMPnswdJIUW1JBKhEU96hDIBAz1POIbCxJmIU6EGBTiDFKD8w5osUakNmphQ\niby8SPYz7Bes28sdyEbAItV6OTXmcEu+smZ5ymIk7CfqccZdp1fGKYLZvLMJ\nK+Dz2Ok1NclfYbn63ed2uZmAv3u6BmmOKgAUBFNtYLJQuN5mOmL9xdDPQMxI\nAuTR1fzdRF18122CIkfIBkqxI8issbS8BoRHIO9ZDzJ9Bq0yOk2GzV/7IjGj\nvod+yxnFRAmDOyvprJV8CesyHtux7sx/DVmbo4w70Ov+ZX7fsdd59zPgWhZF\n1xnd4HKjpPBfz6vhx7F8+n9ugCP5UNnhV2Uoxded/ye+JiAjPC9PcYQNqghf\nGD/nZJF2KTJAX1OMJpXsFe5i4P6+n7t2Nb8crdtn5rYs0xmRXCrFlHT2v1rI\nH9Va\r\n=3Aj8\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.30_1598623670490_0.8940582682263649"},"_hasShrinkwrap":false},"2.6.31":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.31","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.18","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.0","lodash":"^4.17.19","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"^8.3.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"83cd408c557ac3318902b17e16bca23a7d711006","_id":"gatsby-plugin-sharp@2.6.31","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-TUGFlkgGwtxcBP1UQG+QNd8ipeclefMmpEC8k3/3z4r15aV7d83/CrgByFjWLalY8esHF9DiZIyR7/kYoQ8/PQ==","shasum":"4e324a694f7fc9cb4053c096552a1276c9996897","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.31.tgz","fileCount":18,"unpackedSize":977300,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfTOZOCRA9TVsSAnZWagAAb88P/19fA0NK/NiG9TTxqLOf\nIeSXqbXxocK54SGH4i51gRiyeJmrRD1n7kQk61N8oYjbvW2NDdHeI9uC+1OG\n05Ge/EPerpRjfzAgKR7NGV8gi3KPUppTb7POd+ki5YQXKoGwx+Jtefm3fETU\nhVAbQkBXedmtcbIXj9wvavUqZDiHpKD0d/kHs4TO8HUgO0i6c5OJoHXv0Ucp\nyVVIMIoSgnnK9sgLrFHAI6XwoZHNXs7SLJUihWxUUJdWbTYt4tb7FRlUYi+U\nSzEGkhJj4AyEbbPrQQR/BgtgiduUafsBVKItFNHjyv6xK8K9wNyT0hEkgSNb\nJfgIGS+tg8fx2QY293sUpLkuQ0ZZ+P7ngnIiL7SJd9ErwYCPvc49jpiTZ8mr\n/6XMJudPeJKf2rLd+ih/ybkm27AkfO6BwAepRW7KF7JRsxQHNZcidBTxK9Cm\nDiasOZxhGT9l9tWz2PwNBKWFbLZZgpPlJaNrnHtHCJ3pC+4pNAdqY4l0rI7G\nD6YhlauynN6TJaapN4AuZ4YdLar7iBx0xFH0pqPfYk42AAd9YqfwavnQwswc\nzvc2ETmnalPspivFJ1Sl9sWMDvmbyd3mC3TyPDNz+8r7imFVIlJ3MxTElyhO\n0UKDAhSR2Ho8A4zV0zQtIGHSCq/nmBk8jmNUY9493KxN5WzAPxEfGCugnU4T\ndffx\r\n=wCw2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.31_1598875213406_0.16999319876001429"},"_hasShrinkwrap":false},"2.6.32":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.32","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.19","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.0","lodash":"^4.17.19","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"^8.3.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"7f3221b55270a187c08b3f0674ca94cd202a3a38","_id":"gatsby-plugin-sharp@2.6.32","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-hDBGeYMU83r+5umDIf/nAhKxSCIgv5TO3+BKAdPJKF0cyLbLPd0N1sa5PgQWU2zFSeX4DebM5Py/FTqHA64eFg==","shasum":"47ce68ca448bd1cbe1c86e6a60519b729b00eb78","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.32.tgz","fileCount":18,"unpackedSize":977487,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfVgPsCRA9TVsSAnZWagAAe0EP/2cpPZw3+G+L8qnuyMn6\nkHw3fqRix98XlfGGv9B4a8x+uKnp5ZTOTEyUm1PB1oc+nWbhRMLVlipRAulD\nCfOWA8jCXi9GUvNhDyPlHxIzrZo7b0hNzPKXUIVfY5gJWBUgNCTHoeAdIsfy\ncjr/a1JGOirtImmBvQ2BNuPOeEa4g2AHSuuiJq3Ke9X+P+kjPY/E6t7woTVL\nSYmSzfJ753fJTXXdcfOYp2PbWkpM3xAImZjU5ERMDhCAWNcEBq5ERHzZGCzd\ny40Abu/uPkTyfZXw5PC5G1UBfUoRfWc2kkl53G6DuwFj7hNNj1mj63ewTUXL\nVEqZdwTPF0yUiRyiSdrn/wiesy4HQ16v95zM0+4taQI0EYLCtiWev2rg0d13\ncR0b/kqfr4zbqGchf51fni9ZLLKdJ3Hu5CTLP4Rr7tku6Gzz13HX+Kbavgpz\nTOIIj8lt+yv+dvmt19rmk+Faw//tsSHcBuOyLlr3ndbdvG2w1x3M/6dMm42J\nfNlzt/fn0Ayvf8X765sgN7dc7Hm+16/mVdt+5H9yoy6fwev57MFHwHiQs1ZU\nvJoaST46ENpu6ppqHVPBcWOzQjTPwHOkLfaqPPYn/3xfJt5e4t3voC6IpKMh\nqmW+uGfIo/JWwnqgmLEcAHxS9aaHZADbfYbpqx+KdvQn0KjJG596l14G3KJP\nygBy\r\n=Wfl6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"email":"m@mk.gg","name":"ascorbic"},{"email":"blainekasten@gmail.com","name":"blainekasten"},{"email":"dustinschau@gmail.com","name":"dschau"},{"email":"sechskilo@gmail.com","name":"fk"},{"email":"freiksenet@gmail.com","name":"freiksenet"},{"email":"jamo@isotalo.fi","name":"jamo"},{"email":"johnotander@gmail.com","name":"johno"},{"email":"npm-public@qfox.nl","name":"kuvos"},{"email":"mathews.kyle@gmail.com","name":"kylemathews"},{"email":"laurie@gatsbyjs.com","name":"laurieontech"},{"email":"lekoarts@gmail.com","name":"lekoarts"},{"email":"michael.allanson@gmail.com","name":"m-allanson"},{"email":"madalyn.parker@gmail.com","name":"madalynrose"},{"email":"monastic.panic@gmail.com","name":"monastic.panic"},{"email":"anthony@moocar.me","name":"moocar"},{"email":"contact@mxstbr.com","name":"mxstbr"},{"email":"misiek.piechowiak@gmail.com","name":"pieh"},{"email":"me@sidharthachatterjee.com","name":"sidharthachatterjee"},{"email":"shane@codekarate.com","name":"smthomas"},{"email":"tyler@known.design","name":"tylerbarnes"},{"email":"vladimir.razuvaev@gmail.com","name":"vladar"},{"email":"ward@coding-tech.com","name":"wardpeet"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.32_1599472619817_0.9731365659439604"},"_hasShrinkwrap":false},"2.6.33":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.33","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.19","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.0","lodash":"^4.17.19","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"ef86336b2c7c08b3b7d3278fdd6cbe2334798ed6","_id":"gatsby-plugin-sharp@2.6.33","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-B0Fbn2FJhOsNc/0xbSTCsUldhTcOZZfVEOsjSKT63n3x9eXNlRnIi/ofwexbSzp+eRyCPMcMD9ufzVHczpEpvA==","shasum":"4f951874d7666a2c3121e39ac226432184d5c9da","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.33.tgz","fileCount":18,"unpackedSize":977936,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfV7ElCRA9TVsSAnZWagAA4jsP/1aLdgKnFLEw2wn7Lg+L\nThwRnPbXvw3XHOwROFGO21OIB7fNQUybF5+43ksxRtBRygMT1gTwdo9sGxt6\ninIpV3SYIQP+r6KS5TyjCFg9NzbE9LA3nfbefs2ip02D3QppkXy+Nn2HyNY0\nEA5W10cwIYAHkxFu72qoa36MiwUoCA8NEKht7EsMzBC7WcbVMhxSaWWtO1+k\nuQfDWsD89VtYlwA30DyMGuFJJRXm/LMh5MI+alHj4IGtgUrOYooxMy6aQgMR\nHHH915QIWknHSqTphwI8DJZT8ORoJwLtKNQBWJVDDgNLfjG0FAAe9d9N5dBA\nwYcqJaxmXzgbSsF3s6gv+1mNPimYbw7gmN3iDUqri9pWlXwWLzuyR0PLgyHU\nkqcgBabGxmQngcXCHUdJVK8i3u5R3TFZ61UY6Il3Wsuh7FOX85n/Z1TBDgk2\nbHex0+Ji+/aoS/ezy78T8z/qQMjoQRHTizV/zxo0udI/VJ29OxP4UO3TH8T2\nefGcXyOd/6eKJ8r6d6VWvRd5sL8iUyqpwyECRGJRwnZuA1rv9I4K06umsWqo\nPC0Ibq6fxv/pUNONjh1FiKNhyJMv4hWcbgAGYDGb+pLZswnfcMoD/5So7IyQ\nNv5uB2NAEPaKL116RKsdU5kj/84oIC/4AFpsOq39TmK97pEE2TRT9oJ3u00w\n3sl6\r\n=CC7x\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"blainekasten","email":"blainekasten@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"johno","email":"johnotander@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.33_1599582500391_0.34194662833766487"},"_hasShrinkwrap":false},"2.6.34":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.34","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.19","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^8.0.0","imagemin-pngquant":"^6.0.1","lodash":"^4.17.19","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"a366e061ddd50abf12235369caf16624077dd420","_id":"gatsby-plugin-sharp@2.6.34","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-6M+YC41Jtj0Gwm5gwXVy07zp8lEUKfWZlkzwgbTwRhJ/G4M6XSkZrhhjz3Vtk+0wG64XuiG9CB4RemQg0Ksz2Q==","shasum":"a78fe6d3e2ffd70fd5921eefae917f38ea374e2c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.34.tgz","fileCount":18,"unpackedSize":978108,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfWOIJCRA9TVsSAnZWagAA/vYP/Aldvc7Ubx2+nK3o6Gyf\nTe8ZCu50Tk6gmyiKHxX9JyQyazDiKSps1h+rgdvjRWepVTUlIo8KTAbyA+8n\nCHY02A78snN3y4riMsnYhRWp8UJl5QtQNJ3Lx5yxpJBg2vAfN5jZ/WM0OFNk\nggo0ms6jRaHDCSf3v+pMMJWF2l9c+Hz5ASnksZGxqVvj/tHZqMxNWJ7bkHMK\nBovO1FD/ASKMyMzqpOyI6x3wDsodDi/u9R0Ww2yT0G7e6wsLiUSa6VTx8UNc\nVCslidBDgEuQApB8nNiCgPUMVV/HRRRMvrAkle4Hn+3JOZKohV3cG2AJj4nW\nkfC0H4hkoHFgRZGp8PDAPnO2PIyarEUbk7F9Yh3vWnwYtSvJ2G7Dp39vaHpp\nIkdye3lm72VTahGd4WNgBG7p0wgTmmwKYe0ATie9Ur9iiFKA+6EQBuVFkMLx\nvqwM+SUKLNt7mSVRAazmE+iqyREXOdZpiGI5MygiIMua3G6LHHAamZHimriu\nSlMKDAXnq6tcQ1MlBZCw+hTmtfNDoJEwiXDwZSsCPkzx7gAjlhqEngKuJCvS\nLSsa89R873aG8ynhQUmjmIfivAcbAdYZIIcPApws6DbjdjHj4TlgUrSRU2uP\nTyGvP2r813MjJudNuUtsyKaQy04M7guwO/5028iOOBtS2RPSunRvMOEmMhkE\ngoK4\r\n=g6EK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"blainekasten","email":"blainekasten@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"johno","email":"johnotander@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.34_1599660553122_0.43816046132661324"},"_hasShrinkwrap":false},"2.6.35":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.35","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.10.3","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.19","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.19","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.10.3","@babel/core":"^7.10.3","babel-preset-gatsby-package":"^0.5.2","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"a389c0e63e37b8e97ff713c04ec60bbc136d92fc","_id":"gatsby-plugin-sharp@2.6.35","_nodeVersion":"14.4.0","_npmVersion":"lerna/3.22.1/node@v14.4.0+x64 (darwin)","dist":{"integrity":"sha512-5y2ut8TGg5iIfDMnVm/WRy37vjSlHzMdJVugvB4lp4NH69FIq75JpaivshtjQYEi3cc5UonXOQWZJ6aSsM54pQ==","shasum":"d37e08f453784e39d7b1c2a759b801fdd4e633c4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.35.tgz","fileCount":18,"unpackedSize":978310,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfWggJCRA9TVsSAnZWagAAHtoQAJO31dFE2GMyIbnT/jzi\nrG9H2CkuWRijhiiJkPDVyGESqo4adk/H7PcvLVLsV2nEdTjBB/cmi7zhEvvs\nveh062pf4Tj7GdTH/Da6otz+mymPEIQOJMZ281ozv5ZC3PWmc63TC9FZwPvA\n9vgJdzngLonl7+xsMriXbg/iB802k9n9fG0YYKiIktD8McwCQmXyRzIWbC7C\ntN6fCai2lPazIi6XZjwfeSoCG95NqsOU9+9CTGqmy3ktCzmVKaiVV5yUEZGT\n8gxAaJyiraz5LEJJANWWHO34wiAKdS0wqEylkp5AwT9ZGTTL4ffWe1Pqk0Ua\nnJ+dxwUF25HtCeCKYEoZjKxq1/1odTflgq8eDGcu2fz7wsKWYs5E4skQ7JVO\n+zy6LJ/L1HZSsJT9V0TwGghYR3rV1Angor3LzHdJ+LrnNd+mNi+DoQ0+MyD9\nTsLJtrBDzPCAln5hP8XXTqkD+Pt5UJKzhOOXVrAf1v9aPpmCsf0DvB60kSY+\nk/yh0raxRAXX8oxNcwuzTRbcArRVpQnvcgTiTJBSGP2a0/s7UoRxzE3xrxKI\nMiIP6woJmqq8D60xjKXHTPopNsgpb1glsioSDsaOEDI2gnFNxMPMkwkqzOxM\nYLFbKwqRprXXzK0lvx+fGVy/fj9Q/Xf3hOCco702bB5gORc1cWBm4uyAQtJt\nqX/q\r\n=XB6V\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"blainekasten","email":"blainekasten@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"johno","email":"johnotander@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.35_1599735816782_0.8242554090727701"},"_hasShrinkwrap":false},"2.6.36":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.36","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.20","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.19","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^5.2.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"23d8966d17d582f32d2922df7d22b0f20fbb98f5","_id":"gatsby-plugin-sharp@2.6.36","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-iOm9nQiDyLSA2ol8Xde4XSj+lJJ5bdlilkNCr3rTbvSoPV8qJ8Zj4RxLZ48Rgy9cVNbgibSZQzitM9bIfVijkA==","shasum":"1b2489d76078dc371ec5808915c58dcd360d202b","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.36.tgz","fileCount":18,"unpackedSize":978497,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfYGjYCRA9TVsSAnZWagAAywsQAJzgQS7uhfENl0UxWmPZ\nEttRxgaxvgEgJSBV9vecbtYnH/vZNxgec3r9KaYYiIormyVhWKox9TIzdS5P\n6CcZenEx4/ob+IpEnMv3BZCyGGKhhazKb8Nvon48nXBoCjKfKOFH1AFR2iX8\nRmVvEVpoC7NLInCwfmBeDm8EEPW50Y3G7oXQ2QVwuUIUIkN0WI8vF8QRanzO\nziTAd5dTjW/lWOmz9mYaApuiHbNkdZzwf18DZqiwFmrAXuXFLYgM4/uhAc0A\ncs6Zx14/fp2+Z2stXI9GbhapDo10hQlbDhtqat5kNcv1SXbfC9IPnVuTe040\n8HV8qBCyrNQlOi8f5FiRRjj+4h1mgXgnOb2OQkQzd05Ig6miYmCZcR4CVVCl\n8r0ivbB7ZnaBdCzrY7V3OqWwoUkjBesKsN1n2xfWU50oHjmyZOenmlzf+VzK\nFZ+FkUBXEyrfbfZFcUUbyhUUwpmxWRDI1sSeO8mKL3hTZbK8oC3OuaZzrjIJ\nHdfjzLTCOFPwHnnFphCBzZ6HWdFHQ/d0RKnrHh86bOHqJ6iF8d+XPgvDrUv5\nr6L7KdXSyR8MsQVG7L8vRWEqdoIosondJPJxJiaG7Y9qMpE5QJ3IhXMtdUpI\nDrwaaluMHxBE8tm1v0IBX8k+PIER0DoJGcsfXKfm/NIcN7SfxxNMWLW5sw6r\nTDrR\r\n=6AwO\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"blainekasten","email":"blainekasten@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"johno","email":"johnotander@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.36_1600153815563_0.7785044009834146"},"_hasShrinkwrap":false},"2.6.37":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.37","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.21","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"e829ab9eb44e28961e9557538693fd752b221f9f","_id":"gatsby-plugin-sharp@2.6.37","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-rZ9fdFmCe4u2VJ8tdsymamJq78J3TMfzdepkCt7++z9scBTWzLewev/F3hjk/d8BeyoSp2jVWdtqsMJJrGxpiw==","shasum":"d21fa09733a6bc6419308e466fdb06ba4ebf5628","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.37.tgz","fileCount":18,"unpackedSize":978684,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfceErCRA9TVsSAnZWagAAivwP/RdHAXc2Fea4B3qt2ECc\nyxjNY9CodGIr2jyz+VbKX9pwakMbgqBlnS3Qtu8DefBnGrePIu7SzDEGDY/+\nx5tpCdWNg9VIDNOdaFVwoV53KGyqf1yOlWjCtAN4w38jvlciMk6WXoAbBm9m\nrgoU4WPPPoRlgayDEJ8RkKen6rRV1M9e/Mf339Pb3pvORBWx2WZO4NuoTa1V\nB/CEQEz8b0YB3ndHCEfMlcAWGU8A4qITt+g0XN6RDpFFBn/V9TLIvGvZ60IJ\n00kQYxjDGzohLP0k4sDFSK4mIZXcfPht0X+MpNpJgTuFJQ93q7bU1QZHtgqp\nzkzntG+kzf3p/J3/PigYVorkRnZe3JEWbEcst7Qq2MXciz+7amxjgfTZON5U\nZA84LKD17kUc3o72+xBhXw76zuoptEAObgimyYjj6FY/nBX4MXFGVB0Kwxtw\nF2z388Ys2HXekpyjLgabvLf9HStYxa6h5pMunLZbKHuQ8s6VJOY8dk3gUP5+\nMUsNO5ozjQXC6z0eLmmnGEhHPgxS+knAYLvY859PTgWgeK/3ay1lc06yAFZz\nRVaU4gEh/cMWH9L0JmC0OKtYvInQE/msH5lqpzzD4Zz1hnaXfg0E3UmB3O7R\nMWhahLkIBK0NqGBcsTJfAcYJhxiqenx3GuGMThLsGGRV+tf8/CO+z1xg0upg\nKAMu\r\n=NvVk\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.37_1601298730806_0.9001273932915523"},"_hasShrinkwrap":false},"2.6.38":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.38","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.22","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"57c79b1df723ba4e9f23a5cf431bad8d85c31d5e","_id":"gatsby-plugin-sharp@2.6.38","_nodeVersion":"14.10.0","_npmVersion":"lerna/3.22.1/node@v14.10.0+x64 (darwin)","dist":{"integrity":"sha512-Jd04qtgkjJ0QV8LIj1c+H3Z+xESjr74d2h5DhnXpl2fKpLKORw4S07//6ZHspnsgW3LAKELX/nfAFPu7E5TR1Q==","shasum":"bd83d17c0fa205502306442d4be9321a85398d83","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.38.tgz","fileCount":18,"unpackedSize":978871,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfdZsCCRA9TVsSAnZWagAAVuAP/0ywrUu8BajwnoSZkyaO\nMw7VrPvQ4AiB0oK2TLfDFdSrp4MFUt/JTy8MviwUMddhPXRbKnD+5F2xsOk/\nrsVI3qhc4cfOO6Wq6aKEjMT7kSR8YblmGP4z8iVlwyxIudvbBvWliCVN7mCX\nzIyQOzBQJloSLWctuoFTi37/M8a/DSPsmTT7Xczs/skMw+VIaFJ+GyVvH9Z2\ngBDkut1GIWjUvI56RyaAiYOZXqwdfIgmZEo8Q6zjGmRZHQSjHsKMz3KbvxU1\nRN8BG/CGyhaRdDrqiNWqp6RyyRQnfGceTLEAd9c27EjRt2uH7EFB8zd5GQCt\neFEYXqEZnUzfyqOt5oEf9nGvbAUKoRQYlySamKF5m9NODynV5nWwJlczi1fv\nUH1ty6vF+7IjMvrhdUHRAkvzHwNG+DOdHjgSKYuf70MiT/edoP92D2vmz4F8\n5BdiblK6jX+dfDrbnd3q2xhjmoynTvW5ViXtKHR1TSqQVKCnn7yG1iU70EhU\nkpUU/L86TWREHPOZ2lrlbw4FssOHKXJSimtBS7tPRaR86Xxo/nw7Jo+9s/I6\nI8Fqgb3cPyYBB+3RfTM7I+4kAXFlW0uTcqY4vUbIYcDjT2vmvk9/3niBcm7L\nz+NOz4xmp82Euc3IlZtCg9Gdf3O+EP8yS73kOO7YG3CSOhDUijk8WF65wPbx\nwKWa\r\n=W+DE\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"lekoarts","email":"lekoarts@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.38_1601542913924_0.44276119403745073"},"_hasShrinkwrap":false},"2.6.39":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.39","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"84fa4be59108d02c40acbd2fb07c96a0c85aa85c","_id":"gatsby-plugin-sharp@2.6.39","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (darwin)","dist":{"integrity":"sha512-ug/FXUK9TWvPouVSM+bOC2E+s88OI8VSR5EJhOZUEJTyyJ7KjVNiuCa9YJ+vQzJFrxcKdbukWDt+zwoo2kkJ6g==","shasum":"09694bf631f05a46caf0ed122a23ca63338f51b2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.39.tgz","fileCount":18,"unpackedSize":979051,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJffCSeCRA9TVsSAnZWagAAsksQAJe0YpPSG0MzRlv0SfJk\n5O7YuLudJ6xIGR/dJ4MnnFPwnon0ATGObPWmLjA+WQikmf7bM7E4ygIGJqpb\nlRQNl4Fr8j0A/N+5uoli52dc2CZlGnebylKAngyeKovZLNLXANNLSn3qbkuG\nIv5yjJybvBoFxUGIG9QvoIIBerydgAt6NJyAoaKFC4f4TTpytdht1uwg4msG\nVJsJ3ZIhgx27pctmBGSsI/yh+nzg1DZP+Kv4xuYivPqgVKXti4QdA4wMMJS5\nplsRKFrv5h+W4SnuKM3BQ1KJZozd/Mbc4VeU4lq4vjf85v3MzFR0frDPxo4b\nAP4MKzHHYuykO/aaUufe03lnByRC0CpHHf+otNSYja+vxpBp7TprpFIxSJBR\n/2OdEG0MvmRVleBXl8zMkh/VGlciNYsAc1TWteZ1VP0ChZdEaei1brQcfZWn\neICMLAoKRJ18hAb6OIViqny/fGBOaltag9l1HeWo054bpJqmnOS39sYO4RVT\nQuQhVXqFBMoI3aF894DkXeHOo67bO3q5N5Mv/I/gsmVAh3IWz6yrmAr6lIuh\nHL9n34o9smwQVv/0u63poNsOuXfGt6BasZNetaEpIg6YZIS65ZsCkaPwQmbb\nNYGcqc20W3px8900/NnSaz47nXnQoVUhpLJWmleYnvzYVTA/HNRw7pPupioj\nM+ws\r\n=fB00\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.39_1601971357716_0.12756520564636453"},"_hasShrinkwrap":false},"2.6.40":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.40","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"d20d2d20182d8a31a0a39cdf3beec61dc0500987","_id":"gatsby-plugin-sharp@2.6.40","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (darwin)","dist":{"integrity":"sha512-8HJMUFCwn70LS2eKttvQiakL+5PXhwthsaWEQnzsoj7C9fTg4gRi3ZtlQfII4kBq1pnhwFo5tQ30PtxtvVu5WA==","shasum":"075f0d43e582ccb2093eb0a9c058798a55108c95","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.40.tgz","fileCount":18,"unpackedSize":976298,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfgFrdCRA9TVsSAnZWagAAREsP/1buHpSlLrpuvyPTU44P\nvtQ9+nsj7aeZ+Uw2fHggGGQuBWz+9V8N4ydloVjySLSr4aM3uEWiw9cQFyrY\nLAVp5NPkavpVbVOMSJAy7ksFKJ3iSMtNxCH0OiATIai9Dy+cs3GHS/5bhpq1\nZbnJi9YxKfJCjJj9EFp96odzYU5iNASI5fX9Oysr5m7W+gbUdEJdnQvnOrWN\nr6exx157ed1Sp2y3OuQeKVrAaZEj/zw+kk1CO63/cQpjmy0Mz8XkgHyHl6eu\nlyN63JU5UXynDydNCy1KuT/FzK0vtryBemgNESS+R6f4h23XQhKb1uxGlwjJ\nFh+KtEBvMS8FIGrA9zmVJp3GQ0e+2orAzGTrDby4+xZObU/jnCJcbcRActop\nbSVc7FXDNJrn4hK2yYTwHho2ZEfWwnJN6yJQn96W37LhaGif6YMuUqdDP8Zn\nWiXzdr7UrMr7d58H3XWw+973OmiPyUjCXOXe3XlzuvQvCfkX4cR30lLavfhL\n6WneVrui0EZiUZ8lXI1TLvHSiuPji4ycIsqhwNv13dWCDjc3ccw0MkngWycF\nQTKI72Vy46f+oO2vMuR7UfGXZ41/PIaNjasUDQTnTU4GSC8IIjLBk/VMFVMH\nbN05fttjNkUKtKG8m8KEgMasrn3nbDFJvqkVBFam4r+kCxge3zY3ErWRzT3U\niHrL\r\n=d1Ue\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.40_1602247388537_0.7122452601320277"},"_hasShrinkwrap":false},"2.6.41":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.41","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"63532f7d3626197dbcbb792227f9042039875e8c","_id":"gatsby-plugin-sharp@2.6.41","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","dist":{"integrity":"sha512-lHU8zKuFdBQ3oKExQFrmrZWhaw/osGcWTSmj5+OmTtqep2auyNK28CCkJDOo2HS0vHnuoskVT+0YXPKTu9qnGg==","shasum":"92036fcc877fd278f6f84ee72baa7bd5a9a83e27","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.41.tgz","fileCount":18,"unpackedSize":976569,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfhIklCRA9TVsSAnZWagAAs9oP/2kUQTKiJ8s6Jdz0y/vy\nXuH0GkiPnRxu8dqp0yWymjS1T4wBv297h6QCcYdb+tu3KrFr5yAcgvc6LvbB\n5tfUvEcY3banHMNUZJDHIMeVlX+hwj45nU0QdWLar6Mxp0CyAJgZr9vZjc2Q\nhVdahFz6sCkT7EzkwWaoHr/7huGahg/7dxXC97OHuv9ZZAUrKiiZsfSeoOaV\nz4pCYzdC4/lEFQWZ6VjRxS3i6lRpmeN4j+OVEI8BKyiAtxW0KsS7skZkL064\nUM2KxBVbTUB8qNRhhJy4Q4DX/1DC+pOHCWnCC1mcThQkVqKhNIhpJc7LTDjr\nVeg8tus0B/qnXdNJ8GHUVAMRW+SQeV83nCtoAM0aBQd1Ez0+JGlTVjR7xAro\nvmQL19y7rWI/2nhkL0M0ZcB3fZsaI59Okd2bYeVZPCEj8tpfki4bAJNvaQjE\nIMoFePn5FrscpU9dhQXGe8cO52hY81PL44ke+aUxjcZUJufvo/SOS2LXtb6G\nR0qXYZY+ll4tp0Wj6pd9z9Mdltsg+c2crWwSOR+iWuR6g63NufSxriwNz3qK\nRY4zfY0MCLgR6yrGXrVtPtUBki4wvkx8WU3D+/KpArDC+SKyu/QNHpFe/fXr\n30EYWhLUIUm1NgUw1V/yeM1ZiYMKjpwTBiBXKKee9sCNCD0jbZ/JIrSj1qdC\nbxj+\r\n=KChP\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.41_1602521380324_0.3945961639403448"},"_hasShrinkwrap":false},"2.6.42":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.42","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"b0a3906698f41cc2421acdb6bf10e313726f7eae","_id":"gatsby-plugin-sharp@2.6.42","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","dist":{"integrity":"sha512-uqra+GDLEfE5Kv8Th1lkQKS6FIRwPzwipoWJBogfPLTnl0L3t+ogdEhN8p5d7G6SYoaukuGrix162mbQXqASBA==","shasum":"94556e8633a7d15299d6aa8dc5e9a686af8debfb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.42.tgz","fileCount":18,"unpackedSize":977762,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfhLScCRA9TVsSAnZWagAAR+AP/jHKBSuhcfyMZoCKJvnt\nGZ5yJljhR53K9CGNQW9MrlATK1XnsqgEO2rb3CNtE+wEDUOa2VPEacFLJFHl\nUzljFKmcCOGwlnOr+hJ3KKqSYngOaMm4vgA8sgGuIpRZ/AyzoiGIjKZO7s3k\nB8b4ZBlWHorFmQpw2AUjm2Lw3XwrFBXnG/HfhGgyWBDQX4GGktiS9c2migg7\nPJVnTstsrs4bT6E6Uc5wLI4qxeRW/QEvBU00YqYXVxht1TdSq5TNEquOXdlV\nl/bdW5brrPzdZtqjqWbB/kTmqP30g2RaOi1duJRy/FLWqUFu28g7IPSqfpXw\n6Wlg/lINJVxmWpJZCAscytIpP8YlGBpkkp2FB7IV8+fM8gKmR2d/E9N4WQSP\nG+GilRziZ8BCJVA3tJMj2cK6sJBiPjkTkRg5jUmcRnsqcdb/22dzmT9L9egi\nNGmoZjDpOhx5SARPhgEcCusgKzu+fdm+KyBdLgKrLtVRiBLZKei8QMvjKBQu\nPj5KTV+DKO+kn9XPftkYeKcC+R2Zd7FxVw4k5KALM3OAtahIFs2IiyW+wuGD\nJG/g9bHYkU707r75v/3FnkGZ/WlwlDUHPTemt5ehwzS0lH5oh+KO/6F/iJDz\nQe9CNcNiyBj3To7MbnNnxd3dzwivxv8rzGJJmF1VnEoRIQR09wax9nnhAS8B\n84pR\r\n=7i/4\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.42_1602532507241_0.30684318622137563"},"_hasShrinkwrap":false},"2.6.43":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.43","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"ecc0ad37f3fb6d542964c95c2f853c25cc99d5b8","_id":"gatsby-plugin-sharp@2.6.43","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (darwin)","dist":{"integrity":"sha512-/V5T8SzS/GgpQEgp34blLwzwpc+dxJJVPRXGBOZtKdcTDRAfCYuY2IuRf5FJa65lSuPRQmHdG6AoQIka/0xnWA==","shasum":"dd7f4fcf848337e64a014f491318f61d530a38a8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.43.tgz","fileCount":18,"unpackedSize":978654,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfjYcQCRA9TVsSAnZWagAADksP+QGRtZqikX1/IjPbnd7c\naOVzquvYNkDFsfSFlUvIrd8+vq1iDG9vBHiFUaf51ETfc9iwi7Vaaozo/YPn\nj4eUa0ay0+6hWIuOBc+fJS6JLjxCr8vEQ5ItGFhq9t0elkUxmtLgjdGkK9wo\nUIaQWN2NSnaTvgsbABvydt3+GYbroPzX50T7aqeit1ZDFVbpIRtmiXNWX7ll\nUGJkHtsAHcdWEr4ceAA4+bagDt9kjNeJO/1zz0gH0V+lLWrOyeSj6SWrGH9/\nb4dK/L8CKgPuY5eUIrS5YD0272HTtg5jTfEkaRPTIWVE5dWlqfv2Xb+M1IY9\neQhOt/ThnCn4lJfBVldY7vcHtrRaamjdIrZU7kRxIKJHvUSVjIQS7i7JxrqO\nBCBGJM3r4Zh+TbkDKeH3/3ACN0ELeRb8ySOyoS0xNyJosUoR6vvL+P5O86TW\n2ue2uZlE5xtwZWxMAMdIQlPBLCgakyzoB88gNAcF1F0XzZE3fUmAWzF/O3zD\nn370u2V3IHWZrNAgJ/HAT258wq1NIUQEgQpKmZbcT+OKCqAvDHS+qFc6owak\n/h49iJFgFxpI6TxcNm0PKTYHbcx0yVhZohk5n6lAca91vVFwYGPNW8JK1MsB\n1LZ+Cif4bM6aU2ziPYFsxx9+AUv5n+uUoeZCZ6xkbr2GexOPDX1viI/FwxcQ\nTKnK\r\n=/XJw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.43_1603110671431_0.22732860994433435"},"_hasShrinkwrap":false},"2.6.29-dev-ssr-2.60":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.29-dev-ssr-2.60","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"1cd80bf860870698296c30f4f05a20f0930b222f","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.29-dev-ssr-2.60","_nodeVersion":"12.16.3","_npmVersion":"lerna/3.22.1/node@v12.16.3+x64 (darwin)","dist":{"integrity":"sha512-RIVGVyUp25VELwvh5j0KcrpfNuQL7pkXDFmFVLn/UHbFCtS8aBuqFUvnhr3pA//Pa9LNDFS5WQMKUQ6tgrkPOQ==","shasum":"3ba40a9cddd9368205a63e916d227edb363b5087","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.29-dev-ssr-2.60.tgz","fileCount":18,"unpackedSize":978676,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfjdBjCRA9TVsSAnZWagAAXMEP+wTTQ7/uuupv3RLbowde\nEcvkkd7Hoiz2+sLd1wYx9Oy1SLZm8U5+UljQAOBo5CaQd+v3FiF393CISA2m\n35+M8qTlGks0pL50Ddoioe6//bkvjv1b6gTSrTQd/5GwqO49atfzME9QS9Pt\ntSamBp5/OFw97ax0EfScEnpLHpE7wuMvwffwDwlVk6l9GUDivLB43Xpmuc9G\ngbt3rrcgAIAq3qqru2RiE5uBN0AKU3RtYp78GOQVQRM4U6r04EXzi4Q2CZij\nq4nxzFNDjFDSrwzp8cZFP55aGU9J3ofcNlIDwle4Nw7oPyTZH6Tc1akidmh9\nHMcWt/JumrF+3J2uCv9olwfv0sjiK2ZvPpqy0lPyhX0Fo1mbNAaC1Fva+fOG\nNVMPhtoa/Q5kEXIlcw4dqCLPhQtjyreQytZkvA46m3ejVZ+HZGvhcSOzAc2D\nbgndPCS7jpbaiCQE8PCj1KPcjEQcVAu0QBXP1rM6PcapczLxOiZQx/nug8sP\n8CgsO2d7VMDKy306T+I7hYfpeA1RALEKgOYzC1GCd8b4eZjoT0Fx0ivfMPcm\n9ed9xuyxRqb3n1TLrNr2z6Juk8fuL0L829o+xfqINnCf69Yf18GgRzwt8LLe\naMpcH5qM398cG77mYxnf9u/oW2GoFfFIhBZZ898rzhYS84hP6cEk+q/68QpU\n2l05\r\n=F82q\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"kylemathews","email":"mathews.kyle@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.29-dev-ssr-2.60_1603129443136_0.14690011625050836"},"_hasShrinkwrap":false},"2.6.37-static-image.160":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.37-static-image.160","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2","gatsby-plugin-image":"0.0.4-static-image.17092+f65ed0515a"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"f65ed0515ae1b0615c2b0be983af3377b1f9ec4c","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.37-static-image.160","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-cdlj8ZXwxJGD4M423/EyScE/EMg1gBcaalkuevm3DKTZs0wZcGTdRLMOajSwwIQqGi3kK0lUKMM3lZBslskAXQ==","shasum":"be7e2cbee9657eb088bc44553f4bd77598d76a2d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.37-static-image.160.tgz","fileCount":21,"unpackedSize":996208,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfj/7qCRA9TVsSAnZWagAACcQP/iUqaG1SMafkCwWK7X9B\nnjgVVOPQxeGtFutqX2RXcvAuTcwF7J4ZGEyg6jzIC/XdQds1DshCyagxKQD1\nT400ju+lIZAlK7gx3/c85DtsR1BWKZWRFx95VqLG797pOqn4zLgXmcVGBpTG\npkdcTT8j5M0Wz8pvx6fdl3nElQYizBMIkcTGTC84+Qfn60seiJhZmJepvSfu\nk+BNgbnLNZOKmw6uC6ywF8YeYCr7dqV4xsjsAzss0HREVgAcCTzkNWA7sEl2\neBq27xC9L16RTSBRV3mIwWLK+HEz1LserVdRPU/JkjrMFjb6GZmwduF4arIr\nQSMp1A3roLGOPcsOoSh+hYEsXJ8WjCvaBcC+UmyOXPUITXbKgnXn0MqrDrra\nhs+t4pkOxGVIuob6zPMTL+V0cdjmt14XG6290GuGV5yEmiQJGHQt71EKfvop\nfDkxpou8l53FQSKW6jDCmT4VHPXo4zL9IFdIJkBMxHu7DYnpMmGp78Vhwt1P\nDrbhSTkdezNA6O5v/d9S0rwVrRHDeCn5JOD3d/t89ZXg+j5tbI45mb5jUMkN\nHZReuAWUDeyR3ZP/TEdkVkMrniBePa2Y3Bc2eI914Kjf9dXWDMsusPPnXv+k\nVdSVVoPO64PHSY1gJVVTfX372NHNQOqnez2gOZZu/P3EGTKkedh6AtwUXhlk\niW1u\r\n=rtpJ\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.37-static-image.160_1603272425735_0.9514840536386286"},"_hasShrinkwrap":false},"2.6.37-static-image.163":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.37-static-image.163","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2","gatsby-plugin-image":"^0.0.3"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"22f4e8a4afac558e4f49fe49e15cb81d1493e9c9","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.37-static-image.163","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-ADLllq3EMTgHCuQ4iWRElJc0pU2lwLUEzVGl04dbo0v2T0+1zvUr1ZEFmpN6tBCJVue5ryUTYQP8chDGTwdO/Q==","shasum":"afc21f089d596220afac223dac7575abb995815c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.37-static-image.163.tgz","fileCount":21,"unpackedSize":996136,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfkAJZCRA9TVsSAnZWagAAHvQP/i/NVnDrPOh2hiYBSXpb\nqBuxUT/nYSD22ufZvUh9QvsLqMm09VDGPRHL2ATy51hJJDoiCDWf/0LcTHeG\nGjFTE6dEbeEaO/y1K/X+8Wx24w+d2aprUgj4jDjFQoXr1MMm+T26j4QWoO4M\nVaZpsayjsKjLHtRELAwhZSJKIzS9x/SwDvaNdTN6gjxLTgRha9e5H6sRottl\nu8XFm9tf4r75yiS5XfXI2O/aIVKfVwOVRo0JoTL2f3u0Hl66kyXakcunquXy\nQEnef6qaWKPW54kAD1LqMUocXm3Ww534mFoj0nSL+/Z/p7Irgtn+F/fS0SdJ\nTfUFf3f4wUAyRwJ8mPBzgDQB7SqzHzW603FL7mzt0rLOUXuT/ydq7GNtfIdD\nlmMRO08hLDTmKPtH5eorxpswPuZmj67zNEw69MKZMpf8iW+PXvbStB8bsr+z\ngTJuxBfrQ8lKbgUnw61s8jgoobTVb271yTdjJzXYHKPxkIZhBX+Zd95l9VM9\nUwhwmLe92AGjfef/lZpizGljN/g5tOwsdHkbK2pIy2Mgnziu2TW7jiyng5dA\nbCjZepBr7JiBS4eCS0pW6LIIkAbkPIlGkxt1crYw1JifmwyY/s8P0h/DwjAp\n0TRFHeKsCPNR5wtqPwBQ250mr9Rk+sxBu2buH/ukc7vFFpiZtROdz6p012Ot\nbYsn\r\n=MXDm\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.37-static-image.163_1603273304737_0.7424873000014849"},"_hasShrinkwrap":false},"2.6.39-lazy-images.16":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.39-lazy-images.16","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.22","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"22ce6e5308cc042ecefa4e5b8280945594afb089","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.39-lazy-images.16","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-M4CDjDgq9ePelTTSq76aLze5WuNuxF6OlXGVcLaZrI+B19Jf2Ztd+XJ6m+AQn2SRnBo1iErPurxyysPZX5WhRw==","shasum":"f7d1b93b7ad14174c223b85efe0d37bd7664d769","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.39-lazy-images.16.tgz","fileCount":18,"unpackedSize":982018,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfkA73CRA9TVsSAnZWagAATXMQAIH6YjeU2J/FLcZNzmmm\nW7UXXNe2XDExKESmOt401Be/shbX2lk/aXhoD3XGB7fDrdqOnirXSJFKG4M7\nKi89Yuy1XBhWrYwfk2O9VPwrao/zJdH3gqWyW6MuzsiXpSq5alOA8w81MZ+i\nb9lpjTXxl1iS/jqDSSqMQ2+3U3LDE1vF/LiiWBSlpyrv393AEzqOt3W282b6\nJrSo92vTiFtvce0JbWOh4Hy7OFCpB3Q9RId8P0hYdAYWQ1eko+w7oj1mczKd\nicxec2sQok9g9OrTfQ4ctk+Y5QFpLRWq4Ldd+J120yX39rR0JIY3LTMr90OL\nhIfF7Oxg5ZDuJwva05ufN9T2sdlhMv35OtTgfF7XsEuA7cOqrB4MrEFXmLmA\nIrtSC1kI1SUG1CVpCZ2IoZ4RTEpr2sGPor4WS8402tXAFzg2SlPRW4VppUiX\nFsgtuuX0DjWQdrW+pT9COWVbNhT+3hMkseJSo3mXueTjryWw82zb2IWsHl1F\n3yZki0GDq7R8PPhrJJZaygJSazfDDU3EENNQfTtIcyou0UjKhFwfiEbXxsgw\ne64YePxIGOzxy/sMRG7IcMoWP0J7m4LHbDJv4bJkCpaDhOpslULj+39kLHER\neWlvU5arxwQMyo99y634FZGFER4mrQcuJ4TPu/2y4r3bv88kRd8w7ShcSPXm\ndmgL\r\n=4ql2\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.39-lazy-images.16_1603276534577_0.031485053027874965"},"_hasShrinkwrap":false},"2.6.43-lazy-images.60":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.43-lazy-images.60","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"139578dd78f253c9ae99d4afcd5601bd7363b5dc","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.43-lazy-images.60","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-qF69sioQwr5QPubmS4DSDh8B8bpMPtznb5DEO7ioMx+9bRHJbvhDpnIjdsbgcquFDWPm4mUgcoUox8heHV+0BA==","shasum":"fd06490d3136ec0cd02c3899b104f760af140fa0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.43-lazy-images.60.tgz","fileCount":18,"unpackedSize":981163,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfkBOsCRA9TVsSAnZWagAAzAUP/2qJke4jAWE1wNkhSDYq\n82Bd8+rhw1w5ngoCc0aPoZqxWVgXu5fu4tQT+UrVaVoys/xSTPEMXrWnHG+I\nhgqMRnLX4IdvYPXQ6Nux8ussUhCl28e9SiBS/5XL4tdk33x2gWs4fpjUZmdw\nSPViGiZujQlH//uCHDtOQT+9vQX1NAfx5wSzUFr+2uAhhDonUvMRzVkwQd1z\niwKw2FzdjSNoBPxJPYgbkJ78NgyIxe9uWdPVOyqYOAzyQ2se/IaRJS428b2c\nPVYl4UcTsQgVtzCCnCLmG7N+mM0qvqeeJKfvj3hIs5v7uO7E7jsvFn9U5yio\nPcEd2GBa2l4Qi09zSGySBcq8udW+GGl8I17lCH3IgzgU1verjG+tUbciXljM\nGsyDnY63YhEFdhgbCT5S8EoAz5PtGqvxMGcd0YpAtLmssBLyFunIWvo4gHSY\nwgMa0Bnqw+7qXJAkamT16YZAtyNtAzFbZtwO/aCmry3RTomxqTJUNPWWKnkO\nSbUa75z7FQ6+LWv34fw8ceCL0vJ1MJK24Deo6TRbzF5e3dg9z4IycyZWTCQP\nPB3gicZ36dRmk7z/7GMnWmBvAIleDEpAP9GpRkP9UE6GZJSJ0+OL97SIkaUw\n0l4CMf29+hbtyDNbh0rLaYfWrY3lqfDW7OkqYOXqILH4JnsbJdZrt1HCyZ3b\nbY46\r\n=qUIL\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.43-lazy-images.60_1603277739250_0.2361101906462355"},"_hasShrinkwrap":false},"2.6.43-lazy-images.61":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.43-lazy-images.61","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.23","gatsby-telemetry":"1.3.38","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\""},"engines":{"node":">=10.13.0"},"gitHead":"dcc2e003f91c6f892203ceeca6d5deda3fa71a08","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.43-lazy-images.61","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-XlAJ+dhRhegikAsReXYbtXsrZc78qD+HsU9VbA4HvKkU7cHV3UOwsfu6xs5wTha9BPXUOw7+aKpjQNj3nUgG8A==","shasum":"39b9763585301ea39445d7ab5a76e56b4da280fc","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.43-lazy-images.61.tgz","fileCount":18,"unpackedSize":981307,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfkFvKCRA9TVsSAnZWagAAp/kP/Rv6Tt2nJDfRJ0NyAn1t\n278SDjjDXxpp+w0hRcBnqTL4Sbqxj6acRCoQHfV5K/hcYcuJcLmSMxeZBpZ4\nf2PxtlpuevHOd8MLUgqkVdCFJgHEqawFIR+XLTJNv60bbumhSgGhRc/HN0oB\n5JLpNKMW4jFUJBfcojNMktzV+DjhjV2Fh238fJ+VmJYAwTYEEz9Z9Q5YDLlp\n9SW74PLLpxYCj4DT2SzG4rqcqAMrWLxlqxMEnoPVRlWukF5OHVAt5mlM8QvC\ntDw8NYtjpncC7XEeij6jlAxvTbdUipz16WM4ms8AdasLvHeGTx3cp9ILFHmr\nmqH6d6Nz50xuHcUkMjyWmwq2OFgVoo6xEXYDCpQkcdlmKr/6ILxIChSj/5wR\nbLaWwXm5XNonTY8PIq/ZE25wjb32qTgVTJnAmb+Djw8ld22z/2kJbdfotVKg\nM0GJtra5D1cb51Ju2Ghz0ICt9bmEFgV7bg8Y8v+/gFp+x3aIYk9BKs0VcdI+\nsKOaisX/JNoNYay8KOVWvqZaqIPNJCV1SxyWuqu9beOo9423IwzGnYkbNxV+\nqfo4tT2jCKoQbsdxNwzc/mhArTOYVC1yj7nIntH+/3fGahJOJeaxEZdN2xza\n1ClgF9rsATbNM5ymcKGBCFYhWVN8iQCLM/2p0atBgU55KvhSf5e97qFsAue3\np6wt\r\n=fAmC\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.43-lazy-images.61_1603296201720_0.7304847397262835"},"_hasShrinkwrap":false},"2.6.37-static-image.172":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.37-static-image.172","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"0.5.3","cross-env":"^7.0.2","gatsby-plugin-image":"0.0.5-static-image.17139+92768e1c9c"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"92768e1c9c048476f09186049bb34c12fcbec910","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.6.37-static-image.172","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-NYSHuix37iz6X5auzi1wbjgLl2AmfY+/Go8ZpbqQlfjlFwtpR8dVu7fAZT6mVDw/AIsWRjcssQ6gg7FumN7tPA==","shasum":"5dc980039f67114027110fbe8db32b4595375c81","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.37-static-image.172.tgz","fileCount":21,"unpackedSize":995790,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfksprCRA9TVsSAnZWagAABfQP/2R5wTeeU3klvm1cAoZy\nhHVoZlpnILaQCDymqDzRl6NtF+/c8c4udWR5+ENBxBZFNJNIDnKpWjFqappM\nbNlF4Hd9OgH2rbvsw/To5dwhGM+lFLi4N3DNJ603C6CDdf0PuW0E6ZFnHpPR\n7Wjdt01i02c0WTjWmYB17PFoElGdu/uum2sWAsWoWM+O2VM/fbY5RJv8YNfd\ns7m94Srnme7bsS618mhttcxp6u56K/d8ASCVH7nu/DVnQCYAT/9MOFIiOIfl\nXCZ9bAg+FgL1W5Q7V4xGwwADOKdWNY8Re1DmJOu83uo2UWlpghXFHK/ivB65\nOaHKxP9ToEeJMR1aAgF8vebiyTkXu5nAckIsUq3Vy0H7DVXdRhaIQ9ZZDnBn\nkTCNuqg40IrxyxEBOLS+bsB4VXUrugGHBa42qQ0rXYphYIOYdQ2uHT213Hby\nrJ+IWr8a1A0HC29gZh1zqmijtI/b+00WrPTdPiBSLYVFSkWNFhKFfKBm7veC\niYn8A2NgEjjB22E7/LdJGOvfIjB/7JA8l12OxuCuzqTbjHjlti6Ct56m7IeQ\nkeUjJpdvqt0VFD+8AMTSTTyhPj+lmoq6mGRv5LW3s3VWg+TNHo4L5diToeeB\nP9Lgx6PdfkuBrbJRrWeIT5ephN159GX/Z7Lc1W+o6JXocOcwCH9rxiQeBFRc\nfHm9\r\n=GGOw\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.37-static-image.172_1603455594551_0.35260656881179697"},"_hasShrinkwrap":false},"2.6.44":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.6.44","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2","gatsby-plugin-image":"^0.0.6"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"5fbfaa81260fabc88aa920b04f3d51ea568323d0","_id":"gatsby-plugin-sharp@2.6.44","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-GhTzNMmdcJtVQirba97P6r6IEQvTSTHnWzbskW8g0TsaZ+Wx20/uFnDZCquT4F8EzaqM626RqK53vUmiXFHMGw==","shasum":"cb30c41b2488639e060e461f819f8f5026bfc28d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.6.44.tgz","fileCount":19,"unpackedSize":992952,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfn8dOCRA9TVsSAnZWagAAelgP/0T0bK1QFYJTMvcbMwrZ\n8k1UdIXMFYK773pZQm4RHDJ9m9vtuJApEyytqwYuaY7verG15NAG295X7twI\nEbKXC75qEo5j61poIfCx26xxYZ5o6LX0kKB3gX1Olik7KUZ1GswH5xWlCiVv\n4I24xW0o2dRB+M7nVLfLOVf5FJcWU61G4PizVPnXJdRDJ56/lQi6yQFqCB+s\nRAG/fRYRoAAWKyfUh8eppCfW35qGUPLukf5izkn4WN4SJsEvOn1+5ISzzE8z\nPZUVQhqahlCOLGPvt5zBJlVe4V5OiqpBzw/jgsXArBCc4OPhMyoLzNlrE3zb\n0kDyeV1O88OxdWl+LqCI/31vIFKjVD0yyJPmont/IFBDc4+yLcbP/i41+OSO\nDSC/DWj2ZxFNWnVZHvhrOzwmXogJHp0DhMz4m7kjzTX3TP46ZtlAMZSRkL7y\nkauspp9MPFAe1Mw3GZjjEAJhJhs4bWmn+xiC/okOR0dQ16IjBXwTVOX3uJbe\nePIpA48HuUAtdC7g7LamcdoaPsYns0tPTgOKpXSD/HKCBmjLCkh4B0b4S4jX\nkCMxyMBi8gxvlAExYEQKHPvwcDKCpj0NrtQPAJnk58xo5uzvVaidDmpsxgUV\nBie89xUHHCGNMpvLq56wswjfkxAQJTusMlLs6Bm+tyK4qOjF8DVYUdHcMM8X\nxMrZ\r\n=sAp3\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.6.44_1604306765685_0.779944983266935"},"_hasShrinkwrap":false},"2.7.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.7.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.23","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2","gatsby-plugin-image":"^0.0.6"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"9022a98fcd614eb18480f8aa0f294d8cb3b23cf2","_id":"gatsby-plugin-sharp@2.7.0","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (darwin)","dist":{"integrity":"sha512-l53FeWKDRE3LpNFUsTVBv18FT+u/1gOdBhdhgM2pU4oj/e0gWxTAJ8IoDVQuoYAM/viZfnRnTsU9YEieCzqzjQ==","shasum":"5bf1c27f30481c61e01923eec28c6c2b2496161d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.7.0.tgz","fileCount":19,"unpackedSize":993206,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfoA4DCRA9TVsSAnZWagAAjK0QAJkb71dTdHu3SBVXEATm\nyc5n+LZWh8AYq83fTZ+UlULBl8Zv35yg51yPdjRMP73ClR/CvNiCuSseRJmW\nhu6zUUzcHGrVmrfYAhmj3I3C0ezmKcX66/Et8GpZkiU0p1mIkdexPXiSUC9o\nttP2sCKDSroJlehyFBW/yWr1Ll+cJe3cFOClCLp9AE+XsBzjplg2n74dAdV2\nQalfYok1Il9PtzjYKDn2VTpL0uf62zy8giraALcE4c7dHSHZIH5Sw18vzlqW\nhO+8RYh86XYYcgCZR82yEkEdnfP5Snbl73/SSWstvVgTZLnVkdx6EOidxj2F\n8qACiEnX20YDpqqj8lkUoIuvorlIEo+stH5rz0VpD7ciugry3HJLzufxlDav\nu5RiWWE3ADSl3RfzptTazZFoL/b3nL9kUyBFeX4xEewNAPjUdRdH3vnUEcJk\nhyWYL9wFbfG1HQ/h7AwaE1DKxF//pRpBzkC6QBfrbZ2WT9rCIuF+b8GCiUGq\npl8g0xonI7MWNAAfJXhtQmOWRZHXjpye9iqmO0Rs70jXNRRoP3IEGSCjIgBj\nlQUhroAa626eunVn63qDmf/SGeTnE2RUNAKd7HqlibcRbC1nmppCUd8cQnmz\nBWDSYx/fVXhpEClqzfA7QM2luoqO+NzYQPBjPIAKddmQHFLk1k6onBrhQNVA\np8xb\r\n=SACK\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmUser":{"name":"mxstbr","email":"contact@mxstbr.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.7.0_1604324867072_0.6003952766341651"},"_hasShrinkwrap":false},"2.8.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.8.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.4.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.6.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.1.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"5c6e3e67b059a72147075b04e99df44da5052c65","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.8.0-next.0","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-oetftL4v9kSAiWRIRezOyUC+FxDmIswVREkb72FadBskvZNScXGForF3OKfPAUwF5lLLm7YpFpotyj55tTfeyg==","shasum":"b185bb2c8ad94f5849250bdf40f92f4f831dbff2","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.8.0-next.0.tgz","fileCount":19,"unpackedSize":993233,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfoYbSCRA9TVsSAnZWagAAnLkP/3yANApXab7QnjYsGCOq\nLdJnWWBMYqhzuBKAdXIoGAhY81w4KOhmo/sOugI89RE3XZ4j8F285xmbnZzh\ntENtRC39i2vm+SQT7zkGSngswHIwQF973GgfuES7EsrwtMqHE6lbBB1xrbyg\n0tQhIuWu5bfSsM4zy/yuGY+Zq3vOkl8W6hK81Se98biOgD5g1QXNDOPkG96k\nG8rfwdDi4GBPbr6e4zEx8FeUCgVlyrIip0lP/tsjgAvo4Q6KOvQlCsm8u3+G\nerjvn3akYDL+VAWV+xxRrLgUb57MAmLZP65+CPUO73tVT9wCC2XflRMx+Y2x\nMCybz3eI1hk648KJcfESa8m3KPqTqf3D6PZk6v5sraa+8r/rb7lHRWG7hZO4\nOwKxZdinN3C4emRP+SJaUSovPjYQgis+VCGdK0f4w4K8zAawlORVIarBKRrh\ntsS/fD7WONfVIIyCWo1er3mvYEzU5wT9Uaos5UpNb5M15XWsmjIZGSCEkmo5\ntiexusaW5NBa2A7leZ6LOVm7pTxu8imG182rdfIaQ9GSU1UO52XiJxLhcve/\nyQWsDHAJDTQ8G3s8omJDnidxj5UV5Ken3i+6jK4YLSzYW1HTFWy91JpjOWdl\nf8Vw0dW1mxxq7wCg+VYkyMuJhCsKOQcsdH+ay9AhgX4rjuZelZRFFbQh2y+0\nqfXN\r\n=UgzW\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.8.0-next.0_1604421330257_0.4618855415955565"},"_hasShrinkwrap":false},"2.7.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.7.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.3.24","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","babel-preset-gatsby-package":"^0.5.3","cross-env":"^7.0.2","gatsby-plugin-image":"^0.0.7"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"077b67fa366eb5c5e0171e87eec8c8810d44c0d5","_id":"gatsby-plugin-sharp@2.7.1","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-sS7vGyJ3J4vRY5NrfmSKqaDMr/vgyBeAlkizvV5xTxzghOLE8u/c6HNCrhwzEP5nMdixepAm1+YgOS/P8tTk4w==","shasum":"8dcd7f6e7007ba9407bd1203573e2ed2e9230e4c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.7.1.tgz","fileCount":19,"unpackedSize":993390,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfopOBCRA9TVsSAnZWagAA9dYP/RaZ7zOfML1MH0jZsYTM\noDva1dsZ1Rw2rb1DLvDyoqVJ+MFemTBl0JV5CipXHYNA95SkTOfrMW41RepY\nJ5jHbL4Rb4H/KyUnwkfsc3fBoSHdPjtY29M7WAbM7V3Qe+XsIDu+dTfDFiUA\nFRXs7ZB6wNnClp/ClS821o0ihdzVJ/Q5OUJPOUimlme9ZCX0Rr2ZqQ1ejPRL\npFtuSvrID696qKpwqbWaTI8vmL5hqaEA+yIfaz9bST5pu4PpsRj32tEdYsA9\n1/Vq0LYSzUl6BnE8fi1E0JNE+eUkz9VssGAlDBoczyxkBV4d0t4BIsyQxFRB\nXjwWwk58wA0TFmQ/4J/OpJog/uoYLx9NZsttB2c3NKHTuTITOVPoAyo9OmKc\n8kJUQXSQeTtvJpW53rHB2Jrtfp/GyyF5PQDqX+MjJCyQE7Pcsbp+RwJkvB9F\num0v9DAhToXLIuj8TPrBnIvFYq4SBx+R/nE3PK0quFYByyKMVxVstRF7hSxX\n7JFRAViQPbLPW31EKAxoRPd4cTwCmTSnqNPMWW6VynBbKi2jW07vmorLZatd\nb8ppVC2iytLGNpBbPKTN1waHsdV9uBCJlPyd/YOgNzkEwyKI4aJIYh32fJJB\nsnLIxnUkLtnvQtJXGIlW3tL5G4ApqMUoYxKtfpn26nnUgz1uT1cvQhbW1+o0\nfEGc\r\n=gGVi\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.7.1_1604490113280_0.8630502449789832"},"_hasShrinkwrap":false},"2.8.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.8.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.4.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"^0.6.0-next.1","cross-env":"^7.0.2","gatsby-plugin-image":"^0.1.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"7337f8cca6afe5555deb1e766b81e79691f5333f","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.8.0-next.1","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-hAPLig95fQkveXAWUaisjmVe+aJNbpCh0Qxb8V8HVuMJojpexkE+p7B3g/GP9t3v9RmwJUfcZJSzvtZrepG8kg==","shasum":"0509ed24b168c45586004c6552215f57a5ae20ab","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.8.0-next.1.tgz","fileCount":20,"unpackedSize":995957,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqsO3CRA9TVsSAnZWagAAm0EP/1zIBMl/ETfVLy6XsiP8\nwvrfeG92kN1nHTQ7SQOJh5FBrlAHdRSF9HR6I/nlw6DZ30c3IP+mVP10Xidm\nh+Ye7nxyk2CRyA8gkAxw15JzEaQv1ZOXnikQ51Z5mOrkeUS8YdkVpYjZepyW\ngOmZmAPSJpowJVeUWmxjSYPtzUb3c45mxmuHFA15tjA12/PoAjjnQIMdC8Fh\nsOiES/kBXRaa6J5qBI1/HjOLwLUA3KaontI1hhIH2pBPGOH/QBodR26uZlvG\nVn/8xLpj83i7AKtsw83vTIHGOtBi3DrMwKJpO/KqxHIxoc6yA3CooKonnM1y\nT9W+lpn42rkqNYnQ6CeCG2TTKrHgqDdCfbWsKo7fY/6qnTd0Yf55T8mfx0c9\nJvrN9LV1zUmYez9SLvjhlolss6FfHCTE5K6vjvqmEmxT4VIXKJivQwuH9xHZ\nkLSJ9pWb7A0P8ElYDenfO9cOaMbuV4P6mgwuZOkU2sywBJOTFkAxFnB5eT4M\nZHja8BdH1VKp6tS9YbafOeLN3ihwpXc1cnQcGeE5XqCoYygJPadXj9fLpuaV\nQ3O1aLQL5orhLWI8jhOY9r51Ygsdz3TlDWb2Lyi8Fg5xs+JEQrZC1xyxUyDq\nR7x8kArhoW72vMBRMZWKZ53j7bHWiLBOcGvBYQMxEpfI8BL1d6cbp245UbwW\nf00V\r\n=2jI4\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.8.0-next.1_1605026743042_0.5363358439535284"},"_hasShrinkwrap":false},"2.9.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.5.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"^0.7.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.2.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"3ed71f9051fbcc72cfb0ea4cff82a0d3734fa2a6","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-next.0","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-nK5p3+TRhGtBHEwl8PZafkGpus5jqhNS63n9HXuy4eCuAl7AjkDX/xdk3yrePMSOosnDfot5Uu4n9Mjb6KHAgg==","shasum":"ff1fda0c115b4ca5d9f25ef4ad17af143228005c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-next.0.tgz","fileCount":20,"unpackedSize":995957,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfqs8nCRA9TVsSAnZWagAASKIP/09KlLxhQyPjruM8/JhM\n6vTMYQpp6xd+QXz09IN0BOC2Auyq940ehjLJ2tNzbTNeE9TAhu0NJt8+zm3a\nh03x6v/zJ4++NLbphfV4y+SFEzUuABEdfPeJsnB9M/D24WodUyTVUnQVLiKQ\nYwnycMDFLHABspug5+PeoyL27z/ZeTpRq6q+2vCXAhIuKMvxY5w0q1fpr1PI\nqyEeneZVezPvOqpU2dgx2iuwebfMDb8QY83A4tCxwmYp8+vu60HbHNzV9UHU\nRe0bk01YbEXxKmfYxnE1o9hxMR39RvS7+9YeXJUwK85U3597HB9uz/Qp8QbX\na3C9x9hKUxmVlaadaH6CYNRzvvdC5Bpc0IvY0xs4A8Vbqys80z3+Mu/cfRkL\nYEv+oUdE90eCdrGo7eZCRHz8CF9iWvTtYO9K3oWlAWO3nTjsVG+Gnb+nvLe+\ndEXkjm2mYBuDgUCfFxUzDjcK784re9FNcDo6/unabJd00/IFyIgFJCFQDPTO\nln3mSMyh7L5pW1IlvkF/+M8RAV9p99Joaam6YcJ2JavyTpYz8vCA1Nklm8mH\nc5CA4o1U6zuHBf96WYzz8bC2PZzqb+EJUvmOZ1nNMR/Kldb2FwQ0TwLxv84v\n1gjea90RbPlo4bE6cnsbKftzKPE4xdKznAeVKa73DIvzi/w1mlvEhOTSBmFK\nDCGP\r\n=2UwT\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-next.0_1605029670509_0.9830890711873215"},"_hasShrinkwrap":false},"2.8.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.8.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.4.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.25.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"^0.6.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.1.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"135e554aa9e8f10a282983eca65c29ffae738339","_id":"gatsby-plugin-sharp@2.8.0","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","dist":{"integrity":"sha512-Ao0rSWS1zjcRloWZgw0DkMV8/W+agf+cXoKSJHI0br7nWrLMyFjWcC5e89iU+t8U40ivngzMUjxBm9S7qYCa4g==","shasum":"3f38d0a3eb1174c60a38a4ae6db5e91b51511de3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.8.0.tgz","fileCount":20,"unpackedSize":996119,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfrW0qCRA9TVsSAnZWagAAsawP/2lOla8jc41ReLZR+zzG\nZ9l5GXbdrFya1uL/3llTvGVGx5vv0oj4bOI0Bkor+ogoCh/tmuXHS2epVVtF\nWC4lCITu7OSMc8C+E4zUVakabrpASg0SlQk8FvYj7tHTNj5gEibxzURdEFfr\nxeKzg4X8Wx+jdv5yo6W/qN4zT1saxcGC2MhvApNByyvbT0JswRtnnHrc/3qY\nVFfPYcFfxGRWyhmGVl4tol2X+YavdIPFusbTkzbZ7jlMSPcTYagE/YERNI9P\nAzBk2526LzTgQgw2HRZUvKfERfuQvKwPvbbbLQ15brjkL4oetQbvjV3Z/ZsB\neO7RLlH6GwpgJ83TqqxMk1vTwfq4wDX9wvU1/NcQtgTye05BCYZhOpc8dQ0d\n8PJ+lJFEzoYdES2+cRj2HKVeozn9gbzxhgJHb+r5uFI4yb2KkIGHWa9FRRta\nbqFd9cXsheIa+wr8gVkEELsr8RVdrXddfahMueRkkcHqor92RrpQV/t5HqfQ\nF40wW0tzJ7fcJGgD2gc0b4bqrem0Q24IxoQMErn4I7yneWs8DST3rEtvCra1\nWmzt8BumF8f5jatQl3N3GxA37jKEWTKnf69+1oGxUgnqgkUGW3kQIBtdLuu4\nT25N2trqh/nJBC678XysVP4QZL8chM7VoM4KxL3YmiI5cHCzhTJeqCQqi0if\n54TU\r\n=SSLV\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.8.0_1605201194095_0.10963696733971551"},"_hasShrinkwrap":false},"2.10.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.10.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.6.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"^0.8.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.3.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"fe8346543838a1eeffd1bb9b1b278e99135a34d1","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.10.0-next.0","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","dist":{"integrity":"sha512-8rOcy9sx42SvbBKxoVcrnvl/9Y+Y3JMiQ3tDkt7a6lb1GpDpnjqtS/rTF61vF9mEA9wUKtlgPOMXBEUcYQqnWA==","shasum":"5a86cecbdce4884aa13120d384fb327ce299c693","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.10.0-next.0.tgz","fileCount":20,"unpackedSize":996164,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJftLyjCRA9TVsSAnZWagAAvoIP/1Idv+uJMjmeQpvajHm7\nYbmAM8AuQnI5RX/yv515wmr/NDE836SyscEe/9I4iBRvhcBkBt1bSSTvSlet\n4WOVxT1bk0fZmkBsuYj/TK+g6IFM+dFvIUFA0XOFJ6GFO0A1T8GP+ReMTViH\nX+Mmhr4qqdVJcv4WXT3HZntU7yr2sfwUCucq+AZRpq37eLVsODzWap7aWvQW\ntYekq1NZA8bzXJ7V5cBYJ35IKtrJErlKlRzyJgSYJJPb7Bc92U9dL5610hhW\nygX3WPwiFSmZqUgIcj8NEMocJJ6vfsEjRi+xSMiSLteJNyE9+mdfe8MQNQdT\n3xzjpen2RVnD+ttdbHT8/iNYiJRsP0uqK/okkcrf54kK9odIV9lb40fLxYNf\nrAxZ1JW3inWQ/msYnzQ9iI5hmECKP6rTXBMwol/ZP1fo17nNaaP4mSgzSBoq\nFLtSuett0gn/1Z5D10Sxzhm8YAquq022Qb0qjrMRc7tP1CDvz454lzZ43cJS\n7Qze3X0p6/rXhYWib0LWCfwc6d9PYZQDgRt7EZEgsJAXwpGt50GD8U1Ud8r3\nWEaeJFOO5PZuw7dJ8SlsuAzMQ3Qeyyf29uyHPl7yFtVnsVaYnVNiTKBBiYOD\ntOv4VOaT4uBeYlnygDorgMiWtQCJQXI9RTaU/UCujMVuttzgosenwhIMsN3U\npL1V\r\n=rPhY\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.10.0-next.0_1605680291209_0.4108507053927377"},"_hasShrinkwrap":false},"2.10.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.10.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.6.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.8.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.3.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"9e6091325485bbcbcfa04bccda09170e383ae395","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.10.0-next.1","_nodeVersion":"10.13.0","_npmVersion":"lerna/3.22.1/node@v10.13.0+x64 (linux)","dist":{"integrity":"sha512-HzrMGiMN1elGF6hLXhOL+rVNLcBECiuNB/av2VAjIhBoC1bqZQVk6hZcN19CYy3ZbVSLNQQRPEIOI7VV1EIZGw==","shasum":"1c56edd1974b9c5e76323cbff07a2172876f28d8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.10.0-next.1.tgz","fileCount":20,"unpackedSize":996371,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJftTB6CRA9TVsSAnZWagAAfX8P/1nIPF/qyn6typreQPdJ\nJ3pcaR4fb9ZgCcKRWQN90wqi8FsL/zIMA459sfO7GHLjpYc4Tc+tSOVQFSE6\nFuvTUOfmzhafvU1f2ECXS7gJsUbOl1jzpt4K8vAHNsUlXfHv4MRB/EiQsu8t\n+KQ1ImzXzazKUJDU/tc8uqBFwpyYIFP/FB89j2bt86u1rAT9HIC1uhcOcDqb\nBRulg/u/B3cFSGiq3bEHg/sDlzQLiSVjutHu6HJ5QM0I8ejuhX9u0/GZ4Lbn\nWx1LQOvIYgBeeK63Pde5T0Wdgz+6NzrveUm9RcggqLUA0neBVpNp/ZK8uKoM\nb2tzPr/4rXQVzXMNGpek/InDTtt/0m7vDRBVsLhKULXz6f16Tu27fTDjNuQ5\nUdegSEvCjrxLGlNZSS7Nnbi25VsY2WxH/ysMkCW3u26ttJKQOSywP9E53B//\nmrdrAS89lU9pTXIhwNa5P0BO7lslhFD34IyiCd51i9zRC6N38JlumH5yj3kF\nJNtquRKdm3XBPNdqW1+jG4H5Nzx0sFe4LPVjkktT5I9Me6kWLJd4s71HBAkY\nGFU7w7C3aKjcihc5omq4W635ljwNpFZCILZoMLu+3vX/vjxRLuFJ+Zfrxlau\nSsijW1IETIohl7thOnyLWZwdjiOijCHE+6ns8Skl5sCLdHTc9QRB5Yz+aWqH\n5073\r\n=fkth\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"kuvos","email":"npm-public@qfox.nl"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.10.0-next.1_1605709946175_0.9252466075769263"},"_hasShrinkwrap":false},"2.9.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.5.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"^0.7.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"3d607f1ae0cdde12fb8de53e6d0784f83875df25","_id":"gatsby-plugin-sharp@2.9.0","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-jD/RbubKS0vrk82R5ebY8BovKgmCy8oLjaARtoJPm/yyCqvI0iFPmqop7S1omNQqL9728JxKgEEnC4kMMaxyyg==","shasum":"3114b82fa01089fdd323f6e8c9ce9b83819e1ac6","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0.tgz","fileCount":20,"unpackedSize":996119,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJftsCWCRA9TVsSAnZWagAAPs8P/3BRFsK8GOLLoofetmLW\nIGt8Q2ib6tK9G5IKwOiMcSIOBBY2PqrboJEm3UaDU/V8lCZs7FHYC21kH9AA\nja4xlTRtbOQwowkH3Xdrn4kJCUxGsg1EDO2F8vZYLtiPuvEhw9o7xaRp1Yr6\nfamPJ0P9NPejEHDYJ6iaXn7RLmmF3lpnIH1crfJLgzKH8xiIfK3DKEi1D1qJ\nYmFVNaq9tpm9SBBgWO7diAky3vJP9mqzmUuWvE1Ev2ojnqX8iEBS5zJNwXZv\naNoDoe0mSLf5UExXN0fVKcyZX01wwnuVGKkgEFshRB0wi5d0AuSQ77Z+qzG+\nh5CjRHemdVqBJE7tR3xzz/noQldLbNsz6VCQdm+XnZFVpS/zAw25uRNA6qgm\n4f2sGrrA6DlPcJPC9YR86lbiXs0aTMEY2PBJ4LY7twpyVG5uDw6PpJfh6322\nHmZ36fyCyW/Z3W23sBmadNcrnhDSBiqGNJGD6DurKSrKxo9k3AjWvRnjJrqU\nhFAKL4nhmZ9QcbUsBoKzNeMRFfMTb143LY5XNnr/wI6bPXEKtg2yLG5Su8Bf\n8LLD7uuR7oirDAkpmeKR2hCeInZNGJ6bxqaIZPCN8T5j3bgYWWhNqGqBQbwn\nmM91MYmnN+bUQ98RNLYmHJdiI6Pa+ZGCObsJZJUc/Qyax3CaOEtsdw8Ai7Oj\n21yZ\r\n=0+lj\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0_1605812373621_0.8068382017057778"},"_hasShrinkwrap":false},"2.9.0-image-helpers.55":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-image-helpers.55","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.11.2","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.5.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.11.6","@babel/core":"^7.11.6","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"0.7.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"0.2.0-image-helpers.55+5c38c826d6"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"5c38c826d6771f929e57ea08a7213aeb8e09d0b2","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-image-helpers.55","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-7//DFwWsSymjmXCdtmImRLydv4z1W+JTkWOyp/9NvJOetbBApR1SkDoN8SAz4LSM1+unC4qtw/wkzE8HKcvCCA==","shasum":"865d2b31bf364573fb77ba24a8b3b337b7be2af0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-image-helpers.55.tgz","fileCount":20,"unpackedSize":995996,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJft8NRCRA9TVsSAnZWagAAINoP/RhsYuj30sptyPE6Lhdj\nNz8KerKVkxJBHxE2q0fIOkxbc5Knem9WyOs8GOkoSPsNiAsh2SoL6L4GbiLk\ndlrM5yf9xmy7TEEGjobaqbEhUfBiO+Fo+N2Rj6rXLEKMbFWu1jVKMFqcggZI\nl2jR5O3h6lbKj+XEpH0alrL740aZtwuvswULdvqfR/FzPoqWPJ/0lHrxFLnb\ntlIUvvjON6vwCgqZQJaMHLVv6qqOl0FvNxMS3fKaYVG+N6lXgcI0/z4QWohj\n1XgcyRJPs19s85DHT7w7oV/dgxavWh+d8ehi+dN6fQCqbvi9fsPtKvSwxy9j\ni1Z36kzriNlXLoQjf+yBOyfiQqFcHiFTO18D461MI/sVaLCEQqUQjv85AKJm\nhxcbuphdQag0/bMNdiYNwdEba+ZPOaQ3Akcvc1Cm6o7rVs1sqFGDU6Gp/xE4\nBtsKEsEarGNdD8A2dunZ0x+j9m75Y8Xtdj4GpF2uVXfaLJoYrEv80GSeQwv6\nDLvmt/ETD6z7i88X7f4DpG783vvb4OmzWpggMeXAn151cEve6ZqlzD9/xLDl\nmGDaYM6Yi7uJ6DhGs4U1pB1kAckciQOKQuSo5tCP7YLT67DdmIDnInCJaleq\nXxSmw/0Z9vxNo6xp+EOsHLLpCLTLpRoTGCIRp/EFnru6YvxGztTF/kRsYkl3\n/M4C\r\n=9gzV\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-image-helpers.55_1605878609165_0.4336863916173064"},"_hasShrinkwrap":false},"2.9.0-image-helpers.59":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-image-helpers.59","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.6.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.8.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"0.2.0-image-helpers.59+5022170198"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"5022170198c9fbfa8692106277cebf669bf63a62","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-image-helpers.59","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-Bv0lSxu4uhfLg/VWjCE0btd8dAe/PjgXVeABYWbjACSe6x1CeZTJBotjzcJSRWkFTb37+gKYzda4xWU/ACcIoA==","shasum":"9072eeb74aa97e92bb56b62d51e373d3984c9ba9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-image-helpers.59.tgz","fileCount":20,"unpackedSize":996409,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfu9rICRA9TVsSAnZWagAAiPMP/1Kdb/HBc8gMTJOvhTvn\ngaOTJ4NP9EfrQdNPx/dmVg1QhzUatAd6xmMHGJMbbKItxYjZEoy4beCv/eP1\nfhDitoEw6mDGbDO8RNwzKZmi/GiL5hpELJOx4eTsxI1gq6xVLCZJEWgCGtQO\nSSA4CYOjZY/0fDV8sNo86pOZS139gVZQHzGZQN3t+2tPhkP9Wy6hP8q4pWKi\nZH/u4T7fwjOrXCalrRkKsTRNY19HyJshZceTTAJnkLqodG68H76YMWbFVeoj\nhjyUdBdJdq/d9U2J3LXeOnbZWyMSoDLTuT9SkDFuS02BZrva8FxfMYwuJQfz\nKNxqDQ/m2WRAV2X+XOHlkztVeck3Gy9RrlYMA5AhiTuDTk/b4oIRWLJFEyAI\nxlmOx75umDriqLm80JD+edEl13kTDpuMFZHfrRyfbKatJgiMDF8eQLmFSQV0\nZrXhJPqDKJp9lpeBVKPnaf2ItY1xG3/dUgTbT8uBQ/5/p808SZ+85PIMKgTR\nDgqbR46ZVxYZBIA+wl6prtv0u3hkFF3/Bzo9j0rTObwXVgJcVAFMtUZueXLN\noS5CAmKfEhpAvApdJAlvzN6o7B557pNFMGMWuRQ0Ap+4WNcE+RSZDKHm1PXI\n3EafbyNmDBqLI245+rM3tlLdnmU9PBYbdgu6E7Y8VBeeId5ShtTT6EM1yjN3\npSwB\r\n=ZJtF\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-image-helpers.59_1606146759569_0.4790770034998231"},"_hasShrinkwrap":false},"2.11.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0-next.0","gatsby-telemetry":"^1.7.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.4.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"443c8d0daf0b2f5832ae2597d8bd46b5e5540133","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.11.0-next.0","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-P07XynGlWyppIS1u2z9Tm8PB3xhpFf8gI+jTpZx0eWw3Cgf82ukY/V5Ve95BY0XzNY456j8+SRohK48CZcdqfw==","shasum":"6a083b616964447705902597ff7f0e68aa01cab7","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.0-next.0.tgz","fileCount":20,"unpackedSize":1001209,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfwCWlCRA9TVsSAnZWagAAYVwP+wfn4dwDIn2kDKiQgEua\nGZeFaFhhYLKJRVMXmxHVIN174FuHd7lAeBiz8xSN05/W4kxnHrPOurfQb+G2\nfJF2OqDUNQTYmsWfGsCu/82zsTvG1rDJunLBMs+Die0X78vuFUWgq5nlxPyw\nVSWWiTsQlEVwiS9FS6JGOJyDvbiJAkIYLTBmnhRq4ohkbOWvezb+FudCbx4V\nk9lgKLh5ttxadv6bbz1yxZSVQULYGW/PR0RpHWDvOB/Cb9MrD8JZxaXbRIhz\nXUZKOyDa1BQIoYSNYnj+vPX0TX5mrMm54LOxsiW2U92PEE7m+b3pfPm043IB\nx2o1A8Kig0dhUjpvggE9b+GVyAAUW6O3xnXlT4+Hn93CRgxrlXj/zkVygkkQ\nqeUHX+UyKmMzMU7ohq1hiy7GAgvuetHRW6kcTYx07MBUIUz+7HErjCYVoljN\nlVGRi40a7JMfYYrY7dSmR7o8WWFsyLvSUsrUPZ3RaNKK5TAtELsmZ+Y/XkVz\nqUBuaCS53DRs9mKLvNat12OVZlX5ivG6OSw++DQlMj49TyATNnAyFF0MR9/l\n8mcAr7cz0gTf3Wyg0z2GB6sk1RZLBaTx4gkDwzqLxeCbml3e4o2qJitNz7he\nyi8X2rZtnx3lqc6v471DXF0TEb3Of1JVagIu48yBdCDvST9TCqaiG9CQmKPb\nzAIR\r\n=bRXY\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.0-next.0_1606428069065_0.2619514079558971"},"_hasShrinkwrap":false},"2.9.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.5.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.0","babel-preset-gatsby-package":"^0.7.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.2.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"aa8934e949ec45aae135d3a08499d9b24a2a1643","_id":"gatsby-plugin-sharp@2.9.1","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-Z96HoUk0gsP/6Ats5FF0na1YDECqUFSBUuFJBs0sZpSnNVmvozK4el+lBIB67eAQlHrSe55PqW/lqrq3zSXqMg==","shasum":"74556f75858a5d7271cb83418a9b116f0a3f0289","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.1.tgz","fileCount":20,"unpackedSize":996555,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfwR0ECRA9TVsSAnZWagAA4qAQAJpVBJKdkiMx66EAtmvB\nk+/2MYSenBmJ5robdr043faUg6oBwSvMUGlMyx873TfpudLV7iNMq2Z4CEyD\nYQxmnRm9VgroQqw8+dt7R+kTaUcnptAwzCNzG/dRuJ4HVo10zFucZvkcOpC1\ncoirWHbVzumtYq3jw0H8X26Cws61wVQK9VWiWwVg+c+aeyLhuRY1t9lc3/oL\ntL4OKS/XR1btVAgPFB+8cDabuJC6E93DJ7C+40uUj/LGrlmardPx2RkU3kaR\n69XiqNPeoN5v0iMf0DOQo5kgLM4GeEUXn1GxvC2aTeVMerv79IlSrFMp3UHV\nIlZTvyzcb2+qlOVS7JNyxfhWbTgZkBNQev+Knw4mJR8fARWaq5Vp0iGE/4OS\nqqQfVl6Wme4FqchYaAUeAZ1DqLEpHa31BN5vK9Vm6a6VOTf3MAOHgvlYBx1O\nrQJSkY2OdfXpy89sqNQmoWe2syujMDk5obNTB/8PMu8/cSOwdhWX3AGO79zA\nhmzg49IXZVkA+PHZ4FmU4lZtwmbAmVIL0xQqoNXe6WIo2pOpHToR/+yqxQ8y\nzny/eOKrCAjnhSa/KaPWuVK+1Yvv7Iexx8UsIgbydjcrCuKvkfhOgbQ3X4RX\n+IrGMTXKtVF1RNwiak0/KSJK9hozn6zqp3KqUVLqlUoFKWH8qxN223hzwhEN\ng+ZC\r\n=hL0e\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.1_1606491395364_0.38932647891261474"},"_hasShrinkwrap":false},"2.11.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0-next.0","gatsby-telemetry":"^1.7.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.4.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"43e4050db8d0eae5f4b4cb50b58aad85bf45a790","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.11.0-next.1","_nodeVersion":"12.16.0","_npmVersion":"lerna/3.22.1/node@v12.16.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-PnIRDpTH+HgsGCr8Fjuv9nAOPh8Ua/WZ8zk6vNEVzcJ4Sy/rsaDeqcE/WvR3KiVx+qiHEOAc2Qs0vPfQ6m+ZUQ==","shasum":"39ab3d31c1dd545c63eeb2b02d1be637689a8c29","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.0-next.1.tgz","fileCount":20,"unpackedSize":1001608,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxrsKCRA9TVsSAnZWagAASbAQAIDhO/BRjhFHYy/lTG0t\nghAdKDuubwCQKcr3U0JgdADdeZbfVA2ikBpq4vT2TNibVABOK8FcaxYlQWtn\nE2e2wrKckxsioiN9iOSiLyHx99cPn6/RiSEIfimwplpoNYUwU4ooCkUlrei0\nE7PxxB/Xs7QghIQGP/BhYQUOHUsmhnNS9Hd9EpJ347/twZAwUor8HDjAMfJG\n2jK+aFMvE3sja36i64kS6qOG6BDQPLIr0gzieCRHkjSGWvsw13+hVi8Qp3aY\nFTizWW8fM8v+GWecHLBtpbOp/rBWMbzj6c4YhyGZ/9AnTiNwLn03qNnC+ss8\n92ZWQAAaSoMhHbI7oU9eT0SGiQYYNjH7/1VT8P4HXFZjDbFOvOauUg2BFQ6g\nmTJHdajduAASfVEmBxhLjA62zdOydzto88ChpyNd0/TRm+4FWH4ErlayTghs\nw+H7tP+HE1CpNKes0z7bD6m8csFafD+Jsp0XmpmiWcVPVk9fkAfAtAkQmcCl\nDkHVvW5he5wcHLhWnqDntlnz7hbzyCrD2XDAlMC8Bglc6FY0c8pxV2vq4sGO\nueSgNKnhQE5xnxDQ4TlAidb7+2a7UkLZDDjFAb3txaVlSedskigZ71wWRrC7\nMnXbjdzYzNS4sUl923N+MJ1kiyyTV3y+emCASSBX16mX794GVg3soWubZYZ3\nZQtf\r\n=9uB3\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.0-next.1_1606859529954_0.9216239335374616"},"_hasShrinkwrap":false},"2.10.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.10.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.6.0","gatsby-telemetry":"^1.6.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.8.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.3.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"52637b6a88f304a79bd3999615e224113b255349","_id":"gatsby-plugin-sharp@2.10.0","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-ivR4gOdBYtJDsFzjS7VLKJ+ShFIEmDDy7BCKFeoHDslydHRWEGTKAWK1XQryaMWSaCkVWjeW+zPmpQS8Re6GfA==","shasum":"65299b50cbd82a17334734f8ab1aa9c2435882f3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.10.0.tgz","fileCount":20,"unpackedSize":1001473,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfxugpCRA9TVsSAnZWagAA2qIP/2lTK6bHjmmiKEfAVwzA\nq84k/4ccrCLp2a8FjU4aYqXK9vpw+yRwNOPKlfZerLSYqNKSZQe5nThAkrIy\n724tUa40zAmdUR0K4rqw7zyNraebhulR5H2wM4rBoNs/70izWcBU7vWfSm0l\n05o06jtP4tW8tCnsH54dH9S87OXxY6lIul5uXRBTrH3a3BbuuoKIlefcmarW\nPYmKGF5wOE+dWwYyqMul5+cUunK2ws2/Bv/ethmaD31wqXalFRs4P4/rxSbt\nrfrbA17W1JZ0ODxvsrKgcuTw6e5MCejihz18+y7jyy3zajwJ/7E71QoNNw6a\nRRHE8P+IRfCZFNhW9zDkrXftZpEJ1uuknPpamc/PRLlQSZFror3UmFzDifQc\ncI0E3LIaD/jKFDnoAc2oYIip3Ck3wkRPx/o0pj/kpdPS9wHYsoHjUXxvXNJb\nRG4ZAasixOS04JOAjFLMX86AYXueVv0+bgHH6AmUmp1DYUJb4yjk7wodTXCO\nr1inF9hSlFn8lllC2Y7mlB/doacn7H60bv8YsSB9QJbWxvIrlprFn+GZz0J8\n+tP1n/GUHzwQURCXchAJdxxcLx8nIl3QEY8je/wRcKq7M+YEAwiSP0QiUqZq\njddyNpjb/WE2D8yt2t51779Xutf/y2a4z2FTZYrHXRFNfAysBkWNz1idkSKY\nK1SW\r\n=5KqP\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.10.0_1606871080283_0.7198630849144532"},"_hasShrinkwrap":false},"2.11.0-next.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.0-next.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0-next.0","gatsby-telemetry":"^1.7.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.4.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"e73138913ccfe0149bb8858fb306236e21e9f0d4","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.11.0-next.2","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-aGe7l3KQfvorOD9wc71qAsIYsHD/Y4pOVrzabAJoa3p6mAzobXiDlkRW0EzrNxD+hu09IGbYBcoa7e5bkFJu0Q==","shasum":"a3040592e551434d853434495cd221e6683b606c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.0-next.2.tgz","fileCount":20,"unpackedSize":1002044,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfyQ++CRA9TVsSAnZWagAAAJ0P/itXaJOGp0w0fUNvigjS\nbhcK6sSh73jpyaQ2mUnspvvPWrN2jJxPhLGXaIz8PYxGv6ev4JNh+ZjiSiNY\nDJeY6KZ1asgAapezhv2m7088yQLmgAFbHQOQZhUYrY7/y5wIxZk1+NuNfNv2\nbGwh4Wq+NYrBpTXnsEy7qoRV5EsaiEJWH/a1g0fJAajkOo5RcIr5S9f08Kyl\nVb+z7pOMuwqSG40K2YfZM4C9f0j+LMEKpkQJC8r1GAPrhN4DQcv4Gjj/eYpc\ncamy2za5eVlA64rWlzLM2BWfcOe/0vDE7xxSVitJGkKO/kWocxogn2dW/Fvt\nkiqEDhPfNy8WK3DIIKaTK2szqot5hZYtVGeALfCPYS1G8kKDPChm00PRPqgx\nSEg0O4Q5V+2ekYfHp5yW3s6NMyQsbKnBSYTsypPfnNXKup8DI7gBNO4rpTKa\nPVxHeMsiF2/7LUwO1al8tf0atoj9s0FJOH+lNQlMwRFacknGJ5yXIJ4AdVzM\n6336//IIG/fp4jZOVj2J8VHOHwFySCgEmghEZMY57PHCFWTBjenstdwrEEA3\nLbbaf6wOMJIZVT1lzoKL3A1JFhnWuFOHqCCsovhRDkV36J/QjtBko56jOBVw\nZcwS1CwChz3XYnRsQ5IfvwU32hLv2hRbM7eBm0BB1mVCd/oPurq5GySBvbh8\nZqxI\r\n=JOZ3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.0-next.2_1607012285627_0.12218196223589772"},"_hasShrinkwrap":false},"2.11.0-next.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.0-next.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0-next.0","gatsby-telemetry":"^1.7.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.4.0-next.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"edf46b7f55b6b2ee0c250c0fad8c3e49047a8510","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.11.0-next.3","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.22.1/node@v12.14.1+x64 (darwin)","dist":{"integrity":"sha512-GML+8DgK+tH1Q7Jq+E6+aKs2gUWPXFFi8nsXpaQaU4NlV0DGlEx5pGlwoZPzacurwZLnyoRb4PMLwTNBh1di5g==","shasum":"cc6c2698a1962006ec6a3421aebb57a449bd8b78","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.0-next.3.tgz","fileCount":20,"unpackedSize":1002251,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfynaUCRA9TVsSAnZWagAAp8EP/3tkSRPw3KJVXg9Fn0tz\n6YCexXtiN9s4W/6plyMCR69EmwwKmrMgtJdrgd0Ff2Fy9pIebTpV01fGAlWE\nTa9k+zwafuOzFLOnl9rVqXzNUiFWinQJmQNSJGv9nDXUbI/rdrK6i0BSg0R7\nB2SCtmo63Z1Wv2GDDTvpesye7V9Gel3pMj2Y1Dou0k/CdSu8YTbJsrInf1V6\nX7Mm7GXYV987K571kZWyqmRfHrmUwSACz3QqOye5/JvhSPiCiVdb5Rx5C5Bq\nQMbiepOszsMPvFd+IEUKb2OXilDF1CuJ6x7uPRszJZMJRj83LX5DOjWPL568\nLxPI+nMzTX8mMyArXaiAEPFjb1HQmNTD1qY5heDrU/4m2Oq7kztW5ukVB2B8\nKtgqUCxggQdWnGLBcqpOUCBk/jXQGeyYVRtrETh9/cdD9hMaZgpjpMBWmaHe\nG5XOLVeWrXj3Q7TEYIYZc4DwRBQLdcsPB/kSLU/D9CErLoB+YkKj7UdOMppz\ndOuGwHUAmpZCDjCix6ij2r0E75TPvpYhz60BMGvFpD3RdYF+6dhn5B9bg4v2\n27oBt5ebt84gtyUpf44233zO8gQ4EIF+OQ2PjeEnPqPOahgD1uBZrmxaoUHc\nxtKntR54YcJCmoKUNRX0GDaS8Ow9XTYeEyDTP5LJXQo0tQSmMi015VWBhQ6K\n6mqs\r\n=ZKZA\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"laurieontech","email":"laurie@gatsbyjs.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.0-next.3_1607104147817_0.7126552247421021"},"_hasShrinkwrap":false},"2.10.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.10.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.6.0","gatsby-telemetry":"^1.6.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.8.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.3.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"6d11da940468a90265fdfbde786eebd0d9df8e37","_id":"gatsby-plugin-sharp@2.10.1","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-w1a4waIlAUb7SpfvMstVI8S2V/R5EECqSEQ3IUFtARqbp/9eGFMlgwBBmn4AEA8bsIp3Bwvl1T2lIqZoh+jgHA==","shasum":"409958a2a4421b6f15b782be057ed54d019008a1","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.10.1.tgz","fileCount":20,"unpackedSize":1001949,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfzn7DCRA9TVsSAnZWagAA2sUQAKR9EpBskIaRcUGJ/1qm\n6Uh8IVlDSHnuNvhcA0PxCoyU1VEGCqQBenvt3QsNgBR46Em0VWdfJ5U461p3\n7hNhMaxEVeblUKElDvPgvgGiBTRtrqfNeYcCSpv292qC7Uq+nuARH8WC0kbj\nTmn/zjYzHPjlG9fJ5XI7lOSAN7X2UDgQA17e3/NUaaSQsRM50WY4d+PRzkMI\nFtdZKYwip6aZ+6RGfiwCoMmM1Sg46smd2+7gWLvnGMQ9qyRUuXkAZy89coxv\nXy8c5CB00TdzqL+JdQ2AKs2/8zYlRBCDLyeocD0Df9Fgv47UX5u5b0JMW22e\nSvwpwl975lnAY1TlO7BaJ4j9FbUgd6X5Mr4dZ+jS7VJo0O1aN4kseRMAK1DP\nsTwOzIXVk/QNUR3XrCb9wOsBruB1vMFGgaQ3YhRP2/aOgRhv0MBaM4gJ1X/A\nVlRuiz1Skasb/K5+kKTEHZNI5yyCC+ujeckghyUgrfx+T5tmQqISK86etoud\nnmgNYQoAyRjoRd6jg3sxR1VxYW2cT1WRYWGM6bwBMv96phIDgG3jPxgygas/\no9eVUsjxsZofOw/5I5FSZ0Bgp7VF/uTgI5cMiCa2Htp5LaRDqFYMIy8riIPq\nsXnUBu1UDHPfPBupS2bobMBmScj3xpA32aP4W6x3lOLNGbgq1mqzh1oLUrTD\nQ7pp\r\n=B/Wk\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.10.1_1607368387180_0.660872315671682"},"_hasShrinkwrap":false},"2.11.0-next.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.0-next.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0-next.0","gatsby-telemetry":"^1.7.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0-next.0","cross-env":"^7.0.2","gatsby-plugin-image":"^0.4.0-next.3"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"755950d1251ed001f2d813e7bce20ff417cb1afe","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.11.0-next.4","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.22.1/node@v12.14.1+x64 (darwin)","dist":{"integrity":"sha512-NbDLaxxlMSawvXTHMJUF4FSLUEskfl+vQCmTihiNJISWVxUzq6d1h6xfnrOiO2dGNWTGa1w6JQj6JSFf4lWUBA==","shasum":"740a18a4edf03423e6c4f0ab8fa97ce675aaa274","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.0-next.4.tgz","fileCount":20,"unpackedSize":1002458,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfz914CRA9TVsSAnZWagAAd9gP/36jacGyTXedS5Xsgkrz\nvzf57kuqx6Y4ZaC0nvepBm9VEshC/mUuBXmr5I+xOwqC9L7gSx3GeBgErVW6\ne+cIwTPgQ0JVkEz1OEY1//LUMUABWYH/+zVzcE2bCZSR7H3Ki0Ht8XwTcS+3\nL4xRSr5MRe7rYXVdg7Mg3NXO/Wwf5bbm7ADnUfXZ84xOj+o4HdgoCw6I61eS\neXVJiS5rn8ofnWQXi7YELnzz6ltRS+ZH/qXH3HPCyxdy6KCBXQe3A8sdLTL7\nROVtV12eS+/2DXOOc6qOk1DlOiy+h6xaRJSBW0unsgvx7tP+NFtTPlAO8E2p\niSh5yx9mIKfjcmDWwo9F4y18AFuKXauQZ+bB98NVXvb8DXEi/PTekqwvbuE+\niaswSm0CL2kDvB88aXazRPo3Xa56gG3TWYwLRbR9ryUzEzrRY/IeBipvZjbO\nqTOFZFP5A9bFtU4snscaer9YtypQxDO1TdgaG7ZmCSomvF0dnV3+cKoKpx24\nX6TImQAx2m3U4R4IefhsVN8f/xw/FBCYHPdH8EVTSyHEFFvqOH+vOVHSL0la\nLQmCyBQdUyLA0Rp/6foqKhc0IxpGAp7PIX5O4mXqiyH+ylY+mS6sbOsPo0K4\nrB0XDF9b/A+y58w7gSN6UjDoaJDlnjMTAJHRR3xQmEQX5bXgN+UNGGgOeIgb\n/77S\r\n=6d7i\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"laurieontech","email":"laurie@gatsbyjs.com"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"laurie@gatsbyjs.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.0-next.4_1607458167711_0.16985512673436953"},"_hasShrinkwrap":false},"2.12.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.0","gatsby-telemetry":"^1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"9eb5031a84093da881d779c3a0e3335c085e5f83","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-+jXPqBeyRepgspr7SyjiIM90Odc+s+aoBFvfMPS9wK+IGW2lgzWnYPP7RdwXHF/sy82GYb9CBccirg8KljK6TQ==","shasum":"c1b5452ab70bf706adf3c312d6565969572d443d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.0.tgz","fileCount":20,"unpackedSize":1004687,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf0pkACRA9TVsSAnZWagAAWA8P/09eDhDyw4ojjV3n4m5Y\n/atlRbpOZj6QpbyprjtGNQNEQdXOVpIUwzSprhfa6hPmytSunqbgoTzFbEQa\nIEcaT7xmkbQFkbuT5lq4Krs/sAQZgYgZTY7JcK4D1fyP0W853PIzvE4OCTJj\nnTfSc5tiZmgO1uBIPZ7Z1ELrD5PRP3S02DQvt4PmRbBc61o6KzjAo+B2XXe4\nTz6/OgyZJMjzUJjg231IvFPj0Ck5LsjscUoqB/jkQsvuYgb/Xp9j6JOBCERt\nn3SP0Y+4TekQ4Jya1ZDXdjFeXP0gbYQvzQ+gEganxi9pqjMYlsHq4BSWxj5A\n2mt4bEh0gD8yJ+lM0x247fJs291Np7ZPPIXCrP0FPBphpWnd1BPbwqD5aeyu\n+0dvl7sYcPU5JRVH+aiFzsJDx1rZ2VzyYMWJzL8kYJ2r263A7214NK6n2xpW\n1CFcFnsKWyO7F+RFu50KMX9+b1Oto7JjB3npQmNN12QfqU/nJgLuSIeu833D\n21wJfng1HA7Y0Mo4GzZN1t34NHiUy0PXQSk5T72sqSlhamiOQH/UbsI1lifs\nRPSZdBoytY2ZfjEzWCG8t8QI0BC8J5du+1JsOzU0pDZ6N8xH2ITuQqJVG02x\nNJSI5sLDzfqLEKlran76/HDWqlBl++3yJ1n8mDlCaDWKNfbEF/Wln+nh0uco\ng5sN\r\n=0FMG\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.0_1607637248464_0.4573998492951923"},"_hasShrinkwrap":false},"2.12.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.0","gatsby-telemetry":"^1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"1dcbc097123fd47dddfc0f925e05213b4dc1d666","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.1","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-AUCS2O2OCSPf1UWOuTmw5japgum7Sw7cVENDe0bpcJy1Sex6UXqRy8dJIt1bLuR4ZJpncQAlm/wBmpS2r7OzKA==","shasum":"cb5cf220deff29ea3dea7797257f143ccabcadce","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.1.tgz","fileCount":20,"unpackedSize":1006013,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2L8XCRA9TVsSAnZWagAATl0P/3yyGP412wgvLAyxFRwI\n8WbDd2BAiAZasIXga4vx29svV7HxIk45c/K7G58moGSKNVvJ8B9A7EHjyQlK\nH17oiqsXS7EOQUc75NibEWEYA/0e07E+ORDobiTtKanL8WjKPV48y6y3DUAG\nEue9qmQQa0D3UtWHWlNbYNT3tBvzO7rvnLi3UtsZzq1BqDM7spn8Rq7BmQBs\norsuuwCOvsnCSwK0lpod+eG3m0gdJNpYk9hkaZWvjcyOk+Ek7oGR0y/QG1aP\nRmVOKEsivg8kakZrd9IpzfFfvHTdBMGrPjgaDX2meTgID9x/AhkBXNrByh+I\nlI9a6QshqicQtkiGHN0asvSuxyi1z2/05cDshLOvY8zqSslOf+vq4WfzzabW\n4ypNzDpr15nVtKz2v4gdypcj2Mit1PCkxxkiqw0JBJermKenDp+gAfE+KDye\nhZyt99DVvYhtyChCeuIJE88YsNWpQUjCVJBgzEOXLbK3K58jWmdCnZHaumkQ\nQcvzy9L9INi3yFc3ojO3vtkuuK/IMirCwEZhQV0xUk+IEFddrcP8ZEjVRRmZ\nhrdeQbJZ+/+GsrcRHfQr9kbMMLIWFsP0bdZxMHNQERmxKqwuGQ0rhvXGK/LX\nXp0pzF+JAX9SW6MhDhYOquDmQ/++MmJvK8uBCAPzv/sksEaUc7OzgVnvZO52\naXbx\r\n=592U\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.1_1608040215257_0.07934844149722653"},"_hasShrinkwrap":false},"2.11.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0","gatsby-telemetry":"^1.7.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.4.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"03d497f15bc968d88bb0c85ce427da797b8fc61d","_id":"gatsby-plugin-sharp@2.11.0","_nodeVersion":"14.10.0","_npmVersion":"lerna/3.22.1/node@v14.10.0+x64 (darwin)","dist":{"integrity":"sha512-euNpOvvFIExsPRPHe8SYA07Dy4KsgTlS6aspwlCIc4UvyVIBS7vf2iTUnfiOSZMJ4mB5EpN2qUZEkFf8ZeTjyw==","shasum":"92b4b6b4a79b2499f944aebe1dbcf79bd001edc3","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.0.tgz","fileCount":20,"unpackedSize":1005285,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2PnACRA9TVsSAnZWagAA2csP/1IPyuNO2/KCzWm/AlAk\nNoc5ZqgjXth1ZGxbuhtI06WVyiqTjsrFAiEOcxw4PV2g1rciHUeXlrBWiTQX\nAKR15u4dU+2BHBuE77eCJV39yVzfwprQPM4S08nHu9nPPy3RTn96pPyy53r+\ntBJewvrSa4eCYNQqBzjvG4T7EKSuAS2AXGJMTLnJaJRbUtabkaIwrn7Fzan+\nqabhP88xNWDgHQ/L1jCp+vwNuEwCBqx3k1STzmfxtqTBJCn9C3plKYM3YGP8\nimjnx0VuSaKJIS0RePTt5WOD7eJFZwUkBnwRhBUpj+noMRfwf6q80/m03DGF\nYJFb/Y1rvXkOgz6Czq+yzfZ9QTL1+ZBQQn2Hrabd6ASw+7rwWieVBVxC+vsT\n/uA/cvzWp+CDgzg/+HlooKBWEpD5sM+2+yQMiUsppLgULDZB255OXnKZP+zX\nOfSFaTivdUHDuO86ZkhYWqC1UDOTkcyM65JtXK5OFml5T0VAcf2XvJisqPbC\n5V+si+SD87CaJWILYzJch1272tbdiUasFAl4xKuKd5Rnx7lDPRPN0JbFZqmU\n3qDHyEVx+xnyTe0SCqtFQ6n35HFVf0MCiEqB9tMVamcmx/agKN9a48Zga06b\n5gjDP7PH4/a0fvh8nT62wePJs0BdaqhBAq71sJjnlkgXtCvOgpdWvGcE2wqB\noxTJ\r\n=xxqz\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"lekoarts","email":"lekoarts@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.0_1608055232252_0.21072398392046288"},"_hasShrinkwrap":false},"2.11.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.0","gatsby-telemetry":"^1.7.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.4.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"5a0489d7d56353af92c89882b7f5b0e3242487bd","_id":"gatsby-plugin-sharp@2.11.1","_nodeVersion":"14.10.0","_npmVersion":"lerna/3.22.1/node@v14.10.0+x64 (darwin)","dist":{"integrity":"sha512-x+szZDBequnh8bCn/TAS4TYXybPFM/jcu9MwkV85M2tnBZwU9/1Y/XFQMV6pMfrkc5xASTqG0UR9wMSPQGBtUg==","shasum":"8fc2df2d12c9d8bef1c2aaa795e78e46259e405a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.1.tgz","fileCount":20,"unpackedSize":1006123,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf2jdHCRA9TVsSAnZWagAAqDgQAI9JmvdJ21IQelVmESyy\n3zl/JRUkn/DVR2GAaVvHUsmcqeREsBGEsylWBjhOk/8zAsZPI9waPwps9pTT\nB2NIW7D7FJ6vn2Yuu9A7DkogmK7+xztNj3P4lABgg7OemOJNX/zYCb6aD7BE\nY0xQgJbBr7xrMUp45LdC/MDbzGuegbBFg2F1k05MpKjO4ms4CmM79dF29k7a\nfLW+HKoR4Hz2ugReEfE7VTWORV+Msp9a7Yc1E5ljKnRMZrNIU71jeDUme7d7\nN/OevwqpdbB+sUdOL4WLUi6N3zCdmx3rwj5eSErPpDgWpi9CKD7EqufoDgc8\nqMqxnroSsH47ZlaUBtC35ydJqTw04CPRcUHpwKIuz7JIUrOLwH842lWIvS4N\nck+wH/9DwXwkIBugGrQa7l+WWna1CkhZ5arjObi2Sm3Y6Meiy9qORu/4HAYv\nlysWfqpxgJC2M+bfvrXYkZGosSZ/H4Bgk2wUIse42PTYCMIAKtP03h8uGlJf\nrX42FJKY7Exa9SA14DBzO2awqGl0qU0in7osQs0edeqWr6yIN4OXHeAbfRKA\n3Y/TWQWY8TKmCLx/Mj8r980F5wTOrEwwlDMJWfo+FjVhOJQOt7q7ugNuHw3b\nHU9GMqE13x8KsUoUi48oAHNsB0rBfCHK1wLEJhPI/KOLD7Y+T+VIcDCYEkQl\ndN1G\r\n=akOl\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"lekoarts","email":"lekoarts@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.1_1608136518783_0.39301791017168597"},"_hasShrinkwrap":false},"2.12.0-next.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.0","gatsby-telemetry":"^1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"a07c33d8d4604528b270fb69539c19b9f336a896","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.2","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-UQqjlshtNh8/a+Cl9CM00wqIRjYRouV2e7eBhxv2bwqvRmUzpBGNAk736v09wGBqCPBaxV+TaQhwTONHzxeIiQ==","shasum":"ea93f83da0bde118564e178fa1a2de9af90920a5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.2.tgz","fileCount":20,"unpackedSize":1006772,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf22uCCRA9TVsSAnZWagAAK1kP/2tOalL24bq9r/4AXON6\n5W2XpfYSnFjobWTlfGiifv3tPkG2iZhgjDdHB9zQ2xM14Bzdg1RIaawadzbH\ncL4qwITnIy+Ux1RcwIPJY+SesBTDmYh2GhBadqY8BYvRF0shpQZyNrJYj56m\nLqp7+bwhPHkgsDVkgXCPJqXmrcdA+OvJ4OlOq7RhLC++2TkA/HZWgTvo2Nms\n4AnU1LUCA3ebVDTzE2T9b1LjkudhIcFqcMnwuT1bXAZioVPKd3E1bc/Hzra3\npGNrd3dksNL2W4OdL0/hQXTwSp8K/+d71z3Sepgx8wwITJbf6JwJINkCU0wA\nkPh2cHB6dSnLJDegh4W23EAyCDCDWga+FqQyY8xvMvF0iZj/04ji2F0MYZoJ\nz810Y0jrrFOWCYSPq4WPvn052t17C2jfkklbprMw3TqByjLTpu2ksnjUevD/\n7HHSZojBKKJjfDJHS60Q12SbeNjeXM4VNffa5JkDp+cFqvPDAJCn9IJ4wphG\nCF5FV+8PGpf77Luu+V++bU69191xqi5ILc9ZkjyGX5bObKysVFL21A4jwi9T\nekOt9u1QWEdpNXDsuqer6hQXYQmkQ3EYMoDGrJy8Qydzb6e/FcE0WJhacMrv\nEl7dZMwdwzhFv5Absf98TXazw38DqJzFFnji7GrcyO+dIDTTNSFtEfSs1RqG\nnSAl\r\n=aB9f\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.2_1608215425634_0.7841606144367996"},"_hasShrinkwrap":false},"2.12.0-next.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.0","gatsby-telemetry":"^1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.3"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"762a52447679a17155a73246e0824ffe2d7f30e0","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.3","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-BQ5CncUUfHvTy9uC/8nMPhJQIFy9pDTXis8gNy0AKvsyQhB0dTQywn1SA8kthXMthB0+QuHJbIqpvd6o7ijDMA==","shasum":"55c7eb3a81a0b60a0becbe06f2b98f2511c1443d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.3.tgz","fileCount":20,"unpackedSize":1006979,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf23DzCRA9TVsSAnZWagAAmqEP/2EZ8xf/0TvALLtIQhCQ\n2U5oj/jJsTBGrH7cs5SyWk5pbDrjaDWBGtfAxxTi8RyCsI0QoRcm/vca95P0\nz1sDxo7quaxgkg2Ymj966H6oaNNFcWLKpdrXxnwDnaHBHNbm2P5sGx/XrRGR\nUVUxI2n2ewPVcscbuqZ3cfX6GK2PTKa9x+g6WQ4qWeJFvnXjNNutAjSujOTG\n6Q1WPjqrKH/Us5uDHpLHqCO94sOjJB6I9q8/alvnNjroHa2zBnyo2QAS89yt\n7bFIHjRGsxLH4LQ4yhW3dp5ltoTRUrd6ebhqkzXySgVu6JpjQgUmbFIe7Zlh\n3PyXWUeVzv/ZqjuxZws5eZEQOa5o8CFrUI9Ocxs0/NhjJ8VYCpoVx33leCIT\nOMNxu4P8dj7AbkmDy7aN320/thazpQGFt5GQEPc2sMND9W6EQmGirZ5JDhoy\ndzCjbxD6pcVcwBnMaQGd1yWSrElytzNDLuDg1s9UPN5fzr+EFKsnGzcD5Ohv\nfgFLnO1cU+TXnPHeHx+reYY9ijrDTFockyimGWh2wtLET9kPFNWfo6P9qqVN\n2SGhwac1UYku2DOVyf5A1vzxE7ScFqvAL9uU9UL+Hzj07RM8FFgf8uBPPWDC\n1ERQkLntQK/8w31bjvENeM0U3jla/0bTDpHlnRR8PFOY8irvgBOk2DNeTx4/\nB1ub\r\n=i2Kr\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.3_1608216818571_0.8410291918473594"},"_hasShrinkwrap":false},"2.12.0-next.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.0","gatsby-telemetry":"^1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"8138b97d025b5aaa8f3a46e7d9911484a00591f7","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.4","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-uH1Ry+8TkbuIClmIDJ4Wqgn5NRF9O4j4bM/NDaXB35XrK6u5Y4yEp/5lHOhkhPvejQ+q4btvIArONqWa0AUryQ==","shasum":"290ae800dfbb4879860cc31dc7a5e08e06bac353","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.4.tgz","fileCount":20,"unpackedSize":1007356,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf25eLCRA9TVsSAnZWagAAgVsP+gPItp4yHRSJhVKU4Kfi\nCHC4UwQEoCkGzkt7NVd87jbB4knCca/0HTAGuZYzApjRGmEGj4U0eKwaVbYo\nskTKjvg6bCxmi33Hq5aSWqKeX2rHu4Bwjv7xu3BwMD2X3iUJ0tmfQ0iYW6m6\nFeOrT5y2xcfX6OZSpKiq0UinchrhFpEMidIG7SXkcbE9iLUXKQOGxAFUcGW8\n8T6hRGRzT4L4D0niyavWNm7gNNt3epkNr/br98vXIpai3ZOsTHzMLTSa8nt3\nQHIKl0Vq/s/VjBTDgT14BHD+v1c2uzumWvWe2nWM7MQwoiyrKNJECV8laEvH\ncdihWorJ05tIiqJwmyOpHmdfKs6gmy+01tchRVNmdfhiL8FN60qAO0t0FSjY\nKmIaFMYlMOFozPammvdO9ezDgRjdtX41wYztwD2FuiX3lHMLNvb65I7GftI+\nKlIDkAt9i+j8Agd+LscVnajjs+keU+j2xz04g6UAGTYPj4dvf31AoTekSIZt\nnyiVpBQCxRSOoRasiPM1kkxPScfbB6ecwm/VsvIEzCcLGVZst6VAjzqwGvhP\nc/FKm9BfiSZM5uyEov3XHWxLw87qFxfkkHCQYq3E50ThoFycBaogHfBTqwQ6\ngxQhNiyYIpKp2NAymYZzi4CCW8aRwRFYPW3CUGJC1cw9dqDYOaOtNi5NGAOG\neTDu\r\n=VGK6\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.4_1608226699335_0.1634533243269174"},"_hasShrinkwrap":false},"2.12.0-next.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.0","gatsby-telemetry":"^1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"48fa29b74ec2bcff59d524cff6f46bdc7f677aa4","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.5","_nodeVersion":"14.10.0","_npmVersion":"lerna/3.22.1/node@v14.10.0+x64 (darwin)","dist":{"integrity":"sha512-/QBt7V83TpyJlfj4R8MyC5SO43g+u0yWW6eExBpX4sJrPPL6MHpdBVbW2KuFBjMcozn1OsFXzqG/bqFUvxPhgg==","shasum":"b81a130e56de1a93f04279b3eebf3373f3416b88","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.5.tgz","fileCount":20,"unpackedSize":1007563,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf3JvmCRA9TVsSAnZWagAA/eUQAKE4TcyuJx9NSOyMrS+n\n1S2R7RqRp8bDBcVuBcQjQFMp+FGyx/QUDj5wXC0neMLKsKp6YVsbndoTwdIj\nRv993FZjhhb0VpnZaPKMCWZ3+Wq5GPA1yooag2CKbfJ6YKANdXFDbV4Br2DQ\nsrO7adgqada0DDdKgJm2EYscUWDNfe3eeM/6jVLKhsCo2yQzbWAu4V56h/MS\nceOUIH2O8B0RDD0u3pUuGGQ/Oandd5zcDf5bxiNaS8p9qRXq+lXpsg9+WUF8\n0N286NB7bIk9SS2lmvdtgIBLnlEC0XO4y9ajak3ufftFkq1dDLwr/eK8RvIw\nNtm5rVe8IZRjgZZ5eOBqUT5lab+IPmGgYGMZUaXMJv0WccZblBuR5PvwQnCO\nP/B1/CjBxPSDO1p7Piw32eftMYAN97BFBRvlO/LcwzVuIvU9x5rPOgb6cuvw\ndCvVrS/LE+lFg1ktKahj+if3uOisW3FhxV2ZGIGyQb0ATiEny4/pe6DJu7rn\nLcJZ7WNVuy/Lsx74z0SARY2G+QOZ1Rd00Izd4k5vWoFJmFilkW/hCitJ8tq7\nqo/BMk35UoUJUzB59kXF2E6oHAVkkAjOzHzpr4SgFMAe5U2xk6Qst/hMpzBZ\n4tqxTGvmftCAkKYqh+6FsZIroubbOg8C0d0dpCvALb0+IsWNjm4Ql4le1sMg\nKMrX\r\n=6REB\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"lekoarts","email":"lekoarts@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.5_1608293350166_0.12535381653141364"},"_hasShrinkwrap":false},"2.9.0-telemetry-test.359":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-telemetry-test.359","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.5.0-telemetry-test.359+57d1ad563d","gatsby-telemetry":"1.5.0-telemetry-test.314+57d1ad563d","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.2.0-telemetry-test.359+57d1ad563d"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"57d1ad563d0534d70f0b8170058a38c7f4ff8611","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-telemetry-test.359","_nodeVersion":"10.21.0","_npmVersion":"lerna/3.22.1/node@v10.21.0+x64 (linux)","dist":{"integrity":"sha512-foGYtysy4ldmahs2d4S6W+D40rAV32EN0vUwhTMh5s3d+zYymMNUMSZbk0RaQWmQRqQgAbbC1mSsT9INCnD/Jg==","shasum":"d3a5900cef57161f9b4a823af742e893f5720424","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-telemetry-test.359.tgz","fileCount":21,"unpackedSize":1008973,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4dxcCRA9TVsSAnZWagAAljkP/A7T9VSA5MhRfRKUr+A/\nX2eu6LiOXm24H0w5Nz1d5V8PNea8jPLZYYjyrJXdrkTaYj4Mno3RixSknRXB\nRdlW7aKs96dhUqEa9udP9t5erwSnqOQMToJZUQGjb3fnjt6POAVKKdEbCD0n\nX4ebRQj78xeDh9fGts+l872wUkiB/hjWuxc7GInckbdfnvhBytluIxMuzktV\nxKjKPsjcX+Qtq4SIjx1Ngl/p5Uzz2TFx8d7qwf5IOaY+ROFPpUfPCyUzBMFh\nb4ATk6kl5dZrYCX/Z24szc5cjUPwZMYnPm3Ft8jdauDVhoT4/3xKNqQvSc4S\n7QVHRVBdwkNWg2VnpcDnkrQj1+rp4B8dzsweN/jyGOdRb4IorldBtJ9/BE+F\npgc4gNEs3RdRvkLEAJ3MlAl/UVSeCw/G68Az2JxMVtMap1Gduu5Qteq6+C4B\njONn90dqBJ77SicuX5JZc/0z14vK6piKVklKylU32Fixy8iRNNHQs39QOHJB\nS7eQkU9M1o6vVMJSnOLEHzU15bWsMdQSuUC20znRKX+Lp4g3Y9uwDQFU7C5q\nB5TtJMgur1SOo77ArnvsZxC2E3w4ej9B+GQLEAogrPKkO9t8LvTFTPR3SYOo\niSgi4uG5tsHwBHoHAKAvns7Jzz5DhnTNR4P+pN5U5h/3AtQo5LZrBvtnHX+K\n6cY1\r\n=kH7p\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-telemetry-test.359_1608637531449_0.42342428694591594"},"_hasShrinkwrap":false},"2.9.0-telemetry-test.360":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-telemetry-test.360","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.5.0-telemetry-test.360+4ed521cdcd","gatsby-telemetry":"1.5.0-telemetry-test.315+4ed521cdcd","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.2.0-telemetry-test.360+4ed521cdcd"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"4ed521cdcd05d1ceab9aea5a933b27deb26dc862","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-telemetry-test.360","_nodeVersion":"10.21.0","_npmVersion":"lerna/3.22.1/node@v10.21.0+x64 (linux)","dist":{"integrity":"sha512-xmBzVW5RN+0xLfEfowp/X44iLrePCUEEpxq7j9olzN/E4Hn2w5b4xLhPG/6aRjdtxVWThgMRd2z7CHxOy7e1XQ==","shasum":"a98ea317ad7149e7577b591375a5366f31457223","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-telemetry-test.360.tgz","fileCount":21,"unpackedSize":1008973,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4d+0CRA9TVsSAnZWagAA5j8P/0sme4iBaPSq0lhoS90S\nJm9HHrzjLvrvqHhgysjqYqTczNQvgppuRhxDPJ8pAQF1Lrcb9Zv/JRC62/Vr\nXJsLvg1HbA4rxZpq1DTaDpHyC9Dr9J0w/DpfZpnofCibkouE6PfeevvZL9We\n6LyvGEWJsga/MzO760sQbONDMettHTI4pesUN5wgUcGy6n4YJ9sIGZd15wWt\nvTFgyZ+C5VBJo4zQCvMcOEE5lHJiOZrhVhOOuSF1kT1i6BjrG3vHjRYBD72R\nGMamxyMBeurvt3oGuxzAtWs043DMHKCsuzu4ZT4W/9vx/CJvFnQO5P58E1lI\nsIyWQS8JCdk51tTmj1Eo0EjX2mhZ0qtUWpC+EwUu0NhmIbw6yylb5JumaBtj\nhvkM7o+hPKdBR08XOIeWHDFbVKPLXAmtxlm/onVOuyvm452FbyKiW/dHTbWV\nudqmwMEgON20/b1VanCIyolZUjqtL1Yv3OS8GQVO7aiXvHvuy8GYe9XrecqF\nhyXbER/wsZwKHsDO2dXGWT2tNe5907t3k+d2qsuchTgYmUgR+fXdMLFZo1Q4\ngPg9f71JNnK2G033+p9jsiHyn59r+eS0aogoWMZL6aglL02l8tBEC7lt/YzQ\nkXhMQFVJpKOjRs2KJNFPfWdlBSFPv1oE59vB7lLmKY8Ap4S7bDhVDcrbW3nl\nKTjY\r\n=YGR6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-telemetry-test.360_1608638387912_0.9237413101627161"},"_hasShrinkwrap":false},"2.12.0-avif.11":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-avif.11","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.8.0-next.0","gatsby-telemetry":"1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.5.0-avif.11+d0c04dcc3"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"d0c04dcc3a5dd6cd69f51889c372715ed0fa9c15","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-avif.11","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-GPSuMJqWKO/8fMigMRkfWtnttjiIdttG2k0nxZHqzLCLsuVEZMztoX2/gjMsWOFO94shzxtaBLlbIQgqsayIjA==","shasum":"f73ca14bd43a25a4eb3f26ae90327d2eca0f5bf9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-avif.11.tgz","fileCount":20,"unpackedSize":1008384,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4yyKCRA9TVsSAnZWagAAzx4QAKGkmKNy+fbrY/90NSdL\nQvAPkIZsvCko/Gkv1kp8Ep3Iq1t/l/3nM0N9+BU0mXuWcG0r4G7800VGLO/f\nLFHNmLecLMSOQOEsYBp6zIiA/HOT+FVHPOeb1mT66iwnO2gR+0sTKtbSSyyV\nGtHNDTQhobyJNodOYEPSAcXwf9fragPxQAMo+vZvN8LXdpfsCnDTlDt6Aepe\ngT8aHF0VLS+HChBTv7/qXVzK5ZN/4aAVr8zX0pxffNgwQSf+seW9zEsRlDsT\nAmE3e1MpMIeXyMdJbFMVtKLh/+mWSurFyYl1Df+2Kkmxvhmk3b78aiJc87Oq\nglxGkw1glz9eEmsnro2quaH99sUPqdYTJZdjk05r9lihIlzevRXH/hnXrSkN\nlk17J4FOtunNnE+8tkHVdaRYTcCK+Qb3WnlKj5DJCXpm7xby61g7MTQvld3p\neh5Uuci8r/5adKWjKZ/HIAyRQFX1LG0T/VOiEQ5RhXdB0f1b3hBpdKeTCeOb\n2WHyvdDz0NB0R7ukgkwb6gPiuy0VvXQ5LQRAXkQUD5yqBZTDYPp6FU2NOkEM\n2bKV+oy0YlrzwD+wBsShBGnFwQL1ediblaKlEyE+ea32QPTVSonyyEDrrqEv\nXDK2lWMDHR2LFDB/ANJ3/8Io1/9PVMpwKIeDzOSnY9zW4itbVO7HxLQXtAPy\nvR8B\r\n=R2YB\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-avif.11_1608723594494_0.36844133507127674"},"_hasShrinkwrap":false},"2.12.0-avif.14":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-avif.14","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.8.0-next.0","gatsby-telemetry":"1.8.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.5.0-next.5"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"044f845316a0940eeb75790c3992d254309929e7","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-avif.14","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-R4YrU+Von4YQyRTilBlXAWGBKV/TR6izSoNcCNB+JBotJk/MQDSPiTU+BeUgHfg19098aJWG7SslxHWkzsN9Pw==","shasum":"f431cf4c81a31c5aaeb9bb2ef406a694af370bc8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-avif.14.tgz","fileCount":20,"unpackedSize":1008658,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf41gXCRA9TVsSAnZWagAAo38P/3LSj8GjbLOhFX9DSajL\nSV+yAxjhWE8TZJu0aaW4+QKRC7c32k+E2LPSabWfUY42Uw1iimCfnWxNQdkA\nFrMXSwMtI103PzifiqQfRc2zq9MODjbhia3lWGKwPCN2J/dMChrv54KRxs3F\nT2erwh0ic2M8lavxUEapvOEPKoD/kfoFkhDqkshBCiLxIcg+EJAINRGjYmGE\nH036VV2ascGXPpgbjrkucKWI1dhddWlx5BAtB6X3dZ7Jxk2pd/1Tr5FHpm16\nVF+dYs9CQ9P1UmXaZfzW/89HxN3ubHz5yd5qFPuQ4NJmW7Xbc/BAuxZet0ID\nqF8DzyXDo1P2kbeNDG+dKEFfY16vVp4LhWPN0kWU99BQ2Ddb7nIvCX222yW/\nCERsDLLaNrexxDr+kgzjCl90KXEMRYHV6sPWV80CZwSHcvWdmUtu2AiDlyMV\nNMgd8y8H3AprNS1xe2KEfC/UIuIEHVuUpgqK7En/ENAN+GA3mTq7XbHKnbco\ncSkep4Q/ZL19VO8uNgpwPpOm3EKNiO1Il6sezU1jmnyjZVkQ3BDIm5kPB7N0\nMKa9ZBT6Pg6XgqFS9FrolFh8aocnoKxaO+hydnFvcnP3xJYe0VVkI43CcmyA\nsPpNUziYt9spKvK9iAT8xprAJc/GoawV6jTGYNLGNejvHKWZVhx7G8TxsHAE\nxaGK\r\n=nAOc\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-avif.14_1608734742791_0.592057882475582"},"_hasShrinkwrap":false},"2.11.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.11.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.7.1","gatsby-telemetry":"^1.7.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.2","sharp":"^0.26.3","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.9.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.4.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"12a78aface75f7970c36a3d9c24a5d8dc5dd30c5","_id":"gatsby-plugin-sharp@2.11.2","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-NzYWuH9M12xf7aoHL8ynvUJvmwq6JmJqYD62liUOV4hU+MR8iQH0A4qkHWTIMCs5J5WSILgR5p7T2x5JrSLIAA==","shasum":"494e9ca6db41da8766f9ebd3ebd432a589fe60b0","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.11.2.tgz","fileCount":20,"unpackedSize":1006310,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf43VuCRA9TVsSAnZWagAA2MUP+wQM7hD6tpTybgKlwCXN\nQWT14MakWAjR69wD0cbqBHlCWoNovtmTTTdj/Zorp1uRKFRE4Ku9wI332NYU\nUhb1xlwRNd3dV2jcp/sNhmr+cxU0vUKe6R6NRpLNURZ4HC/3wRmI6oAcNrp0\nLG7Hb5idANBLUbnCHx3f9Fk5BofzSYXWFXEd0L7l4V35aahlX4vBHZJb3Z86\n2bmlaKu+kuhIcQrDrPQ0DxNJw0SpW9WTLcUgbR/SxfzOE6PBvleBhYFeOY5O\nnQJRY74IBINwWm31/6nGiSUqoKX4/BKc6UCY58pTy862RP56v1PCi4HXZFPJ\nOewXg4SxeQZB/scVtF5HjvQhiJmtwAXeASk3KNblRMuln7cjdsE1v723j6e3\noLKG30TUi1cbp362ZvUbeO1kUzRfcpmRp3mG5vf2RPTg1TtQ3cCbk0E08T24\nyGp3E8v9JeIrezWOUyu5K08J3kNPrIsYFYq2ioUdddajJmMRMikvb2Op0/er\nVXlLiIK3a229rbpYuinfPgZSSQN95gKYbLzwkI1vhXqq5f8OhNjErR7iI2vH\nUqcm+cBou5wXNyeVFMnSJb3/nEnWxDR0q8T8Jkwqh/JW2Yx+PdFnk+DxXOLy\nUunTRrd9ZkbGk/af/j9VOmue3W/QpZULn3EtZIngP/he/HBB1himjAJ+1o36\nIbLE\r\n=Sftb\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.11.2_1608742254091_0.997016203699798"},"_hasShrinkwrap":false},"2.12.0-next.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0-next.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0-next.1","gatsby-telemetry":"^1.8.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0-next.6"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"968914fee46688f41de3c80f5b32bd8fa908f129","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.12.0-next.6","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-Ja1CQG4W2rDJKkzDfvHvNX8hQYA8d/OYcC6J/1IngbweZzzTAw5hBKkLB8k4wXgpqW+CDiYEaIkF2alqmu2eKA==","shasum":"1d1f78d46d5bfbf2106ab495c359ff416889aac4","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0-next.6.tgz","fileCount":20,"unpackedSize":1009014,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf6z8sCRA9TVsSAnZWagAAv18P/AgNruFBugZ4vQkQFwjR\ncVGK9E4QsQ6tpz3UsMztnYUPGwShvg1v4WRRGfiUCA0wJ6548SFvBBci16dJ\nUlIV8n6azMUrDoLwq8TD/np1O1jiY1pINqhBJ08Rj3MeuKkNfYvjICSRIR2Q\nRfO0lc4ri/tLTr1S6E5meB3wn9iajZ4eVF2lOVf0JaqswxmRVet+wkuUnhBX\nXXiybZfZ2ULiftK1yantQiUM4AbPPoP2lupWr4Xi50GcQdZzWBMDeXCCQBWN\nhq/BMWoivdYnzXL0FsqCxFn0BFgfjTkE4DgztDV4jNVvc5zpuU2jIK8Q1ZU8\nLjxG/2NhQUeCjG/MYIzpDwjATNM3DsErWmYBmz+WQXFVI52eYg+wCKL0ySLI\nfYL+zbGlTmiIVhcyHNMZVJFu3VRx862U1ceyvub7FQyGC4bMv1G8sP6mHBqM\nRAKvz7O+cnMHbTZTyFPr4qC2h+c+e5OmI7HlcBddn+QgY/kStOsIf1zBco8A\n7sQBb6NFDxfwM/J4q2sQBrpcX1aRbnlRs01zP+YjbJ6eAwa5F0GBKyJzFL+X\nSdBibk98I3Ph+XVI/H5O0uQC5X9AtLUIRG4RAaMkFrJrDm2eBinPF7x03f/9\n9KUMgIDdV+m4dONFfccBtHdnPcpFZuyyGPQ5Enk1cWKNY+g+PHjiYs2ZLb2U\n2chK\r\n=i1wp\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0-next.6_1609252652251_0.30140942947502736"},"_hasShrinkwrap":false},"2.13.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0-next.0","gatsby-telemetry":"^1.9.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"2059ead7ff0bcfa0897b1606cbfa559835b97f84","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-next.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-EfUpeO6EvfzDNvgLVV7QXtjiKYNnFHR/ZtgxqqR7zmsdPIo/iXnLJJUgV4SN147obWBbRlLeRii5AA2AYx67bw==","shasum":"b7cfd10a4f56024bfefa77f81191d241bd6e7d81","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-next.0.tgz","fileCount":20,"unpackedSize":1008267,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf650hCRA9TVsSAnZWagAAqGYP+QBRxCxtNw+fyl1PZ9sn\nZQ7HwBWLgM821NijN3EaaADIq7EAtfvGOQRtoQkOofVq/ZYhMtrqWxJDvFp2\nzikLFO1cJ7DCEsupHpHa+nbMkMKZRfvig1yM8vUXgaK9QUgwC/EFXakYmUmB\ne3ePrxJFk4B8gglomvXLZ9w5xOdsrYh6S6yOeU/ajkpsApza03RPqzNCuFpm\nGKaI/Dx/376LCE6sl0kAYeUO15h7vPeagpxUS6xV9Prz1YRxVZUJeonof3Kp\nj883Z4tAy+19GONuYAFAEndXohvnW7C9NHAnfHb3EKbHcHidGbsr5v/+rrQu\nmb5ylGLL5QTPOtcnxuciG8ftwhN4coionALtvEfda+yv+d/B7wtbXMQNLIBH\nGV0nZUVpNRI4qrkhlB5ElWXSumbPpiBpxOCGxgCP42c6wbTO83i6kjTu1oi7\nxNwPcZYCeW96K5OM3JTcDLf9ez8v4zb3Ph47baadt3LcHbYd9URojPWTTGVn\nGpOmlVEhJfh2+vjE0L9avATcegWXHe+oik1EEX2L81tbISS6+A1UbcxJutR5\nZcualEWn5KvauhYrcjsmnfIFqtrSbBSQfoz4sEzFvD9cMVh/Ku3sa2EV8rrb\nM2MfZYN9luwTPOpWCJkNJTAhJSh5VXS3mzokHxKX9Ye+eU8Y/K4fhLhFdygt\nVCw/\r\n=7Yb9\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-next.0_1609276704526_0.30940424123487675"},"_hasShrinkwrap":false},"2.9.0-telemetry-test.371":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-telemetry-test.371","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.5.0-telemetry-test.326+ca000fe216","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"ca000fe2162b45bd6477de9186ebfd138d407571","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-telemetry-test.371","_nodeVersion":"10.21.0","_npmVersion":"lerna/3.22.1/node@v10.21.0+x64 (linux)","dist":{"integrity":"sha512-ftHKYRwn/y2C4JaavXVDQXHTXp78fYEl7xzZNu2NGiy69py6O247TVsCmhbmzVa+C85Xctqm8+Ol7lBI5qBrAA==","shasum":"c5421aa772560f9282d91c9e9422dda0a1777b22","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-telemetry-test.371.tgz","fileCount":21,"unpackedSize":1009631,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7E64CRA9TVsSAnZWagAAK8kP/juSqLUtCufED+K3FWpD\nQ3Yu5NvWCRF/29qhiVuA5JiNG4lnoon1zD09As9LMNAtaqAnb43BI289Dl9u\njywJZxQdugl+LADrKJz66j7dDMU6SlHxPvHZ8Ps/kK9GFax6E2vJcT048QEC\nOnDhHh8PDu2cHu1z57ld4DNptZPg2aiej6kpWipS9WZAZGH7QPx45mrGPrKj\noQutvQvXm/eHHNZA8KR5k9bt7HQLeJvchQ+c/n70WR3g1lvZYQ6V5WtIauXI\nMcXRGKTKCHiqYe3fDHf80e64tD1FSSG71K95dyXue9fbfoDzv2K/Ns66jHtf\nrEL+JWAcoY84n7UTTJTprwfcPpMUZcojK1HCgjYEaPwt/oQgfwndImut25w+\nsLk9fyiSa6jTZelnFcJWXf318tQQIkqdq4FuOd10Y7caLrACNXc9fg0B+4pS\n8P+vzY9bSr0wv+5s2eAsZ4Tqxg7zxDV2OD4k5HxBdGxZJpZfPV+F5oRLM8HL\ns9Gnfok5DTI7aY7kibLMCqdrqgGlF7/Q2XFQXCtt5lf4ZOY5D6yJ31p9EmoV\nbHYsA3eUEVGT3lmhqE7Id2k87UIsCvI42WrvwWRA2GQF8DOC+/VsB1raN9Ds\nSjI2lPQ4wmcooeXG2HrDWnZhWFZ6CXi5cJwZIbJS7oPhTVBeyj0GvZYabk5i\nJ/Ho\r\n=Njel\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-telemetry-test.371_1609322168200_0.1704257976464938"},"_hasShrinkwrap":false},"2.9.0-telemetry-test2.371":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-telemetry-test2.371","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.5.0-telemetry-test2.326+103c902811","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"103c90281109e79e0af1e2af1c62725de9189add","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-telemetry-test2.371","_nodeVersion":"10.21.0","_npmVersion":"lerna/3.22.1/node@v10.21.0+x64 (linux)","dist":{"integrity":"sha512-4ZJsc0QZ6Z/UpWZaIlIevUT3kgneX3N6Y+pd2Nhlm3Fp4JfpvLiVrUz1PcZYdSD5MjQK0eu7NHudhwuA3gxB6g==","shasum":"21ab8b3fa0430712196561a281033b2d99a113f8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-telemetry-test2.371.tgz","fileCount":21,"unpackedSize":1009633,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7FbzCRA9TVsSAnZWagAAthgP/01mZp6BVrfetguZ9xNi\noFQSzPOM0p5VI+X4/UwPzNKbkQDoSX8l55cMzLGEj9I6tvfNsF0I9Nnc0RY5\nVDU3HiQCPI31ZJRxTjhqPtZyy+h2KH+4KC7ux9KcmOHmCDoAzwd5G6cqH2QO\nFCyVfdNpGwJ9W/JHxud8vlxXcVXyg7t9ptT62hs24CvvNG6KaB3WNwGhNn//\nU9y4WXGdgP8l0L1AArnpWKbdLS3ig4nVQ5nZ9GWkbf6NjYTGJ0Ud5+U+9DUq\nRESTDTecE6ESrS3itmHAGgEoqBktzDIq4QBSxhxFo/zJc3rFjqmAn+MZLD4F\nD3W/j34+2RLiQI4JMdWLp3BpWpLLkuuhJMz8wCmxUHxpy5Xx9X+E5eghOb/Q\nXdcC2vmZP612T/k0Ep67FtHJGjyw3QmHQckX/7lV/VzOEx4EF5ktFvo78GOI\nymwrR3LYB0rNsE6Agx0DgnMIcQXuBeaK2HPI/xyGcHKxL/Qs+VkcNnb0x+aq\nsfV6URrM9XDLrhuGNMSbhxOeYAAfSYSv3hSvI+5JzE32OUnxL+Vff8pQG0Sm\nPglEqV3LxoedgZq7XiZr90BLE3t9ii8iKSpp1yNGzfS4+7CyN1iG5rJrQIFS\nuhM9V+VQIKB+tznaGRd9o2xfGLC00o4buK3FLlgdpiWjd2uFiPDSIqGCdP8h\neIZj\r\n=Iw4N\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-telemetry-test2.371_1609324275259_0.9414258671566826"},"_hasShrinkwrap":false},"2.9.0-telemetry-test2.372":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-telemetry-test2.372","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.5.0-telemetry-test2.327+c378a3d131","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"c378a3d13103762a9eda0b7edb0a6b91c1d55eda","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/packages/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-telemetry-test2.372","_nodeVersion":"10.21.0","_npmVersion":"lerna/3.22.1/node@v10.21.0+x64 (linux)","dist":{"integrity":"sha512-RJwh+tEMfckpi2BwguxWuyroNrWFa14gjFjGfzxEm7+vsMB3EeEpGWmqiAux/e3fRZHSbF5DrltNrWjuc1jZqA==","shasum":"dd85489b0674d37ccb558583b6f828b36d51e76d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-telemetry-test2.372.tgz","fileCount":21,"unpackedSize":1009633,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf7F8KCRA9TVsSAnZWagAAJJAP/jNtDsyU0sTl6Nd/2x1a\nTGnh/4wtTcuU7jzxGPqgnBIO/Y5r827PIgxiTdw8Avz+KviWthv5ULyp6Ugw\ncCxqehdJP3BY5za0nM063Al4ho1QW3IyyX3PCba/XrEPIjiohM2YXdZqU/PN\nElxI/OKHYpInXbn1xjlaHwC7CMSYQI7/QqsQe5FmmiGONGDr2Ksjokj1VVmu\nwEks+53Vm3rUKnr7h2RdylYDtVqodoIMiW+c4E9Y49oQKZe57OjE3XZZ3RmM\ncpRj3I7eCYEU2PoAEKjTkGBMvMM/tVpqfMxYLBzYLBHBURYmDAkKZOWgHpgD\nHk4ONo0MsutQbn02+MY+tMoTHGy+eSCC1dzOI8JhqEd3t73Diw+YCj6RpEm4\nCHC+iqOQTgYlIvFt0WTojokcDQSuG1pILfhB5FzhskmKtY46XPfmUiZMhGz8\nbnbU1vZgfVCU93+yjqTeqyCh3QXIfyuPDRz718TfdHL6DCBZa2xFsfojfqJV\nU/mwi993x4FICaVyScw1d9DP1mX33ihS3d7pdOxykG3PbSwez2AQHxWuk/fm\nB7529lQKydG5KbqfSmx3RiikWRPhEDQDAZpAsPUMySqEBbNDdfgmFDQYvrUe\nxf8befPM9xdw/Jv2CuGGcB8MPWmaw0yNkVPk7mWxKFnq2fU84IdCZAvI/qCk\nbO7v\r\n=jh80\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-telemetry-test2.372_1609326346253_0.5218737690395365"},"_hasShrinkwrap":false},"2.12.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0","gatsby-telemetry":"^1.8.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"f8cc2a3f02f621f20af9b60dda6f1980fbd37a05","_id":"gatsby-plugin-sharp@2.12.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-I9O9tPWT5noEhOJnqEeaQ4E9rfKSIKH+cN+xvmJcRPJP4HKcXQqs1NH/tbhKrNvuNyIQK+f8xGiXKeFVvQDcUA==","shasum":"3668f03e96fb024459939859f022a755fea91b8d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.0.tgz","fileCount":20,"unpackedSize":1009190,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf9MEbCRA9TVsSAnZWagAAEXMP/0E0mFo4cnhNgdpojqAG\nHvlF6DoERhel70BflsszKnw8yzk5e+iHK3la8spwY66CamArmw9BIPrv5Vn7\ncAnPF8SIXPX91OGJMMOIFIRMjaei98R1N/rXpZZnk+m+NkzAHyh4E8QGASN5\nav7CaaaIplYcWawbCf+Mcpk2pHFwvk0vlvNXHbqpemyB9rXPTBXMQLPqsQzq\nTW2smY7veUTeUuuY9PBdYsBN15WPdNIJSaaoG74WT0n7IUeJCqVQa52gNcZ0\n9ghNj3xzyXEh/lAHAnFwlA9LmdgDzfLYBDH7KRMeknl0I95kD4H467uGZQxm\nZyXNawZ20+FAKRi2+4nQrR/1QdKIGIVNlRg0RWZTNdlExiDD82miiglzrkzD\nSa+mlA2dpnBAIcNMRTxa8LC7s5Drla/VG3YIGF7GHa99Be/DokvLcn6XJ743\n8R9uyWFhQF6zrLihCttds9LhOY+lb6NLsXfi+IEg8KPIYf3KqiJ5p9hcPF7Y\nDa21u6rrtVy1ng4GArq7oQBIizkKN/6IDR/KRMD4Xem4wT6H8idWYZdCI45H\n8Ey3+k7IGLEPiKY26Ds0lC+ZxrRpyuJCi1Ht6ifAdd72LSCzPaqdC4yotxSQ\n/yKWIXG7l6POmOT2TdGFyYqcEqEto7SxjaDvBdcw5b9wbm7Gg4FKv7dO9tKO\nskXp\r\n=xxId\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.0_1609875738412_0.6466916801816334"},"_hasShrinkwrap":false},"2.13.0-rc.42":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-rc.42","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","promise-retry":"^2.0.1","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"62a8b821354cd7bf9a063275267743e0b39a618d","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-rc.42","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-iVLCdmWJqHPR0eFr+/vViil1nChXfyijDpeKjGafG6a9sd7mJair3BU/H3wjEod+QsZaSRhTRdc0DOaIr6eJcA==","shasum":"098e40aab527e11bc0236d21f125c173b3719512","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-rc.42.tgz","fileCount":20,"unpackedSize":1008838,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf+HzyCRA9TVsSAnZWagAAGwsP/0AuT2vXPNCUHCqSXOMq\nIBMtXdO4SAmRRwoNnmr5YI41jyZJCIN/E/5Xm+/RiIpLhGscv1iEmtAGRY2r\nebYuCqefHY2mCxd2ye+fY+vR6scmm8bAC034+q1VQus6aVoSJK6Tj22qaDBW\nXQ5709ZRco+VYeYPRpq+kJqAXOPd3/pW9pzUIiUFy0Jb4nRZ+R54uR15UrGL\naCGkW5TBVz7aTv8oF3w+CjZM1Wx8iqHEqiI88gtPYG+6oNNIoEQZQykiZyyf\nYZGYnhbyb2Ddx/eOrjbp/TzE06OnBY6MA4tce38BcGeqdvWx5O2ScxFB00L5\n0yG1E6RE2sx1wA9MGj2ytOBHhHwkdGCdH4XP/LC47EZxGq0ojoAw9l6shvxj\nX8lQFPzIKJAc/8igX4u1ePa7jGgAGqbyfIYp3APsMP0Dyr87mafPzMkW2/B/\nc69PnP5+Vy0de35msOuLeh+YDM0XLgCZcnXfZ6qf79fq8gECmC7BjikAWXbL\nAzFWqoXRunCet18J3fqvGy5EFw3q9+r9odkNoB+h/NwR0YGzWpf+oZwcS9hx\ndTEJuPEpaBhsIXmIxLzC1AZQTroKZQfRwYoll2XnAzHlAq8VE13TX784vtxy\nrUWekviO/3IGhSp8/h3AhVarNM86LjEng4Wvx3FPxgE0HGj4CgZiAWjFknHk\n+T0E\r\n=ueW4\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-rc.42_1610120433682_0.7811751221237637"},"_hasShrinkwrap":false},"2.9.0-telemetry-test.418":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.9.0-telemetry-test.418","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.5.0-telemetry-test.373+90ffaa291c","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"90ffaa291c577e615db67b8972ee5e37bf2d198d","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.9.0-telemetry-test.418","_nodeVersion":"14.15.0","_npmVersion":"lerna/3.22.1/node@v14.15.0+x64 (linux)","dist":{"integrity":"sha512-9+TU7cXhCnspf1ekIy9Ku8ddPtqW3DAHBCidpjVNmTKV0TS9Xf9BXUoE+ucXvgMOsag0H6H5VvsowY3Fis15BQ==","shasum":"6880b34241fc0f0b793329439e6e9e74d1d39039","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.9.0-telemetry-test.418.tgz","fileCount":21,"unpackedSize":1009880,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/EyhCRA9TVsSAnZWagAAWDkQAIzEIGC0tEVAeX4QBveD\n3bI8FohPRUiENhkiM7mXLEgZBwSQnd+LBS6w1cIyCLQ1VGeU0b8Phra177HR\ndcH4qssChFV5U82r6luweiJCSbdcWqqc6Q52lnmtBNqPOUN64zDAoo/o6lQy\nAU5tyuowq4UJERTdIqNasTY6eJf8eOkQYaFp53H7eliV5P6PMRlslFVgBH8W\nW76ApiAkeUSHAKiS+Ze8A5xbH545xSoKSwYVDHaAuSPYn4+C+EPb8WyqItmd\nC6wZwYf9nttdf6bhiVdC4hiQHqtom02liiaESvh2XbGSdYgmEJAHnGHeHR/X\ngQXJOEUywnYCcCQPnCsXBwmsi9kp8vl+e1kc0nCyF+4mmKMrFjrEWnwpP73k\ncwcz+Ri3cgSwD2WtW+LcFj3i9si7JwHOpCbEuGywG2CWeCRE9B0kl3CWLBSs\nFB6P6RypsgQWMoVbd1z9WIFdnIunSHMSjzsajKiyO5CUS5kQnoEmt6aeiSn9\n5Pg84phaCntrLCLrkh8mUrPH6cTuB6IFKY7LbhYmjTQMqRRBz1nyKg1zUOgM\n/mhaaeuXlBLcHY9CruIqV+CTA3VHYVFI7S+O7EfMUX/G+KsxQBJyhuL4ysIX\nEEMRmdbWxGBVA7Bt/8TcofZSmd0goXJ/djkevFMpnFkrsQrU/V5BviSpctzs\n5eaR\r\n=sdXz\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"jamo","email":"jamo@isotalo.fi"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.9.0-telemetry-test.418_1610370208691_0.3123712042587896"},"_hasShrinkwrap":false},"2.13.0-testing-sid.45":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-testing-sid.45","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"9cf0cec1540a913772c254ff2af45745206a311c","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-testing-sid.45","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-m6GMctEsdW+AK63aIbRO1pzeW/uvqdWW1stc2g/E0J4CbMi4+OC3iem9eQJevIcAqJU4AXj54T8i+fi9ioyCfQ==","shasum":"d67ed769f637ea1e96e2418a44e27a386a2a5f91","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-testing-sid.45.tgz","fileCount":20,"unpackedSize":1008646,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/at5CRA9TVsSAnZWagAAJO4QAIgXRzzwQfHNyqbnZKyE\nrvy22qNfXZdH6fLBOXBf7rp3ChMW0FuB7sDM9sW6K1kk5fidHIzSF5SGnl9v\n3YpCJDgYN3GhxQe3714ufPFJ3fbZdP2+PVEhPGY4STr0VIj3+I30g8Hi/nQp\nCSzxP4aurqOdl8bTvmAjRhBMwBCH7Qg2nOv9uPFbHBfYpGD4Wgnn9Bp7gPpW\n04SX7M6l/N5bsPvNmM87YCUHeDFdt5ofrcJsyxjHfkujDsbWMhoD6wQhNqpD\n3lTONuPXPdqmwQMUZUm19wcX+oXZkICjjMjIO0uVMiIg7+x83BTIz8iAiVrE\ntCfKMWlcZDfrK22iH1LRXHur22yAGVzQaZ1BUM2/1DTr8XwkFFrrGpmK5DHf\n4B8NSN5nJ7TNEmk+bWRoX+CQVj8srrie6amd8l6SOm4eiVMuVgKe0NH2vq6d\n3QUDVRFKYf/653xT5rtq10vFQO2FhEKe5uIQ27/2m8rOMhIzLfCRHeGhKhDY\nz8eF7ULXH/on0t4RQtBaHa3xS3O6v1o60jLbxCOvC8Qvw6rCWp0SjfrXRPZX\n0Cvy+NMLbSUFiVLZw9Kw0nMYKW2ntMo3lhu4rvuWgkerXDtK0HfhdIdHCVj+\nCllTaWtqa33jNLAnKTRIh+tMoSmW0OROclFaONUUiW7EOe6nioNNVDlgkeB3\n5vdF\r\n=K5Ug\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-testing-sid.45_1610460024985_0.3086687164129023"},"_hasShrinkwrap":false},"2.13.0-incbuilds-special.22":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-incbuilds-special.22","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"58744145d6f8ef2e36c9a5f2f4e06290b0cff942","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-incbuilds-special.22","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-gKbkUVAfpzzDVf0uLKCCxi2Rsmc2TuORFtJ9+8Z7cojKGY1YitG/iSrc2aZBv6OZXE2RtMGRXkPm2jZ5iPfrlA==","shasum":"c5202d9939c2f8d133df9455526adcd80ade3064","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-incbuilds-special.22.tgz","fileCount":20,"unpackedSize":1008432,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/bFLCRA9TVsSAnZWagAAQOcP/Rfq3CV6yrsJacX5Hf82\ncUe++HYk4NaHbCvKB7EG2diibsjK6qWqynXZSOZqvQR0iH7OdlnkRvN99Iyo\nWx/IU0qf6VhDQL3S/Op4yB9MCOpiqSw91Eqpr9lmqL1kYOWZKLps4Ad6i8xO\nA0DoNe/v38vd8UStPxexsYUX/68H9+bLqcH4H3ORd3y5iNMO3LXVaqZ6VwfM\ngyxDG1FMyFlro+n8e8+R1LnFIlpfToI18akwJS6kfn/zWdgwJYFSMzsmd2ni\n3+e6AE/Yav493A1Q0HNe4iBGfvQ7gaRyC+eTaCcY00UQpqtHAgJt/dI6LE3z\nGdEK5OTQf/KhwxeqA+A4WjzkEaT/qs+kzla/5Ii32vc16nTyN5p9FMGC+oxJ\neBus+Y6xwNwuxS2JwHwL62qG0romUfDeH+QnwQ2Zsyvim5b9R3wdLoJ2naA6\nurfGbtWW7uJX6458W4G63PE6UMAqQ3+w4YuWRn0B8IYvxuNaym65BkoYi7Ta\nnfDSqMPvKQZmrilczpuEXxDOBVSxutBD6ixUoLuXjxrkN1yMH0XVMQl354IO\nLL8Tgw5t4cjpiMRz9TYUcWqYD0NYBzS62FGlMxQrOAvGDy3MMMX2HCSGB9lt\nS9Cw+WDo08LXi6JZTmLFSKaLna5rlf3CK7CSubSwNzQfSCIg2nHsVnt8+Y71\nZO4p\r\n=ktMR\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-incbuilds-special.22_1610461514621_0.9155021435430153"},"_hasShrinkwrap":false},"2.13.0-testing-sid.46":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-testing-sid.46","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"295fa2dec12b797f843fc5ba2aa0af84eba54198","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-testing-sid.46","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-CXB/9fjFeaHmf5JexS8tRdw4W2HT41pSqn1N0mlMJqDjgKLLC0zrPTp62JACh3MnbRLJCtCqN465EaQHdACJbg==","shasum":"6190e046a733d9c975372d5b2e4d4c50b68b1230","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-testing-sid.46.tgz","fileCount":20,"unpackedSize":1008646,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/dGHCRA9TVsSAnZWagAAsokP/2TtNN9n6wPD1YvmvY1c\nX4iPqhDjqi3FMVCCqAUO/NjFa3zduN8PVZEePUpmm5Q4tw/UxqhKILi9X7Dl\nDN8tP6G5hJQo+INlsIEKJTNGPDQWnAA6kmIey2FYvN/X6QKmcqp0LvECpWVv\nvxxZ7tDpMvCuwl0WHR0I7FRBvZeGzCf5kgapBb1wzaUAesLgPd75v8TPV1jD\nfEAYar98qulmFIDZjMpTRvyudeTkxGixv2WJclXDawiLLNy7ewIQNuyBg1rC\n2obvvDDvzDLNfm+NY6qU8ntAQPDpVNTX4cwV6VDfrhVFdwfm62Js+2CnnIfv\nAlXwbkKsBsBX+tFGZB6Bz4xgm6O7n0TFdbyLLCD4fITqq7jNyDJYWbf7QyDL\npVPDJCBYakqtJFVGLB5st0DmIqTINKiSdxFuxoPnCaRIyLE78L2WlegYPwhS\n9vAZg9v2EnjlNXlvMm+69bLX3IJXyRAeBkMoLJMuDVLDay3YOBY8KDcAczyp\n6/jEUjqbHwQiBvY+SO8GogXMR+1fFiJ7nwscOVsIISD3IbdWbzcM9lF2cIhH\njtwMlBmvcJHORrfYqN/YmD+9ATWpRmJS3gUw7YYAffQJ5qWweTp4QHsrLdxT\noqq94zSM/V6aVis8R0Z9xDTrW480/ViawkPa0rYYqQkbG9M2F0aHGibe/i4Z\n9OtV\r\n=XB8Q\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-testing-sid.46_1610469766500_0.29968346913499855"},"_hasShrinkwrap":false},"2.13.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0-next.0","gatsby-telemetry":"^1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"5e5c11259b1ab38a2125aaa97e8623bcd0d1cfff","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-next.1","_nodeVersion":"12.14.1","_npmVersion":"lerna/3.22.1/node@v12.14.1+x64 (darwin)","dist":{"integrity":"sha512-a7mOULIzT0a6ypmH67iE8C+cyy8ChLdo53Mu5SdEcgTwmubY9HPCJHefV7IGbyv8PqnCD5XCynT9/rYUbVMt8A==","shasum":"72d975b88d1f850ba0c46a20e822d95e8b32f209","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-next.1.tgz","fileCount":21,"unpackedSize":1009474,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/gCTCRA9TVsSAnZWagAAmhgP/i2jqh4cVBRjVVuf9LkU\nkeWVyTWJY2k3CnS11WULwVwsr95tyweAEOSgXqgys37KcHuxvorx9+900lVO\n3qcx9UWfxEvu+qhGEjW1ONYrp+1ngVChVPn3TeCWlGtfu5ahZWuYTm/xPfZA\nw5p3JXY0sQUPTzKBXIz3wmmFDGlaIkoLMnW9s01sogol6WqPGoD9YkhJ442H\nCGuAhQ/58QCV+bToBqoC2pQObfjHpDkVaTkm3MiBMg3ymtBCtuAqZnJv84Oh\nySNiCNiRDXyvLOpbzqPesg9erNoNTiFtKAyvyRbM7jKBjP9YTviV3zqyVKVo\n/+nPa9gjQ4KOly5j45T10pDj/Qdq77EsSUgwQjiOF6KrAsXJcC0HEGCxeZUo\nQEAWTkgwCdfpVhFVyft5/ENZKHqUPnbN2LwbZFej+yjKWiP3RU4K3/D0snto\njAbUcGz+LeM4/jPb8P1RwgWckgUhci6MXwRGdOvRs6VUS2Tj3TzAASYVT3gz\nQM1T+oBTE7uL2PMDgqMdwUVT99yBOKU1pqUFYKLb41VYrr1RpzHlPZCXGUwK\niS5l25lb9vmY+2l7WoWhNqOOASTFBZQoE+YOybMAt2JDAhEiDRG4KTcXBKlc\nEp0U4Rr4Zh5Tl/CLjbbnO7+E7mOJk4TeXgrZIpkGH7zSNNIra3/h0LsBtv4P\nNQze\r\n=ydI3\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"laurieontech","email":"npm.laurie@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-next.1_1610481810888_0.31637698999277775"},"_hasShrinkwrap":false},"2.13.0-testing-sid.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-testing-sid.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"06e1cad674714215f9c09f36794b14952c697d6f","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-testing-sid.1","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-g2i0Lv2FGG0w1NeQDxloxSzYHVXOxNTBEtO2TgN38Iw/ZdSHoYwYMK631wgS25PnxzEg4lE89YVOua0E/i7RcQ==","shasum":"4be2fb9cac2ddb4b29f122a8c82fb2e5267e35ae","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-testing-sid.1.tgz","fileCount":21,"unpackedSize":1009917,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/hQGCRA9TVsSAnZWagAAWQYP/jFVnM+wdxNLwXf4efVC\n8BMElv7JK/sQOol/0Fs+qYICl1bz/LPuoeYE9JbpxHktr31Ic78Fh2VFqCZd\nsEOD5IbXn0wd/8VZutUZ+yKpDdN51n/zgYGHEvEgRC7uyj12MwEfZpDEGBuJ\nd9axqcE9KcQ+ILBm9vAuXH6+zmOiPq7eLOb5p7FsqFUeVZQpC7/iArxFxrie\nKRBSAHm/GnjRDyr3fvQIG3arVlcxBD/oBCc7ag7Bhb4149oMhSs78wuMLwkY\ndebSD467doa7bI+VXQwN6bn4J79xAGhc06PuMK0WrxA/OaVlSsD8ncELSZ54\nMPr1eTBF7MEvNyHZb405ULSH3a0gFMcHXuTUehyMOJ5SYDtYBVDGOWw2ekQk\nyuH3SbRqGq0LROMZgVxjzsoWqnGU5Opmu9gejjsYjWJiEzSrvQUJCejyIasG\nBEATpexca8zOTmEQztyEUstyC5G3w/IlmAN8FctWyr6rNYL7IWpmYv8I5OqJ\nRaFe1K/0rS79RWQBbHRWJZWyaTw1k59dRblo1amIKDRkgmXEkgAzREDW1GV6\np7HSIvRDlew/MfJRZJTdIejfzPqLbvgdQgMZVgc32H5DZXSTX3WB3RvqZ5A/\nOmHA4sjJzVknLvdgeAoJ9y6+KIgBD6/CT7u4tVF0EwAXa8g7kA9amphplj1Y\nSIOo\r\n=re3v\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-testing-sid.1_1610486789665_0.8647822865937358"},"_hasShrinkwrap":false},"2.13.0-testing-sid2.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-testing-sid2.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"06e1cad674714215f9c09f36794b14952c697d6f","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-testing-sid2.1","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-C1iwmMqFDH262jsS41Gq5xr2Xz50cPFIQbah+ywG+yTRZbrmkAI8Ivok5KOOeMC9NbbzBqnMpnAJjUbpyaaUMw==","shasum":"578e0747b41784ee1e00ab7d23c6528a7396e324","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-testing-sid2.1.tgz","fileCount":21,"unpackedSize":1009918,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/hSQCRA9TVsSAnZWagAAdwcP/jzsT78OXUS2Tv630mAI\nPWje0N0TJb8VAHoiLnVojANChlEhAXJe/0lYVt8bV/3T8TElD74anLaS63fv\nnIOf4a4RM8Dh9lis8aEKJsgdp0mfKZkY82z4umd71NIF6mDGCV9ZilVRq8rW\nZi/jR9LGEvxluXpH+W4E34UeJZbMCiknS6bItbCv2ha0JYoDAEdLQldao1j3\nkwiX0MRVfsjZIr4BlXBwTnFGIlRgzsnUh8MmkpF1EKBZqXzpKtZEudSjfvMB\ng/BR5jDdmX0QuzqBkv95ZZbUSRW/QNRpC6sgEsJjChwRU1rGgJOoM+ak1a1G\nCb983aJMY8qHuSEJUbMTQz49eUjNFAF6EpVK/uKgdQ4ODfEYrZvEHLt95+jq\nXNVsDLGzS4+6j1cGdHbdoz0qJaMIWM1oduAIe0ilvzB3cyiBaImYkx3MANgt\nWZYQbngLZddgyV9AUZVEBc1Dkr4nvHs4tmt5ZuDrFYs5cOTR/vDnvYTc6YRG\nLW4jWkZxg1pr5SWTE2gqr5W1+ESo8/cbcVjlB5vcP/BIlRaKel4ighS4aQMq\nOdzV2At7HMr/18TdSlfpxvsVU4usefDEIbi1VOsJJfdYwB1iPXmDGoSOQkaE\nTOAKHCQQmkfwCT+nzRFgwA9XtXioFxqsP9gdeK7PEg4/RyL/H6JCX0ZRUrhW\nL7Qo\r\n=y87E\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-testing-sid2.1_1610486927553_0.6212904162175494"},"_hasShrinkwrap":false},"2.12.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0","gatsby-telemetry":"^1.8.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"c15af991c3354df6ee055c6a5b60c6b047bfaeb3","_id":"gatsby-plugin-sharp@2.12.1","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-peqF1m5OWk7i0sikiiaLgIlj14ysaPLLFQ9gEit1lL24NaBr0U97h1kXQpl4cyGdozXi//tkv1eN/cFl/9IQZQ==","shasum":"6cc67299ab7555187c9be12de38b3b3c595cccd8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.1.tgz","fileCount":20,"unpackedSize":1009795,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/tDfCRA9TVsSAnZWagAAd6YP/iJua7JABEomNLOAQFeg\nSb+obeFUlqDPmagIxs9PrTUwax7BCCAkohXvkak1XGaxzidiL2XI7Vkygg7l\nZX/Jb79EwZNBLysFDtB3y4P6tSMWt4aLjJ/CMqRCMWOOP3gMHo8sSdnRnraV\nvtIw++DptmlqKapGuZsPTeReRSw8hfKAGrO1YGZP4R8zhVwEK4kLfx5xw56o\nx+9hyHKbFyRFDw53W5zrABjvqZxHyyLkiAMiLeTS+bUh64vUuMxyCg8OjWqC\nEaz2NNHJ/K466oE9Z3vaav/rzlN6bsRqem0D06bY5O/n3KoXHjG7xsqLLr0e\niiM6WLLIUziluq9+va3THCnCSKmKhRk1U9eWZVUTZ29w2ksATNaCH8+1AwFg\nOeq4PW7OXKX53fB3tFceA+TfWPnBxoHVfl3LlcWDfsMJ69N+rQHY3OyIf07K\nXA3Aqidz8nkOnSwJpH0AzeKS2IUz8qbJ+XOZOCMrfEgmWLYLWw1/Dt+Fl+t+\nUyZGjLm5x+l9qbvhhXh3sN5sTrarl8J/wHrXdcuN1/mq9NSj8bQCIzV+44dW\nHiGMgLFEdrvHq4fNKm06KPnnF2WNhIAY2IIAYEe7ekBXb90Rve2uFtOB8CDw\ndC/LAzLcttWEsqBpTHG51aPZoJ13y6/rgPf7pGXBuJ6gknkFQY+LClBYOep3\n8k5H\r\n=tkKa\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.1_1610535134614_0.6663403968212525"},"_hasShrinkwrap":false},"2.13.0-testing-sid3.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-testing-sid3.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","@gatsbyjs/sharp":"0.27.1-0","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"36d6a20f9d958ad324b88e415d5b7a42cf0db9e4","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-testing-sid3.2","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-3HkAWgFmxAjntauDc6qnFNDYS+zrPuSMB40JnAqBOkfypRT3vAgvwVUScoIcBol3HsjcRAAp+k/GlNPypJPN8w==","shasum":"551538bf9b609aa9ea807c739be6faaadea00d1a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-testing-sid3.2.tgz","fileCount":21,"unpackedSize":1009548,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/vhHCRA9TVsSAnZWagAAnLgP/3RvnbdnR0uHK364Iog7\n6EKZbHrF4UWSAoPed55e8TT4TZLg/dkCtcP+EifASujb4LWDPOTl784VF0i9\ndm64eE62vw4tJm+NDTxLOWWz57Reiodo513zrPnUmE/4YeyEPcNnoCkTG1nT\n0nZeqTmyBNL+fihSOt9LJPpYsvxxo8eGhCM2GyxfQOtX/yaEXpYDeiTkNZgV\nZdFemRlX8NthzEtvFrmoBnFyK9zlbT4Ym/UsztzW0XI/NsiYTiR7mpz2Np71\nVaEF9X/lVsjGrJzS/QQa3j5fdE6NTbGp0m7wNCHSkBDL0e6s1LtXUlzI0fZ/\nzopZ2RetS2mwMAefGtV6wvIFTfaeSbFzjcknb8++sJWjNpjHRKfKGfKtaK/m\nEUo5apxSb8yRA6+7pm+Vw2FCgfDVX6etoufD2iG86GYq5ZLNBbQj0vzCssLe\nhDb9hchFaYDX75CguPXTqX4GfkdkPVmJL6PUvS8sFw8E8+HkLfXjQ2OpG9+3\nnsQt5534VExYqlryfid1eG3arPayeZalamq5RPTfnM3QjHv1GiRE+qMPDsy7\nFK8jR9/N1/acdjCSzbswabVZSmAaBY7s6cMrDXXfHh52renuYqJ/p+kWU/ag\nkaIt4Sb84qy6gT0OiaTh8yOxGK5Wrmi945RfLQXx7a9b90N99hwYg5O5tzOr\nTTxJ\r\n=bVdr\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-testing-sid3.2_1610545222487_0.8681300166686354"},"_hasShrinkwrap":false},"2.13.0-query-chunk-stats-base.68":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-query-chunk-stats-base.68","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-query-chunk-stats-base.68+ed19fa052a"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"ed19fa052a93e948b1135ac128cf5abec48752b6","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-query-chunk-stats-base.68","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-Uie6TUw6Sr6X8/SQoY4o0YipbrsXYR9HPKXBPvMdyniwOxgFSUqsoPllY8CI/5fGo0ixCxaEa058GDmsJNMP9A==","shasum":"40745acb6ef4137a9a39ac8dc332627528791e62","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-query-chunk-stats-base.68.tgz","fileCount":20,"unpackedSize":1005885,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf/0ViCRA9TVsSAnZWagAAUx0P/3ltFjOit2F6QgpEwxpA\n1AqYuZFSCvym2IASTrFhz5RwIaj/FbhtivcgkKnKaCIo2M2IkzI9acRVcUGf\n+u/lTZSaDOyc46AOidchItgW1p7FF54Ew2/QyEW/UjHEfSjEwqVZarEwxFl4\nrrOxN7peA3+KONlkwV6wba9/F5iL9jmMqO/l4yK4EIR4ODUECPCe3C1Fo4EH\nM6ZklxYXsJHuPds8S9poTtcizkmoSqIY3rViVOyDF2urOPiEm+Dwndbcc1nt\n8VaYfF/QESrHTpkSa2+wFXEu8qkGMJKiIRgDL1rfqYnIqEmmqTj0WF1l9lxo\nBry69WXUOWQQEOuU1PN3BBY0CmAbkBqIcBCwtr8pJ/VxZc/zx7DBIZAlUl3M\nciDRjKojX+1sMvStrk1uriAjRlaXZmHhoBSsHD/9FLGLdQ9E9CPAvV/DhP1M\neWWUp4S1PPk4cyv/MzllZcZGBMIqRDiElMDuZGVgfiEjqLP6SwkXAEjDPJvn\nGWPrM2NsneNfNXzwVXlCfaTDQkxuUGzJDsmAc4RzBWrA5pLKRxZJEgVRFmOb\nzOYEdmIqtV/XIlgz8E/dod9ergUZinz5ZbwMHg7p9ArlmCR4QfMA/Vgj2YM8\n+5hMpe7kVv3frsfBowylDt00a9E9VmhLVM2d4+k9Y4HYJxKZrVxUdFTIfgeS\nUZQD\r\n=Qqnz\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-query-chunk-stats-base.68_1610564962122_0.0045934726596270625"},"_hasShrinkwrap":false},"2.13.0-1testing-sid.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-1testing-sid.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","@gatsbyjs/sharp":"0.27.1-0","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"3a7a4df9170f78d5cfba7316730a6645b31aacc7","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-1testing-sid.3","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-1NXkaivZnghKeE6Vk2XUrVOWcUfSFJvJ1YGn8m7uex6GM4aM+KFZ0lPKYal2FzsRrwQ8vygrf+BpKKoclWoaUg==","shasum":"d35709a6978dff4ab506777ed0212766bace7ecb","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-1testing-sid.3.tgz","fileCount":21,"unpackedSize":1009548,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgADn8CRA9TVsSAnZWagAANwgP/39J3Te1Gfue3tu++zEp\nEM86QzU/PeGTmUWlkKOvGFRsHdaE7ThA2f+KASUuvZU+nz+5ISdg15FteWz6\nLW2bQMNcYHjiv7TqXPpH0Ts5DZuFZMYDeAWilgLF+L/wjs0Nl99oOZw9GVn5\njDq2zN7wmfD6DiuDx50z0z3flJt8ajvouri70wfVod23uOYVywvRatSbfVFI\n/XsIveYFThKHhy9nUtcOb6l16bw/uLF3e5sfPdvAPOCuP/GVuB7IuKyey2XM\nozb4cvJ7MFh9a96haBu7CA7zH+iXY0Zv+hRjqEZxT8V5nDS/IEa0UUZ4LSBB\nAX8eTLy5TngZSihKfdW9BizZPiwUMMZmO71t4e2TEgAQBKkI7/605Ss4zwpk\n29bRKUBcK8EWu9+aYAxfbuOa6RqIHpIt7KFVPYkbUruGZljwW/WUloY725ib\nqUJT9orB7yW7XqN5fGZzss5Ti5Q+P7LOxYiy22RIqoS0HC1slxqamX6yFghP\n7ku/vB+Ddq2Wvs7zqdYA6XT75Tl9xFr7cyCF3ClOaQUbrHdNMTRhgcvm0WGJ\nRSXAew4dqtPtHVnluqMm1YGmBrXs4lVHScRqPnERCvJVpH8byrm/y+ytqiXB\ntkxVNfCD+CKA1cWxrw3TGgX2p0AquboMlzO3NxJnkZzp+YSyJpahr2wXcGhj\n8B8O\r\n=ZYnn\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-1testing-sid.3_1610627579674_0.1297910119289165"},"_hasShrinkwrap":false},"2.13.0-2testing-sid.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-2testing-sid.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","@gatsbyjs/sharp":"0.27.1-0","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"3a7a4df9170f78d5cfba7316730a6645b31aacc7","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-2testing-sid.3","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-jpquby89PsF76C4eICvSFZRG0p/zuo4P8letuViA+qiGGb8b2GXpi8k2YK4djA5akhnTAUlrqeDs1/+V0273Jw==","shasum":"675309309a4c95e18607f16b26c008cf78ce69db","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-2testing-sid.3.tgz","fileCount":21,"unpackedSize":1009548,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgADqoCRA9TVsSAnZWagAAraYP/0szUwSZLE7ML/SYBCxQ\nt4MLDIS1luTgdNNgKqWvcUCNA1CtRaPAsSnP0gxBo9SA9rQSeyljGOXVE1BA\n0NAzF49XCM2pR1JBZnU50ad7GN/lGOgAIGANUuZfpZD4E6+J7R9VD0VLsu5x\niCRPcg28+iPgtQaqSd4p4QkhfsqjwEAiHVsSTZ8kIP2qK2RivDt3cphbOpMa\ne9VfxQBM/ZxWVBBrZUuI33l3cLpZqZ5BKPIVMJzi5nJf75/XvdWzW39oWim3\nj/zfDRQZuNrH1d+NlqfYYDy7cF10nomPWlAqRicH68bEEv+vWP1EaSTdtdMS\nXBA7AJToaPPDRnoxksnb/15ShdeBHyTg2HtsshCGiBA7GCJwkw/b+MoGoXi1\nHXfJA6zdvIMBnrMQYTPQ+xIA2uNg/roSdqekdNvhqh42VmjkLrTCt+aIIexP\nYTHibfhD/HPv2Sbpeg/dWCUqX/JlIyuH6w0+kyBlu98yL9Lzj7242k42wYw4\nXqewz9PzCCWosVQcowfH5cGH2ydQ4nh5T7D4TlghFkR0v13f4vxqHj9i3G9I\nVlIaghj8U4Y+Xt5i8sr1v7lNSYH/A8btpIMQG9rdnrN3QqDN04YGP+zUDL97\nEA1o7OdAVRciRjVXRJXo5WUMbjD6camSmbuVzYkhf17B9MNuvQeDnYaWPs0N\nv2B2\r\n=W/98\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-2testing-sid.3_1610627752172_0.5268405345060605"},"_hasShrinkwrap":false},"2.13.0-laurie-testing.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0-laurie-testing.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","@gatsbyjs/sharp":"0.27.1-0","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"1.9.0-next.0","gatsby-telemetry":"1.9.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"0.11.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.6.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"3a7a4df9170f78d5cfba7316730a6645b31aacc7","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.13.0-laurie-testing.3","_nodeVersion":"12.18.4","_npmVersion":"lerna/3.22.1/node@v12.18.4+x64 (darwin)","_npmUser":{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},"dist":{"integrity":"sha512-m4Bf6HUgCLQSCBAa2dbiycVZ19CQxADuJ7zAtKIVMGIGNw3uv9WQUkWv0x7keXFlUofdgX7Hr/lElSnqI4mWpw==","shasum":"278d7d3e55f95631b905c5229424bc98f361ee2c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0-laurie-testing.3.tgz","fileCount":21,"unpackedSize":1009550,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgADrtCRA9TVsSAnZWagAAxEcP/j/qvDONxLH4QHu0edKX\nxL52If30Co5jsxThD1aX2Bho+IFdezpT81dqjFDYw5zgZii6xJ9EdpfHFWHu\nAAgOgoByfoIpJBp/tyStFIsLjGPM1r7x4hHlQaZPxnePYcEWEVA1DYqmes8t\nHvdgwpT1shOOO3wE2ndq71BTu+n1p45ZBVuYGVqb3gYNXOfDSvzn+Du4tAl1\nqra57ZxORYZKFm8eO0zdeTUQmz6jnUu7yoJuDujoqL+8ncaOkrM1oW4ccbcm\n6P2HpNqtYhNf0RF6j2SgQCk1Q6TZ/+9kGLB4BKvFhi/IRf1fQby53v1M1W9t\nhk/3jyv0P6Inx2p/Yo3FP0IIRzNBhhfWcw9MPaWuG0RDrl1ux/vnaUOm3Vb+\npyVoiaeZnXZLQl8uhhstpqewKUzQKaCP4mpdvycTUpzrnb6/fQE2GqR5b+br\nDx7aqCUOVMF2x5u7Tm9h6bfyx4q1m0y8jHIQ5GJhTYRBhSW0gvUSEwKzHDRZ\nfC6Yst+1BTUVu5w3jDwufEyGuPUb0taYDcpE8l113bDp7/o3FWwxM4T/Rf6j\nROfNW/PPHH9+suv39UdeTT5p/+x4L2qm7QHxoCgfCHUi6LLURNxZgMC86vqM\n3rB0cz1oM090LNowwV5qoJusKbX/wEQaOI2Us9cT3dRYJIpdLVHaLboaZBqA\n+SrZ\r\n=mD7s\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0-laurie-testing.3_1610627820517_0.536930597647973"},"_hasShrinkwrap":false},"2.12.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.12.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.8.0","gatsby-telemetry":"^1.8.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^5.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.10.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.5.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"0a3a3e4245a02e9878a018f27242efd30f807e6a","_id":"gatsby-plugin-sharp@2.12.2","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-25jys0BnsO6jLa5Iv1ykerLBpeaHKSmeq9ATeTghrdHVVQmi+H2uEjJdp1kskdHQOCa03850ZfwXyKjp80F2hg==","shasum":"3f3b028e65d6d34bd41fa3d463fde773a9d8b77f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.12.2.tgz","fileCount":20,"unpackedSize":1010615,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgAs5BCRA9TVsSAnZWagAAutMP/14jqlD+xMIwIDOr2xRA\nNTaCLSLE3Lc89k/FVMC6+bdMGuZ6eIDaPs1FBlHxlj+qUlP6iYzPjKrmKLo3\nS0FJ5TdfgJMZcwcvBAaaMnNfbrSqa4iXQUhk+K4nRTt4YrM68dchqib3te1z\nJp+n+Oa7t6qBdCsE884reZAy3tWSM8oTuu19m6m/NaK5H6GTKMPt+2M3tuc+\nXLNRCIQE35jfh2FA0dwlfS89ikzyyKw5prg5jlFIt16AoYvfHagQhVyAia/I\neJw1fkcO0tkqcRcPGfFSQt6uqKo0lzJ+4D/oMN8PvC9xaKWNQCquAJ7ay4RE\nz0NSLuddqxplZNoINB8NLowx02bGyQ9AB70PwDF5lhb/734K4ZBMcmyZ9pZn\nfaucYosbVPHvMqZZUIhqcvvUFaSnuA29L0n+UR0pgdfXrm5Kt1cL4hUrjNT4\nDoQq+tQhzUt5kznEviQpIO7e4/QOrZRIOXtYQ+I7Veh5AWDijPanWVzBpgOD\nJElJTNvRqikPFDuyp97ST/ABWwK0384sfm9/HFder1dA7ZndU0idgGQGsTH0\nfpUAbBUsrP5an7fftIyQe+wKx5qhnaZ4++5JTlTtCXZWGOSZ8NSqbzR6Ec1I\n6Nj1Us7j9btnPjXREvyrpSXMiY8CeO6G+uUv9iCWePyz9ckQWbIvfrfZjZpY\nvbQc\r\n=Qh4Q\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.12.2_1610796608939_0.8551827865137356"},"_hasShrinkwrap":false},"2.14.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.10.0-next.0","gatsby-telemetry":"^1.10.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.12.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.7.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"d4a8ad26215cc2189d6473a657e0ae83088effb1","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.14.0-next.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-r5J1LJJ5nmyGm++Ul7aV2WD0quw20GTR4ZMmdtdOb5FRH+bLMjAE1IVp3R4nCYbk2uiweda6bcafdb6XXmogbg==","shasum":"2fcd06d61275676a2e95baba57ae216ffa2e1f8d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.0-next.0.tgz","fileCount":21,"unpackedSize":1010682,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgBeDJCRA9TVsSAnZWagAA6wwP/2fQTsTPYGvIDuEQDwDx\n0NPUgJpM4T7N2rA+d6uv2lJlhXMzT6XoSREfwXApt6Ykgi6jd7N0fFSzLcPx\nRfLemTQjophB/d+mWlxmj0ftIbtYY2sHoQgp4n9rrvZfnvIYH35cFms2bpsi\nrZYHj0DstibMb0Go/nKl71hRfOZKjPinXDTzyE1Ngc236davNAt4pTpu0Ttx\ngvyZ+Ydwz7Y4XhBR0BfN1SFihSi3XRnpQim5zhy2hV8L+dcH3a+ilwiszqhU\nOH0gR2FK5ekXBhfA4BRIoPONldNBgRqiuKDOW3mvqMuwCA3qU2UJz9RL4wg+\nwqma9ImxgkAyEo6JfFKg1iZg2gk/++EQHVbGk6CFI0KHTPbLuIl4oRQvQGT3\nemt2Du+RJdTmJIG5VH07hI7lUjfE+VuA3vcQ/w6H3Y2CY5MozlnAVlHdddWH\nLt9aDr611jdDWrgmsM7H86vy/50CVb98eeSf4b4bZU1xVxVSACMbfAZuinHX\nsclG/ZxseLexeCxYopOW8qS9xghMEWOixWuMtFHAhK8dTWv0V1M76GWdqRJE\nwxd7wBCBd1Nu5P9SrV1FGnSEFcNoitc8Yj/7vQfUxtDCZsnP3UwzUVribAlc\nms/H6MOfuOCMFhrJfwkr+mOyDU1QPa2h/8/uoWMknPvgR1aSK0v/BhDRj1lO\ntGv+\r\n=n1cF\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.0-next.0_1610997960567_0.3323889070733661"},"_hasShrinkwrap":false},"2.13.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0","gatsby-telemetry":"^1.9.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"fbc58933c6a6d5d8837e36104fdb74a0cb02163d","_id":"gatsby-plugin-sharp@2.13.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-hfg8+vBkhsJxRWNUFU2C/gsnSAZNa0YuhyLSqod58ep/kOR9hwYRX9vMoD9GaKVDPJxX/MrgEgwelawi4Th+ug==","shasum":"d754a7751f4f3fbc44920565b1b6b68deb38db0e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.0.tgz","fileCount":21,"unpackedSize":1010631,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgByj1CRA9TVsSAnZWagAA7ygP/iuYFhlKFu1TPMyZiCnl\nOlekJUU7hxnQqU4wTnjCp+H0Bf+ROsS1vkX5QDqDfujE7COw3F2pwMQLu2uL\nIQmMMP7gFx3o8eG5JtyPqdvo9Td5ZkJtsHRltf1vP77WhDUghCRlEApB7Mpw\n1d1QdaqJNpHKrLjTJ4A+X5Y1cfguP/Ix+wNfkG07w2jDHecDFB/rZdytkzoV\nQB2co8NDIfZGjUqbwveugqohIWO0/y9+vgyThWxIbE+EHTH5pyDF4ar1fw9h\naMNQOr3L3foMF7PIUWs97U11YyJA+RZwtaNsz0gJW6fkpb889aTq15mZA4DX\negp/f6++uzfYdDaf1752txqO/SIqS1ozq5wPy+B7QQfLLb0bspDexhUg7ZIB\nS1xttuRhvP0Cx2dDOIVxBOKERV/jowA3fAG8SaDwygHvQUSVlH7IgqP0NNtr\neJhkxrkQ8aK9ggEr4orGjLU+cacyCftRqNtIsbZXYMa33/jjQcX6zt4miGOy\nDmQyEDKTvieoDg/TE8FqNJ+yx+TqqznceqSlrWFmtOZU7RkMJsFD/DV/7MJ4\nUJd+jNf5RXzX1RKHFUGQt44Sc4KG992rK8D6BmwRCvlwe/xF1FuP1iI3p3BJ\ndTYtazWLB3tYLjAe7Uha6iOmzYy5wCVDv/Mkd6FxL5p1llhd6DWkaWlCv0xu\nROwV\r\n=RQOc\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.0_1611081972365_0.8914994484564038"},"_hasShrinkwrap":false},"2.13.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0","gatsby-telemetry":"^1.9.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"b6cac825e2044a9ca793fe057fcc6593d8f27d20","_id":"gatsby-plugin-sharp@2.13.1","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-giWDcw58OFy7SP4kzgCd2qXxdWJkKXE03EviOxIjD2wjOxym+eUfUximxgbWjLT6dL9Vog3e/Pre57iVDPbPLA==","shasum":"31e9c9db5f500ffdc5e5c28850ddbeac718bcfda","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.1.tgz","fileCount":21,"unpackedSize":1010818,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgCGc3CRA9TVsSAnZWagAAxbIP/RvCcbGAgeAe7wARf2Ur\nxPJXvn4q3GcuRZpWaxTcgEgFLMUJBoURWNh1a7t0uELEm2O9nKAx3A7dSZVP\nQF9tDB8vo3DM3P53tPWMCev/Ams/GvdcHzcQUGl0wsjhSCOlIfaWJxw3LKRL\n7vuGcoYJJwQgy+sUphOBmFKMsdmgFlnqS7iygLAasVTGcPLZNk7jekXk901E\n8i4M354v7PKXnw1WwdL6Iad+7VuDYex9NeGxVvh2LdL0ylbc4TxeY4nHbqma\nfAaA7QzYybl6ASly7npKbjg5iXSroGBOQRujkXaklO2vco984if79sNs9ATU\nakgbS27RzjnsEqZh+wtXtfiUH7KqdMnphy0+6b4xT5TMIGmY4alIjqRcsVgF\n9eFK6g/wheYGHjHCXtxyPQRoGDyE31ZoAiSOciB1yzYxVA4Sy+GUqNq/3CRN\nMF1flR4D2887np1Q/p80PYsshjodcci8bYp8YWysRkgY+1UZdt1WywQcAOjL\nlS8NQJoA4bFmINBO8yBIovaViUzhEKnezJLsDHbyrUswoFTeO88aMyB6L16K\nr+kPQmpVgK+C8A4lyKoxTZBhIqI8jb81Dmg6GRRKCM6wBwSeltY3DMzisNIr\nqkSxqgJDMdznVVaZOmBf3jY4Cu2KcX4Npc+c2R8LAWJOQA86n7dvBp2VY9Ht\nmAtf\r\n=7jfI\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.1_1611163446906_0.5534527835580219"},"_hasShrinkwrap":false},"2.13.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0","gatsby-telemetry":"^1.9.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.2"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"3c8c67447545d1a4395e67848d10a2d50d3f4144","_id":"gatsby-plugin-sharp@2.13.2","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-e3awqhwAq6so5NxIsLV10uiI557tCWsQaopEFp5IzC5J+CqqY1R57rzvymtR+foWCDnkSk4int6ZdlRDevMiDA==","shasum":"ace1bc78227e18ddd882d266decafb6748a8863f","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.2.tgz","fileCount":21,"unpackedSize":1011005,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgD+CLCRA9TVsSAnZWagAApfoP/3JLZkQso5JZjblRCqq+\naQgBsVK86szyYHpVG2Xkb/oV+Xkl71Uq+E0umcvdQOe+Fex2pWMpnw35Bv6G\nwsEuXdBO5Gwy4uaYmkMkberJP0i/lGyHSpRtTtVF4Z//rVo3f8wAWpLD+CdJ\n/MoNvjfQeHdug4kQuMsCIBRFpOJfAjsJTlVjd6Wl1KQ+7lWpHGfpH8i6tzfb\nlTSbRxpRCOO4hn7g+W6whkFkGQrNAxCI1DqlleTmAjd2RCz9LS09Th/n91G5\nPu+vbKArnUraEh5eZzI2oeYqwyvJVEMjBUjfbmzyyck3ofyfdPoV5j+yQ+/2\nCNlxykYvoKIzG7JMIZhqioPbijdIjCYyvJNkTqeXaeWFkgye6V/T7230xHoa\n4VR6KCV8bayWzFqlzCFEBUavC7uhxdBChSgd3Mv07H+KIjbbQ6kiYWU2TtQ2\nCAVGDaSHPI49lp4FT+cUHH0A+8oGFNhXDs2ZcmLH/1NujT2+hAsydVezBH4u\nBZDgj++QLODY9NLtNXNM/3OE8Sgnu92W2Ph8w6Vg3HrA0Hf/Vrrm2Uz0Fq1F\ncNbtlFJZ4x728Jy7UXDJ6CZpIKewiKf/vKHKiSSb2pwIeua9kcB34/qbQQXI\nd6g2O7kwoXzkhQeQZRK1CEwarO+YXhe5/zVxfjkfdbj+JF75yWTCkscPkqIm\n+F23\r\n=+eo4\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.2_1611653258411_0.6479761520236165"},"_hasShrinkwrap":false},"2.14.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.10.0-next.0","gatsby-telemetry":"^1.10.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.12.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.7.0-next.1","gatsby-plugin-utils":"^0.9.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"7ce988eee6479c531999d422875d878d64cc9463","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.14.0-next.1","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-s+HyDVz0JJWXkeIjktBR5CERwJUM2JIMzljKMjNoKqABdnQGW2/S2jA9D8Fdv1ZZkFwBqUdNDvu5djyUW9nSmg==","shasum":"08d73448c65da169ee8a2d2e3fc5cd6ab853306d","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.0-next.1.tgz","fileCount":21,"unpackedSize":1013114,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEETzCRA9TVsSAnZWagAAvewP/RSYmN9HCAHquxryugHb\nrX8M2gc+5I+u+HJySJV406v+REVCeM4yzOw9SNN8CwwE5EJBmYwrHAgXI8eH\noHNoRGUyy8xZbaxlPg/yFICoMM/r29qXvUsJVvMZGy67adZ2YTNE+wEKZV4i\nLPM5tzkzPDjhDAAsBrZvqJ+QWdqvf/eyW6zF2g+qRRPMC2FL+wgldqnolq59\nUg5X/nr0aJSn7GCgq88ekLApvqReot0j0CwBOjq+clbZhbYPnXo8LZe8F1/r\nHPZPxgv/9wk9G5XngdHNp3/oXLYL258WOowg0Hi9KXYNkVuImJqGGKkRlRaC\nqVP019KS/82rYDrjX6xKXISpQar3Atz93/+E8vK7ZtpYrU743EmJARe1Pxb2\nTIk+zE/7NuPcTCOn2/ZpwF9JJ9ugTd3NSOrfmb2Fxl3HFXzv8UXtouAKErMh\n44k2akQop2AwPM70K1Omg167ECV5sGD5NeJ3LLLOIpDzQJtWX/bFcim1ctiv\nOvH/AVxgUt/F7v/J7LK7i1r6x/VdN1+vDHsPgQm0uTNKLBHk52SkDnbFFRkK\nRgvTjgG6t235I1gsmfwChebHEcOchenhabXHUQqoYedo6YzHzEysZLBWAvCj\nyspRFXZw+FHNLPmVOASfB/9hiGAzGsIUC9XiojHKikVhSx72k4zoxD9sQJ/Q\n9L87\r\n=mkfN\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.0-next.1_1611678963054_0.14491757510176906"},"_hasShrinkwrap":false},"2.13.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0","gatsby-telemetry":"^1.9.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.3"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"4e4b1edb216aac131040097ef8465b05cd8cf87f","_id":"gatsby-plugin-sharp@2.13.3","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-ke5yY1L0ov9nm8kliBAGdZ/R5rSwmQmZBku79kOfMimK3IXtxWUc3tsQpepmLtmdNsQIeMY65gyNPHE5OrsYzg==","shasum":"f06f7928dfccea139a3e69424bc59962ee1ecf82","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.3.tgz","fileCount":21,"unpackedSize":1011192,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEn1kCRA9TVsSAnZWagAAR3UP/io+BSElJeF6VoyL1SCF\nw8chybb3D+LPimn+4QmCZCy8aYDX0DwkQskbEqyFow+boOBs4gU8P4YKAH0z\nEO/V4DlUIxgmmoyNFqnr74RUi5gMY6BzXDsxagOHOu7HT7/8v06NZhKZZQON\nhh8aYe2sBITVmUidPivVLN8geudA3b0A2et3IfPQLIlNxbzgpgQ+ojEozUby\nJPzsDbgLzhny7taUf+UbuRgh38pVkg5HbP/b041ZjG5hw5IkCNSYBSTCLs7t\njyhpoZf5USGQvn/NWahdNJ9VL9j7C3e2JDix1aDdiht46yZ6Bre6VBXgBjB1\nVUN/m8nzZWgmIdVeon9Lfg0gf/BZM9HgUF2RIdyG9ug5I6cVzBcGeHJVpFsN\nLY50lCTerx4HJkHNUqMOozJ0Kb2fUu6KXFM5vv1Bnu7oPX5stD7yn7zsXiee\nGtkLlylPsYxnOuxuQqUyxJV3gL96eeNnEtDijKHBz1cen1nfAxJ6YLhY+Sy0\nx9j+vKS8H9KeAfUt88tGD6B3aoCPlNXbMdOIzI17uPW1MoHY81TUpMUukSmv\npuU1V8aUqIP876DkBZiLHi9Lb6tsfYByHDU4ezmGxn9BWiThCWgvdz0xLOY0\n7UDc5QIkjzsJRjHPtBcJ2SMCOvBP83RXmEY92VMIAn0z8CIKb+5sdfaDP+G2\nyno7\r\n=K2BK\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.3_1611824483568_0.2778122087985755"},"_hasShrinkwrap":false},"2.15.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.15.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^1.11.0-next.0","gatsby-telemetry":"^1.11.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^0.13.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.8.0-next.0","gatsby-plugin-utils":"^0.10.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"1da331a5352e3f7cb18f69050b7199481d85fbcb","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.15.0-next.0","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-aCbzW1qZretT2pVr4JSObrgEZRUC3bDUqpnhyccDxmkGQdWFbaEWIpADPE25cG0s5kd68rwIiRsFCA0ntMENUg==","shasum":"5e530f91e5eef782810060a7000af9f497df8b09","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.15.0-next.0.tgz","fileCount":21,"unpackedSize":1014805,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgEueOCRA9TVsSAnZWagAADDwQAIGc5mCYeavxdjhE+bTM\n1IJyTwrHttAcTAKG+6WxjukYXHn/JVEhPRLQ+LZQv4q6YAdXy8x30WyoD+9e\n3XNhGLj8Vn6/o+saUQUOUzPILpN6PCnSYp3A5HHAHRKxFmKmfkRx9pKqarRR\nH2ibiuh4JPOoKHG3iqlE1Yxu0eSCCCswp9lMkOg33tRcuafvC3UAub4EhvKj\nO/W4fNk+s1oVUDKBHzmBpoNdU5igPfjSeReiNz54rcQarLZ/Oi/NkHr3vzvg\ntVJe/X0YIEer+18//UUX97XMnXM37+77IMfkELkgHhjt8vGAY3X3pF6hiivq\nnBUevStoxhJ1ZZBSxHkfDnpWsuEAjuPmaq/vG3d9QCXJo3PeuKT2lC3GvRgX\nbm9Br5GrSk/rLsWgaXu+7kztc/qmNw8krGVKvSPcbUXTGrnLeqmo+jcqZcoC\n0RiA6l85hl50qbATLjTSaL26X2w7HZ6YIgTAIwU2ZnBIOXuyJ5772/hQH7G7\nK1irxX7jetGynLwgYKgHSvIf9Vgxtwr7h4MCAe/CDAD3y8fat2wUh6ztFTwz\nYNeys3k1oX7PZGkTDYM9h94pC8ypa4cQvBJ9D+hB/5vHu9MQ/qYu8T398aE3\ngM7uixslNm3DuxX/OjekPS0oMSJHetwJX2O8WBnS4lGqkK4vv1Z+QQlAlxlj\nNbH7\r\n=RLjI\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.15.0-next.0_1611851661966_0.4325574152049376"},"_hasShrinkwrap":false},"2.13.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.13.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.0.1","gatsby-core-utils":"^1.9.0","gatsby-telemetry":"^1.9.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.26.1","babel-preset-gatsby-package":"^0.11.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.6.4"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"a777f9fb9a249553f2b21e94b24bfb4d3eabedae","_id":"gatsby-plugin-sharp@2.13.4","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-51k2/aCHGw3Cic8wRyPR5ny59OVUTXs+AhHOe3BwEOTWiAtpZ5eDKVMPHNviYDHOmiUpn17L08Ht6njbohs39g==","shasum":"67f730418113072e8c8a011d37416a25a241f680","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.13.4.tgz","fileCount":21,"unpackedSize":1011379,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgFDxICRA9TVsSAnZWagAA0vQP/jl3FEDIWS7WU+XxmuwS\n1QPRI9ZEBG+9w4sG4cKmFTbFKhHVKKeTTBMpUVcIa5aWeimiP3HcNaeoAcek\nSzlrFJXiZcwr3+MNlZYPc1MZj9QwJyZK9EqNhq5p/yWJAnHB2OzkRtDnqOEr\nokwoYtSjleXTHjE2CkMf2onG+BOVWwtVNusvCISRT5WiN5nXKWJt8tqq42EL\npZ7yL9v8m1CouBEuPzHa/k99UW0KbduqMhLx1kCPhkrdclGEAH03ayRI//Tm\n3CJLYubiWc3Bv+NfBED+GPYgdyqWU1359yv3f7thHDdGC9c0Wg+7hGHegqIx\nr2X5qRcZvLHfUCOn9hDApL8NjS2yndQMZOxeApKcjGjYrjDg1aII5srhzF7R\n1w1jXcyAnvIakJ+ZWpU4Kg5JUjBVSS6OlEjY2Em5xkUIN358B1DXuH6NI7xP\nlncMcEkiuvu+XyMmPLabjlcMMNefpOklrA+tCPS1jYpICZUoWknKLW4BUehX\nP1JYKvWbRe1cdSAWcTIN25RWVVCaUPxWxxbT7338z9/DDOrTYaldW44eYY2B\nWUIWHU6XDrYqQ9DC2vDKR9JjzEfGk8Md8M+BdBpikfN21kojJ94O17CAp86y\nR48iKvKZQpda+C4qlN3xLnC+mzkZDFQ9yC0GGwgXgN51U7hoGgPQ772QW07Y\nbxiB\r\n=GKa9\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.13.4_1611938888385_0.8994517170466214"},"_hasShrinkwrap":false},"2.14.0-cpb3.26":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.0-cpb3.26","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","fs-extra":"^9.1.0","gatsby-core-utils":"1.10.0-next.0","gatsby-telemetry":"1.10.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"0.12.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"0.7.0-cpb3.26+feda9ec2d8","gatsby-plugin-utils":"0.9.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"feda9ec2d8b4f4a10add0aae1de72c5ac8e41cdf","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.14.0-cpb3.26","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-salo/pwz+O9Lsea9/5DRhZCSlcoxAK92aBNCUCbm6tsQPIPypUv3HMeB2QwWRB/pmyd4GrUNaGuW4/WgowuN2g==","shasum":"65278b88d342a8f35d32482fd02e4fd9c979d131","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.0-cpb3.26.tgz","fileCount":21,"unpackedSize":1013133,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgFsEDCRA9TVsSAnZWagAAfZsP/RBWk12nlzvnjtYBggcj\nNDDg60IpeHNDFIELWafQXP1isTnmEIc3eIgFcq1ijZCOnk6wVsJaUYnRNhCi\nAAhin1uq42GparripjE6sxe7g4hsy2fMq5ODpZ969qLM7HDhLRsfoUNbI6Ji\nhXo62hAyHFWIePuxv7j74H2wq8MtDEvhvHsD+M14Xm3RDeSddK5lzPcgpcPr\nRZtow0i8/nAUjp9CI3wCBIgFOSALxVOtXTJqBz+VttmJBuGM47e0ML/TiUkE\nypBt71VUuThVb0vmgig5G8ukFAS8QH1ACqDFjXNBGQ79RYAM0cJNSHeozpdK\ntAfsyn6RjwhM4YIa6xFZHsM3yaDNdSAWsJEBjbsJ0nvpQhItnmGQh5/o1WTY\nyrSww5ff5u2VLtmjbowJ1Oce8jgbsjQbtgEVlxGyokuKaqw/9fX4q93E2g1B\nb53ZW3jiJ7RAjWrIUxpfHw0C3Vz0rF9j7A7dOgVOct+umBca+Vd5skwxw+ry\nkHLezobcIUnlryj/js4ZjWSxJHHnHfgsV3qj8M7sYViT8sQOKwcLgwYvWVH3\ns4rlo+61rcCapg9Da+nfZoqVp73DPtlmiFcexbYqCDF7pgpPdq3Q1Tg8lHc1\nGfSDKGmnlrgx1XWuV5Ym74vHfK5NxmGKpSEghUblOOWlOor6OkTcarH+xwk8\nQIy7\r\n=bFqc\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.0-cpb3.26_1612103938980_0.8092719396100994"},"_hasShrinkwrap":false},"2.14.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^1.10.0","gatsby-telemetry":"^1.10.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^0.12.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.7.0","gatsby-plugin-utils":"^0.9.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"7797522184600284a44929cad5b27f2388eb13ee","_id":"gatsby-plugin-sharp@2.14.0","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-399SJ83vuqP2gkf0PdC1CXALNebPfaTxzuE3uF1LalemeXuBlR0YvVo5QG84AxhnEzTfg5hWKk36F5A36xX9ow==","shasum":"763600d1339b5d9197371aa7e1cca7a614ebd269","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.0.tgz","fileCount":21,"unpackedSize":1015137,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgGYZzCRA9TVsSAnZWagAADJQP/jaEaFeu46Py5Hcn5CpD\nXWWdGFWzFnoJNsTjcwES0aS3lrByS4/UEOj/9yGryPqaYYkyaxcmbh9/jxSf\n+/l/W+nhtVdsvGcUcxqkvnB4OSv+WH+i4dSRuEju0zirFFOc0Jujv7bW2xg4\nE5T4NqYSvG/BZbCxCPF1fzQ5oxeurXHffm6FjkHgmEvYZGtMTdL83WIjiP8Q\nUDUdnYl9AJgKMRrl9INSRsAZOk6bF7+c+oWTMMawr2jzLrtITt6UbMAD5PE8\nVGnCUAaoaUYtF3UdreAMx0ZiFibDsvtHrOWi8CJ+AuUrXeWtObLhLZPSe4SJ\nu/GP+RpASE1Pqce9x99WPttwVK1C38zAEu2JOuHupjUDKfcPGC9hl3gm580z\nDm7UEXcELdgHMz9zsGcVIuUqNLAwH+7VhaIu9WjYNaPu1dnwxpgNDICe0w7N\nw7P2vXcudBHl1U4bQ3OZsAmaQWs4QNykUG6hAWlPQzOCga/mpGZqii311nw6\nIw/ql4+xf5H1DByBlGU+QuNi5sKRO+pcKujJxpe5P6t5xs9U1xWsofEA+urT\nHlK/X4j++uBJxWpeTM1MYE5Jx+1GSr0xEdxRfWv3tPkxvvZriwsgMIzMMcAS\nhW6vZTIJTN0DKmVUPN9Y4lfE/B/TPfX1aQNjqe4aYyFYPo9quLblrSw17kQI\njEhh\r\n=XThT\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.0_1612285555019_0.6834488324392438"},"_hasShrinkwrap":false},"2.15.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.15.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^1.11.0-next.0","gatsby-telemetry":"^1.11.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^0.13.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.8.0-next.1","gatsby-plugin-utils":"^0.10.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"77f7487bb250275cff8bed46befa24e708189df9","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@2.15.0-next.1","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-FJynGhqp7YOJT/oNV82XmXHiCzKS6nZFmfLQaqgCTITqR1iQUf/vOfcx83XpdifYEdpPs0mL5PEWuk17CtVrYw==","shasum":"e6bf2d2a0104b1112af316e61db3c0d96c3b5804","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.15.0-next.1.tgz","fileCount":21,"unpackedSize":1015296,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgG8/aCRA9TVsSAnZWagAAzv0P/1P4X336dI7Mng6Scpz9\nbXoWTIRV8tMYwmkBYhxMX0Ekgxg4NjVPFwB/9SGtr3/lQRcuW+YIORRz8un8\n6H4incV877yLLhuMjPAXcwdH4yG0jIx0gBTc/JFDYGn3h5TsyC0UY2r4d172\n9NXZ68/AzEYThNiUXZDRLwwzB0EHQurrMoOuqI4LDu377LsMdHbXPt7c3uB/\n/2QGdHT5WwV0m7IFgA/uSqS0w1tT6pXGvC3kXs+R6OPoWXUAyCkLXCArJL+y\nkAOq68DVCzNX+kd3/dC4ovQP36gN2EwUAjHdnxxNOM0hNo5vIxg6bfMYkROb\nMxn8b81SiWlfEce+y131kvQdwpZuDmPy8Y++7iPgBxDdWtvZdxjuN6+nCYhA\nksK0knckM0JsQjg394kY7xUyEtr2P9kOJ+cWTjY5FYYh2DhZ3pjo65aSjoBv\njQLZDx0+HJ8GzhIwMuNjP0WvILxX5DLyxPLsOgp+/rRmR2OwAxXBbOPWnE3u\n66EedX0sLH8wQNKbz3vQwqzpIDZi/bGHUKtvto2QLRwVA90NpdYExC8eMTsI\n2BjLwtVxZTVmOk3mvfIbkmGyQxIg7rdrwTL8xL1ZIEj7zAPDwto7qdk0FRCE\n07eMOtYWdNjMvChJxwqpD1aAXEI2m9NQOpYWXDAZkE7P/d9pFz62F3DRNVNB\n7Qor\r\n=aJSE\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.15.0-next.1_1612435418022_0.8196676441871391"},"_hasShrinkwrap":false},"3.0.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.0","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"fe4cd06c71942f535caf73c0462f0d5b7dd485ee","_id":"gatsby-plugin-sharp@3.0.0-next.0","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-3us3cVEdwj34c0n4NCP3V6nkj8UpXzf4KmpYN1LbtBV+VZnzLjMGo1WZMlIXUDQGWzo5rtDMfsTAb5+5Jsxl8Q==","shasum":"eb1faeafe3b2c861390bd80919c07f665dd02c21","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.0.tgz","fileCount":21,"unpackedSize":1015496,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgHTbkCRA9TVsSAnZWagAATSAP/ihSyY1YwLknrqntklyp\nt7nBSVpv+eqlsW8vzzHO7j2CRB5JW3+akYwLkOr9lpF9hZnHIbMJGp3Yo9Ke\nHbrkF9M1VRx5T7DlRZs22/SeAxnSywlGF4nsJfUcWOB4FgH7W4tYjLg+TsHb\nQluXsR4FoG/tEvE3FCNyQGXUF36EPxlvyHAU29XG+1ajoG3z1838rQ/ElMsy\nC0ibJwfX9QiUolHfWLmWH4c80MnidhiJjGxSEekWaMij2jsR6iSoToAaaJJQ\nQ+eNA/5gHCga46vTQkAk1D+TmZiXV5ZLTJ1uJKfacaq/5Z/6aMEwzeZ8z0Nx\nDSY0GdeLCpC7z2WZqqAG3PpDvubAvxwntE/GqQx9uWxTUT6HvyXiwLd5yvSd\nDaep3Dof2G9nKXbEdSK8fWssqS5mqC9px1QZh8XEQL6kFy36zvtbexFrYAqv\nrcMeqKLb/4ajt9XtBZkbDTjD17oqOe7URGk+lHAP5oTW5feib3ymL4CMRI2S\nx9CW6ETr/NyxpnxY8Fzq0bkWL0TRoEF67a5PengZB7CUSVDYYtuPRqoK/Agx\nTVYtxzpZSPaz3a6dxWDWq+jpB6eERcRSmdhwoPoWvg/N92vP01HyM1n+Ozyh\n9t/MDGlaa38h95Gdx69F+nk784Q9RTi6HTWwi2t8/VzvtfTfOJZbz8tng+IR\nlYjK\r\n=9Kd0\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.0_1612527331654_0.10518578812328006"},"_hasShrinkwrap":false},"2.14.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^1.10.0","gatsby-telemetry":"^1.10.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^0.12.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.7.1","gatsby-plugin-utils":"^0.9.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"1bbde7fb06cfc1fbf4b3cc2580d234576842304a","_id":"gatsby-plugin-sharp@2.14.1","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-JhYaVtXJeocJ6VWaZqDMLbKVbvfUh5zZcvRTDtCGjZsBqFaVxffnkBI46b/nxpDzfJQwmixDU7Chyxu0Dbzh+A==","shasum":"163b4b2456b7f5125bccb8e6a6bef73d9cab9941","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.1.tgz","fileCount":21,"unpackedSize":1015324,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgHXuJCRA9TVsSAnZWagAA3goQAJ2VYc3x8H8jiBrwGBG5\npgCJWYh/bcyqg+w8XdgYWvCm5vMOB+5L1epAv9Wv6cbbuwynf5wicR9LvI4r\nAlDe9M90Ed055KYBzXiEbS7PHCGRj/JruuiBYdXFbQlPRJLZlX3yBTwZszd3\nGB9Z3WrRIqOR8pZ4PIlFK57nCj8yctzjiGNzve9J7iJudcpaSNHFuLUrf4X/\n5Jsr7smSwLs/fZj5IeG1hysuZsOosO5Mqb0q/Zz/ZdKBvqiHCQgz9v/6KVxD\nXmciuCkmNTNlzSFZpwU51+zaR25lYw0yK1MhuIiILfZc2PtXbg+AFVkOBIgg\nYVdFc5p1lWSFZYsGG6MZSbXyTI48eHYscjZaJ9NJ2+jRIHTIFZA4T0GPMgew\nn71UhaT6ZVSmZZ3Qpp+rWp2Zwnfo/25OtcLQMo9uTbfTrQz2zeY54vgMdT5f\npgxR8Ja+Vapue93uhh6wiUyffgA0Pn5MmoNgDiiXRdPd7MVxunKia8564BOy\nocQZKdJSLPQ9RvATYk3zRl9L4FIPK82GZSGIgzQpBjX3q2naj0mGsmNHJBdi\n/pcOr3EEhSTPqjePrf+Pqyice0HhKF0XmcNPluHspC71reLKCYvMy59/oUfj\n6wvETqFdIkPQYiy65rWK2S7JcGT3SF0LeB9Fb06cltyvntfLesw6trtSTkq4\nkNGr\r\n=RROk\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.1_1612544904891_0.3113917645931559"},"_hasShrinkwrap":false},"3.0.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.1","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"0a25e3f3f98253ffecc06dc3e9a69a87497e4f52","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.1","_nodeVersion":"14.14.0","_npmVersion":"lerna/3.22.1/node@v14.14.0+x64 (linux)","dist":{"integrity":"sha512-jgGY6jIqEQQ6LWRlFhFVUrrviO9bYconqRLbSGNuOfwRuUcMeYdGwADQiPiTTQiE+s2gu7P3TMPPSa9BeOK3zw==","shasum":"b37e9a82fb6716e8b610f7705340212a7856c9ec","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.1.tgz","fileCount":21,"unpackedSize":1015700,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgIQR5CRA9TVsSAnZWagAArD0P/RpSYPYDAbQkPxKzstH8\nwoh0L2kHWWWn9/YTkNrnLD1d32dv3CHkpY1ACWAtuDt8vA6JFrs0aETzDmle\ntJWqrPIdAd6xFCdJ+ypXCZaHRhjIxuF2D5oU0V9q6M7yeYmR33XKcn1YCp9p\nMcSc07gNm30apcpGbQP2G9jCca6qPtVq9QJ2/bDiF1O+4X5fGkEdUQDH+Ax0\nGT6iJ0BXwYZ/b+jkM2okTuWd1qVaYJn2K8CTTeGf5z4OLv9VITPxk88QZvfW\n5wXROUWo+1tCsNGZxglXOYxeoi4wSVkkU8KKc+5x1OdPQNTwjH8WWvNX2r0x\nh6QtUNY6ZHZ9iGPt7WxeDlVkbc1J4UHiqDqR7xsAxRkCQil/UEXjwNyvZ0AB\n4SWz6w+NpbtcfGiwU0tzYJ0aCE+s58xPA0lz898nMMW792p9gqAk7w/YLnXJ\nvYyTG6R9QO50DH/KhpKjBJ+dpWQmtFXhv3wsXKkXRMIfKIgUoe36Fnys4rgW\n/2d7VXzOWKqiAPHQ+CFI9C2UCIe6gG/mgemq8kOblmyDgrH/RRNkCne5PK1C\nC9HeeMiOft1XRo2jkoZubeuOHCNiDcTbr/oLYKtC9b2KpWSqTE0AKGCFMqOy\nsHO0Ke705yaOgN+XH55tzxpXojdRXPYlJITmEcmjipArlFRpUQhmIQLENKEn\nCz3B\r\n=QuF6\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"lekoarts","email":"lekoarts@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.1_1612776568647_0.03210987060848658"},"_hasShrinkwrap":false},"3.0.0-next.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.2","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"ea3facd271d6492edf01fb94aaee33f872db33dc","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.2","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-jBQnKryRoc/uDBISwQXS+0NrUUdmf5ApSfCS1FZfdOffexZ4lDJv/xXeTLrcYtDJCFb0cj8M/ycZ1ekzG54/tQ==","shasum":"67255a448f3f160747b4709570e2aeebca83e1da","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.2.tgz","fileCount":21,"unpackedSize":1015875,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJQERCRA9TVsSAnZWagAAdToP/AuC4e8MZwLu+RXT6CaU\nR8tfxc4Rl4DCO6IFD/JeRfLlzRxyDO/UR08ZzYc32Gyfxg/LnjbhsHi00z9c\nbtpX4KCRM6Xtcf4+XHMJl8MQZncnTE0kD1BmlYNbfAVGFCRYeCJfuAuMnJhW\n9iRVBIQ8KNj8Cbhe184qXZzaGzd0NU9R+wo0UP4Kpph40+GitDEDAEJm8YSF\nyu1sgnEMa62jtHpEcNIOOj748n2O7PIqDzTJCDr3ZvlJVXvptAGhGsQ4vCw6\nopCPT7rm3B22h6Wj9BY19Ct+KNtS3nMmhHJD9lJ9SW6/p05a9zMgAliymfvT\naQ3oKHeemGqQl4XsCVSD3yLpvjAui6HLVWCYTgHZTS6NjIuLWPNfRKjBeODU\nCg+qPl1B47dNaelROlt/eT7CML4k6Z6zwAQgsSWBFwgUXyLj8m6PxPMCEsXf\nJ1Z3mG13e5/aHsislweU5gNftbFtEbEjR9nfE48Wtrq/ESkNQIZOBPFFbkLh\nLofudxdI1gaj6vcKfoE8A+IQhp92F1pVXZQleLVEJRX2vTLC1F5MeL1A80iD\nvjJIJ/56GaxD9bms/5YeIspGtglo7iQveGvypgEH5nxsS2DxNV/oEeA0S0Q6\nycQX74LQHBvKPdOzLI7w9FrTrjkOGMZ2eQs+Tr2igGSOU72SsCzyuwlI0pMA\npKAZ\r\n=XZYo\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.2_1613037841154_0.3955421069454734"},"_hasShrinkwrap":false},"3.0.0-next.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.3","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"03250efd3c7d306d2eecc978c78d36987d7b0040","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.3","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-Fn20Ms7362MrMVI4E/LtRG+JFU6g3sCdhgalG2QMxUw/1Gmj5SBE8Bd2w0/NpiukFyWM7KctrPKe3SwPtadZtg==","shasum":"d31f217ca0748df1a5e1790887c279fc2827d488","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.3.tgz","fileCount":21,"unpackedSize":1012683,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgJk2VCRA9TVsSAnZWagAAswsP/2Y6SFzbx2wpdRYEQ110\nfjm2vdXnSERhPZVoONDTMFU5Ow2BUH3ccwQpDdSeH7rw3meOOM2gBjSlDCQd\nMAhvKSgubr8tOrIHG6yQa7mAm3rMDIvFnX2y4KRZAv2iSij6A+ABm5s2AONL\nwkWsKJidICvXW0ltJTLecptYxV52hDt0QojQ5mpkk5oVTEatM5avwU6WHkt5\n37QfwiEJb1Hk0GFyVcA1lZKAPFujGxVaC5Wkadj9f/pR4s/5us+Bstn7qrxA\nsZ4eucImfT3+w7ce47RUnXLl45KCNo0GK9LePvKNEgpbLRh0eNCS5J3ldCpy\nmNVqTWN7OK5eDQdGNW1TkmjRqdanPzl2HqU+mWhvlz7rAlm01yY1Ind+ZvxK\nkj3gpH1aKHaKqI2TGveTADOvRHnkz6Ax/yAIBT6Uadq3FPlkypylau4jF0na\nrYi4kLSmw0H2S8A1AZN8vzIB4Icql8y1AIzOcttRg2fh/5dUsA3cFlal/8Kt\ne8LoDrFSfPdiPp6cUmS9DeFRet5Ah+edQzc1gnvX+W0+pub/j4fMoSknYMks\nZnuChZxF+9KChyL6ao89W0FeIU9gokIqvMl5jaSG1vhdOqBSOQSMuzitqJdi\n2mors8P4g1Te0LIUmLcuvnqIYdpKnhRtMx9pF5aak3HBFT14Jm5YSd0FTj3I\nUsUj\r\n=EV6W\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.3_1613122964366_0.9411567226711315"},"_hasShrinkwrap":false},"3.0.0-cpb3.33":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-cpb3.33","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"2.0.0-next.0","gatsby-telemetry":"2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"1.0.0-cpb3.33+8c6b829124","gatsby-plugin-utils":"1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"8c6b829124c0a5bd4024e9a792beac93079558e4","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-cpb3.33","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-oM1+8AUPCO/M0MuT3D9N8Idg6L8dlRvb8S9Xr/vXvtADUeNL8Dlr3KtUZFzCy+MDLM7tVKhTIrCakoNoqEfD4A==","shasum":"163460a271f12371f97524fdf0190abbdf354aee","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-cpb3.33.tgz","fileCount":21,"unpackedSize":1012702,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgKmHTCRA9TVsSAnZWagAA8hoP/0ywpnKYwhxW9PmWZW/c\np1Tamhkcwu4Z07kI3mK6vz3NYLZd/22dXUkuKtTTEeKX80TNiGH9Lyj8/Uq6\nns0Huv+LnBvjGajGqIHCGmB2O4Gcn2anl6HVtssxMqHBLtB+0vlNO176jZYm\nauoyskX6gViwNdIN1EdVaMVc88agLVtGBb1TF7B+Jm/Q3kBaKE13YirqVXyK\nAY3fjesWVINiOmz5g9au37rJ7dV1rD9Q+EWpLWXP4GsWA7kXuIvu3Ahl1HaA\nwZ8nWYBLxaSsIriwHHU/4xvBeT0kLqnkjhPlxEpQEmyxTPNXKxEZ+o/mDBe6\n/VEnXwHtFfITCeMPefSaf7aaL9oWwq+jP8Sor+kaJmKfbhhwHc3kJOkp1uJ1\n0dhD7AYeZ6Dgt8tD2Hmr1+aEqLsycYtRxFH4aSBf00b9sYGOGczYyqFpVF2H\nvLJIn8YGod5yjjFawwH5bfx81pR4MeBazPL5lp1xaCRInix5rOSvK+zMKn+0\njD5/LQklqAKabODEU9pNFkc23lSmFw9+n2T4fRB8i/cspstouqEq+P+BqvVM\n98bsPjPaX6o7F4he0PH5uesio17Q6FaCM7Ue41+oa4zSIP1HVZ+N/z2GV+IO\nDGk+t6BYgNiA8cS+0tMTOihJEQi5AIthB5wj98GYgI1+SFXm63gzmmCs1JxU\n/iGc\r\n=up2a\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-cpb3.33_1613390290798_0.00461553462258224"},"_hasShrinkwrap":false},"3.0.0-next.4":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.4","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.4","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"b1a081bac2d39a26e63bf8688cd9dd04f05e2581","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.4","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-5UJd0yhirH5Gt+LrrSSKiBZs4gXNrAUiTZaR4en+22mnCIH92Wn8AIrqbhcO4trM74znstgprn6xT896yM9mnA==","shasum":"5a0541b2b00c06f1f3c9d938595023492260e132","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.4.tgz","fileCount":21,"unpackedSize":1012887,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLT2YCRA9TVsSAnZWagAA5hkQAJ08u08EIngUFmIB0uxK\noJZCkV4YA9UUoO3GHFILLzHwSwXvYp0o6afP9Doam5ZqKPbtFI69LHRMUKY1\nF6uyTTr6Y2t4bEK82te+Fmd7IalsRXBXoBcL1KP8t9mUT3PU4i18J+LHAslK\nnW4ybbv25iQPwC2/+IHTD2YkkoywkXlLLUFz7GSpfnICs7SedqSYA/gG9dVa\nMcH42u3navWbB5c5rrZfirEK75CA/5TNQ2AypChKO2P41x5aEBjGip2lDjIo\nEnwjGC2VGaddpN/6Y+HohI0k+fsBzc0ZWyvIQCvOwhAq6dR7OJt7pMO8U+jx\nM0zqW61/elSjbGlYo5aXc2C0sHKG5P2P5m0s0N6PSlv0RcKl+oTrUQV7tEk6\nP1bNsZ7PvlCMS3y+UgVFl/cnYdgyf1VVZJ85CgoTd4NfX3bmyBlg3iGQkxy7\nXtVaEXKAobKhlHqFztIJDuvkJAuYZnwD4bXn6n0mcY1A1SDlO7UYZPB4NqPP\nK76YKeJDyt479JHPCmb3MoP39pv33LJfKKINTLUz16SPZON0QYl/E7sQRiXK\nKf44S7Tx998iFRcMmsHPmoCUyux1sm7qD0FK6WkxqGB1z9WCH7iYVOvwbZck\nT/xXmIfuzu/uHUAO/kmIVIlZnjJIElNY/axUApYBuAcmPqDCi474HmAJG09M\nkZmN\r\n=Ww4F\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.4_1613577624014_0.16641005906930584"},"_hasShrinkwrap":false},"3.0.0-next.5":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.5","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.5","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"df2f9d68e6ec3b32dc43aea4281c35f49e58884f","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Available options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n      failOnError: true,\n    },\n  },\n]\n```\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.5","_nodeVersion":"12.18.2","_npmVersion":"lerna/3.22.1/node@v12.18.2+x64 (darwin)","dist":{"integrity":"sha512-GMu7w/Gaf9zCkgkNYzrurNVABqRdoEzOf4VhNx5vfZIeJjSsoqetAY52akMhmUpWHMCR+yic6p+bsMPMJ84KzQ==","shasum":"ca572891e5130262cfd18aff539398db53256f64","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.5.tgz","fileCount":21,"unpackedSize":1013091,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgLkHECRA9TVsSAnZWagAAVXQQAIQ8HeHD2xMSugFKOKn0\nR3/aQYPAUu5fW6YcISM8gHNgMRD8WL8ekegnQ9hEkwAP7dyAG7+cBMna0L/k\nUzOEQX12fpOl57zOw+nwsTXCKtgujcfLlUSgvCGwGMcePfUKxlC9uPmPJ69G\nAIpqIvPSCaWwxRB+D5cKbIuMgPUKOTin5+Mbb+HroBiXZN3cPeXZuTk9xEV/\n4m8n74W2TuBkVjJZw2p56hB3SjrlJsKPgJVE0yM0kQiCEKuD8wpRm5OP1tcP\njDpU3vulW886Dt/fYLSm57BRqOJ+4mkPBPDS1qx4H2neq5r0j1/YpigRQJk+\nb7oZdHQX6nhqJNJZDrCK2h2zF88y+vZ/l9afKfcHYpCQPG2Np84+ZPUdDj43\nBwuy7z40QS3CnkiRy9g8LfdhpZaD0sGUJayTkYB0GB7a1wF3KOdjiSnJI3gq\n5X+n9NPanwQhLbdectcDK+cOBLsoH0jhgya9ErhGeKu5v9fwivg7oRWKTkmy\nYZjGka0Lmc9JRKNwFaeyn1bi7dChbWyQfql9oOWUZ2tSnCBd01Iq0GTKvCAM\nyj0kqr5JfGkVxmQeXLLyxldFXSnmITQOaSFsJRFINPLT8u2oGcFDoLs6KUs0\n61/syhiGHGwid6CmmNsDImf8sJ7asRKLTPYbqEVCJsGf6pOflCY6DSwo5Eg9\nxa57\r\n=pe5b\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"pieh","email":"misiek.piechowiak@gmail.com"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.5_1613644228225_0.4541151644034167"},"_hasShrinkwrap":false},"3.0.0-next.6":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.6","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.6","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"6cb9067bd12a8cbb40125c0030a04530a9af1df6","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.6","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-X9AvODGgo41im/+zi9Fz06XabsWSm0IQ3ymw1YR9scVpm84NSDvbZmZ9P2pPmfD0d57SaFnnIg2mbYxbKPuntg==","shasum":"b91d01549b76a6589ae71ea03d4c8c26560595c9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.6.tgz","fileCount":21,"unpackedSize":1014551,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgL+ArCRA9TVsSAnZWagAA0usP/jKMLVVo6yoHtS5Wpvjg\ndMyJ+WE1VdnVJwrD7zcvHEEvvlJ5ZA6/b+C1UIpH23tnMoROFm90hv7otxkU\nN3dAUvS/NfDI/Z/gHYmFWDPV6m0kTxnrdEyUAJar6WXK3yqi+LcMgY2QcfYN\nHmPWXNmW3uayPMAtOfNxXZ2h0w6h0+nvA3PYf6POV//8HOEd6D5vhDC0naQ+\n/K5VmcLuXZ/ZKJ2jMtzj01DeQ/kHx8OmvIx9Dc3n4nzM2qR0xeYarZx4027o\nI4pf4sdXUBNFa7g2yi85gpioJnWS9Bzb9oK5rTyguF87hTeu5gs7PAeQqptz\nWx3AfVIY6151WB69z90twPjgkW9PhtsieLdsNlNzUT0eGS3IKIcxSVPnGqUK\nRwETypRuYcOuCw1nL7HXH46EPq1wvJV2o3wnJsNwFQwbcvheY7CEDCB3X+gc\n2YYBym5it4jkR055BD0ewTiYXezYWbibA69z419GCUfIRpUXNeU/hFq2x1Yq\nBLFz0bw7w7/Jdx8Z1aKw3Os5F287N81586DZSAAyzhNq81MYAjDTb8nmhOyn\nnaHh3FAw0XljfQ9SN869pAQuKHFnXpxp5y75WBgQ/LVoXiOF+IVzxU02efDY\nSR0sgM26PSkxzBnt4FOe6g7b88GvHF7ih95CxoYg5FtOKJfG/cWuMT5J0cqv\ndJCs\r\n=Ds7l\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"madalynrose","email":"madalyn.parker@gmail.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"kuvos","email":"npm-public@qfox.nl"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"mxstbr","email":"contact@mxstbr.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.6_1613750314962_0.7924763672956245"},"_hasShrinkwrap":false},"3.0.0-next.7":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.7","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.0","gatsby-telemetry":"^2.0.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.7","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"d2e9968f138e87216c310f739e2fc993ee50e6c1","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.7","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-fBhU1B+bzP2CBsRtPyc9RI8xh/8BwCO+5PIU01oeXBbXZxs6sg2kQ4PcITAbfj1H/fg6bGIEvVv7Wn3+iPWl/g==","shasum":"d7debf085ede236cf53360417e6061df41d467d8","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.7.tgz","fileCount":21,"unpackedSize":1014755,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgL/A7CRA9TVsSAnZWagAA/2MP/ilonmzVfyaifSGqRo3G\nBCMxuO842iAI/+VKcybJRPJ2PXMllbeq3vTq6EiBZoZlbEV7Zf8x04LZXIHG\npVtviC3ftVNo9qEidmGf4KEO6DmLKNJ3zFd6owpregYt8WLEVHfLacNVtojW\nbRVMFatClYxQXPhhTDPkbzp4AqxBrUHwhTsh2QtC9fQ/p1weCbvSsMkXzJME\nM/XUWCXKvGYw2wzSaRGsB8B+HyQZSALGXGVEDNsBPDT1mPErJb2Q5qN3jrqF\nrTeErgafEGmRM+mvc93bv+95TyP2jnWU+DjJurkv6uzhKDqfui/Tj/2gHqHm\nAZlaSMC+hosRhJ8lLgAo7uFIUhRYMMPOe16eoFwhciJUMFPUVuK0SQsOQSS1\ni4vRdeBzzsVKlZauPftJ7AcSuewx/opEHvSpyyMY/cCLuCjY0Ok1Q2RTC6WE\nrLC0APLTpZ5UtPOpUkZNB53xc8YpDZPSxiWyctvYrKCX6a7w1kpL6ydW+aOC\nQRmO5iVR+sn18wckxGh0T78W/MSW3ehcimxcoeFol39MNbXGLeg2qd7qE5LK\naqNnUg5F+ELu5ii+J8lw15OYgynAZx7U5r69liCmIPrzu+9OVebPo2uyjuts\nkUJLEKMht+H4NFjaSEZisqvX7+WMvurAkR/dC030M13b3w/7Ihb3T+u2bGxz\nzG8+\r\n=CqlI\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.7_1613754426988_0.06488321378601625"},"_hasShrinkwrap":false},"3.0.0-next.8":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.8","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.1","gatsby-telemetry":"^2.0.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.8","gatsby-plugin-utils":"^1.0.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"3f9065586ff49d40d672cc2d48be68b02bae0dc0","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source , or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.8","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-AnNnIkD6cJisqH8hkMEkdRIOIoX6ouEhQlaPfhuV2q0Cm1+nF3tnq0VkwO9W4NEcjKu8j0SCi2KJzn/vWb9MLA==","shasum":"a86010b9c7c391d333638b7cbe1f2030b94f75c9","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.8.tgz","fileCount":21,"unpackedSize":1014959,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgM1lsCRA9TVsSAnZWagAA/GQP/0+QHm0LZcPKnuVTY0AD\npWMxQ3zj99JEtWPoEdgxz4EO3WJck3ODfs374YJpfPS+stioYQuhUFctzm6r\nIhBsziOgsKO4Wo5D0BX3ZCim/4+NH5feoy0FFjJzadK1ZMufqf886OtVw1FG\nlqK6UCk6ohb44rHst2nmhZ8D6+fZdTjASpwkoSA9GcYCiwVf9SZ4lpPLO0Rl\njwdXTKf+/Q/ovH8VCL2O5od/VmLwnMMNDd06kb8GxxNS7uLLjYbmguCfFhvf\n99BaAnbz/UnHCFM2bdgEIgsGY0r/TZJ80k1gWeWGz/JyXtSLZhwtVn+XpV/J\nqR84XzMG3FkoCwu6nouwCL2416C0J8H+KJLobQVr1EdqkAZB2TeN+ExW7k/a\ne+uVqW8mFs9GPBF1Dk8zbCm/mj244hPA5lH62AlW7x3m0zr3Iz+1zHtCB0OC\n2B6cWHAo8GrkC3a1FO6AvkjSSzqZvGoZhtAQ0j3FVEeYu4pWcV7e5cvEtqGK\nWyW9MrjSOJj8/PyTRju9gdEsUjkry63JFfnYkHPGzMaWtAGz8PUyy/d3RjUa\nLiJZagcWx6l88x4licpOdGKvkGHgutvTu07TzmPpYaQySqcUbxO+FN6EyiKQ\n0Cb3jczWbsVJ3f+ctBelEkvgkneoR3Quo07NnejVY2T81agNNyC4ro79TCrV\nRFSx\r\n=nhgN\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.8_1613977964260_0.016335793144637956"},"_hasShrinkwrap":false},"2.14.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^1.10.1","gatsby-telemetry":"^1.10.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^0.12.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.7.2","gatsby-plugin-utils":"^0.9.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"6fa14e4ba75adff605443402a9a93417a687aeb4","_id":"gatsby-plugin-sharp@2.14.2","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-XzBxWfcqfj7M0q2YR97hV5LHaOIZ2SYDCHSvXSJbhly8LTMMhpLBhJeFiTjCUfKz4ldeERqvx7wZia1lABxdiA==","shasum":"9ffe1490d7466f932b8d7095eab64c6a36233e1a","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.2.tgz","fileCount":21,"unpackedSize":1016827,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgNmGQCRA9TVsSAnZWagAAQ4MQAJthOumInPmJTzNNV7Q8\nDVgbUmNVDNHlPQwVpCUwZq6lLm7nxOEn0IrsN3A7SRR/0CHbjLU1Trs4wEFz\nM2vOB3EXGKifdt/U/xDIK4MuW9uKUe96RwjrD+NoXQaDUBpH3AfYiHXVPPIg\nMeG6PjQzT6c9ulbeEQoP3hjqSxmIRIsRTBmS3rp+Oz7xJzHrSnULR4mgAoDS\nhAs5WmXfxc2g8pvgr4aylF2xkPArEeq3y96vTdlSFMBL9vEMhJbujXKbQZNa\n22HSp9rMZmrtzgECcq4HWN0+0p1TM37anLIM2e0L3siK4acwOHJqeAwfTQHx\nc8UvMYWEa2EONuLZqmbpGSCzWCcpSpBFLKZ8iSXz2aoyUKcpdhYdP5P7k8FU\nUsPy75Dhb03w7O3aTr61LNipN2Lqz6NvA+t8stJU5dSly0lNqGA63o1pswYq\nkbh5Xj11WFWfdzpgY9iheNNXGNDCERWeJh2HQjDIH7evN6HGPhCFNH+dJO8w\n7IHKEaj0Qx8/box1IbGjpicWZbD7S5R7l7a4J5XKmMsD7DvGbNzt7pgRtmdk\nyH6dZFa47aZODxAEdpVDSkpIwYvChch5n38TI+HNCvstWJy0jxVgCa7S+Rtm\ns/7iXgPw/pvSh+HbVJ6MTSMW4UWRbSGxruo6M9BM0gBdyXHYot0KjL0XWf2A\nR5rM\r\n=huej\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.2_1614176656136_0.8623778544705829"},"_hasShrinkwrap":false},"3.0.0-next.9":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-next.9","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-next.2","gatsby-telemetry":"^2.0.0-next.2","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-next.9","gatsby-plugin-utils":"^1.0.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"2c049ea62d8f1c34370f675c4488f459000ea68b","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-next.9","_nodeVersion":"12.18.3","_npmVersion":"lerna/3.22.1/node@v12.18.3+x64 (win32)","dist":{"integrity":"sha512-zyuCc24lThaNFBDiC48rRSmDvb/Xmgwu9wJ1BadS8DowNdJw1svhB6UgXenH5U6f/0paD1PFnW2fMSIA0v5DMQ==","shasum":"dd48ce58612eb4d9e0ca242b09ad60dff9f24d7e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-next.9.tgz","fileCount":21,"unpackedSize":1015370,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgN4QcCRA9TVsSAnZWagAAc1wP/RjNNBFjdteAC02kcPOf\nHQ39PjMlT9XRwL1k5QQxqUeSU4ISxzB/14iMf7hCXskM/Dg5gs9hIzdQTyvP\nqP55RnteQmavx7Fx72XqkhtijaE+30a4w1bBRsrBZXuonuIRV615PQOJV/si\n02b1v2/Q2Rt/n3PjwROTCqCwfj4xdETIKHhIusF2NbvNFftfT/v1wfPSrWDJ\nAPUFjZWEzOOIAR0NFxLwSVGQPdxITFkDteRztUmNxbMLDij5IIRQcuOFmUuM\nZ+ZAe8DW4RJpH0aKiYifuBN5ruJtxaWSf2paogFmK8cJ0OGxp0fA+M8XYsQj\nWiGfi31q4Uu0wGycVk7lxxI9r5hTgttfOZH2Y0AJ7PIWcYLxTPGsyEJQ3cR5\nybrnsZYnxo1D60vUetg/a00BFW3lWAVA2KQc/stLP5lo6QCtLAPiZOt26bhx\nM8LbV/pHZibLQDXffr56inc85wpboesBwlLmqC/eXJ22W2CA5RbaL8y3Y9BJ\namXvXmPfN3139nSbMBsDM1x3FjcrDawy2ZNlkhx64HNU+U1cDMCkfsy8/goi\nc8G7NIGNByAbCRx6SPjTIUzK/6LnL5Q88kbNjIZ8TphBCmV6igB6b23cV30n\n1PO1FkV5IHVJDX1JkWfXFNgsn0PBME2mTWQ+50Re7eqIN5O7aqF+kA9wV4a7\nmQG3\r\n=nS6q\r\n-----END PGP SIGNATURE-----\r\n"},"_npmUser":{"name":"wardpeet","email":"ward@coding-tech.com"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-next.9_1614251035705_0.5035541494836484"},"_hasShrinkwrap":false},"2.14.3":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"2.14.3","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^1.10.1","gatsby-telemetry":"^1.10.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^0.12.0","cross-env":"^7.0.3","gatsby-plugin-image":"^0.7.2","gatsby-plugin-utils":"^0.9.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=10.13.0"},"gitHead":"65274d64f59fdddffd504d37205317f60996b99b","_id":"gatsby-plugin-sharp@2.14.3","_nodeVersion":"15.4.0","_npmVersion":"lerna/3.22.1/node@v15.4.0+arm64 (darwin)","_npmUser":{"name":"ascorbic","email":"m@mk.gg"},"dist":{"integrity":"sha512-cUzaRA9DE6VzUREStNIy3gFujUefwlPmqumHm8YJGJspW9x8jxNBTXh2kc7tR8GqINFXneoEY4ywnR1WiWB7fA==","shasum":"80970bd9604cdbb0005a222fb61bcd0e093e1a23","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-2.14.3.tgz","fileCount":21,"unpackedSize":1017084,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgN4axCRA9TVsSAnZWagAAuVMP/14ymo3/ZYE6m3g0kVei\nLP0BnaswQT42iYre6duWOOPmdVbzFfBdURLZvtYxvLr86AxRSN/dg6+lqEP0\ncY3SczlfKAdQvQZhcy160nHp8M3AB9M3/lojnph4CCTVbXEz3tSwiW/El20u\naOiL1ThgxFwo+967PuqukZyV2vPQ7/CMN40x+4ssfmXqZ5yaEYr13/DfouyX\ng8VQvKU6awK+wszAmN2VqteOHMiggdHHkwaF4lpFn2hTEFJnKJvQR5SEybN5\ntpxz1yrhdipjWsNzBv/Ko9Z8tB9y35yYGFosAXgj+TrmdKSeorO1gMVRN3sL\nh6dH1591lhcCgyU7+xJOGKhFnfwqFanSxJSem9USBjp1pDDJ7Lj1pO4fNPYL\nDckWzmc61WFpv0iJmTPAMpYesgFOBhiWJxHOPkpZk9Q5bO9NQeCWFkK2evS8\neUs10YcDrppoode17ZJG6h+cQGp+pfr4AeTeliG2CXwbJ/UWcpX9zypivKYH\nGf+jHSfUtXJgNudjThhlfurCxz+YGrjyo+WkH2yryzotYDjg+0r6evWinVsL\nKFhXT06uc/r9iHBoTTsS7R9ma6NoDjD3SSS5kh39lylttZWPf5wzyMl3p9C7\n+MHjj4oITJRsISDxav8l/vjQGDSkGzjuwLbHoX8PEjbL0llqnDZbgjNL9yVg\n6vmq\r\n=CPld\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_2.14.3_1614251696459_0.18524848476619016"},"_hasShrinkwrap":false},"3.1.0-next.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.1.0-next.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.1.0-next.0","gatsby-telemetry":"^2.1.0-next.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.1.0-next.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.1.0-next.0","gatsby-plugin-utils":"^1.1.0-next.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"6e36a28dbdc8f26b6a643972fe685570bd1de99a","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.1.0-next.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-w/gRN4Lmh4SXaKOdYq7y+D/u+FVSPMrqSDX3R8NSPW3fyfVhFZZ5EcKCDr7fpDp4zqQp7yIeDGth6pDpOMQTUA==","shasum":"718afd58869d12fce687cabd11552eb44332b86c","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.1.0-next.0.tgz","fileCount":21,"unpackedSize":1015574,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgOL8wCRA9TVsSAnZWagAAxmIP+wciwINYw6qIpNKNAVnF\nasL/kVesVrm4yli2ND83/+R7852us9FHNoZDYm1j+U40E69Tfz0+U8mYigp+\n1fjqcEgUyumlcpR24ZBev0NhkhbopJkRxqeLsadIt3r+4gHnLYdNLWkuvCkw\noTc8NHbcXFZsOX7nzsiTVsb8OQUCyKMWpYEQ3SUjYXil+hCMxGC1RVgMR9kZ\nx2stY0O8uedIgNjptwdLDLkiTC0MRPqFIf9vTV1Jj8g6e7xs87ysVC4vkOPR\nWxNxbBK+QstKCNBe69dvnTr5/kLBnugZvyqJf2L0nEIWEC2j3DFAxJYmAgOY\nzX7psxOgHmrMseEKofeaHU1pv0QKgZo+ELsBljSc5Z2ZwSYWujqGrdK5cEjH\nWTUUZcAYSI8kqFIbvV+M63NtVI6h7a8xHYae3VrhPi3F9vUiZqH1lbHpqKQT\nUOQOL0zZsMcicEuy7FpLBR3TApyDAyWcbH+TK/unVuT5pCUbsDjBj9BuF3eN\nGcUT5MzNbHpnDih9TKtKelAy7u6v5lyvzmeZ5B2hIC5kKe+hKvqh9zf5AjoF\nogWJjnLrKpCTEPQMtIm47jFT8zJKXVPu96Db3w+HdPveVtUkabQDCSPFJjde\nPRFUlFhGb2seSrjGA7zEri93U+arkIzarZ5NyVGjAe24ws8x9R5hvwXRo/nn\ncQUj\r\n=8o4Y\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.1.0-next.0_1614331695287_0.5060211252850038"},"_hasShrinkwrap":false},"3.1.0-next.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.1.0-next.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.1.0-next.1","gatsby-telemetry":"^2.1.0-next.1","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.1.0-next.1","cross-env":"^7.0.3","gatsby-plugin-image":"^1.1.0-next.1","gatsby-plugin-utils":"^1.1.0-next.1"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"1c661531b7f541b848a33a64abb5127c3dd89260","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.1.0-next.1","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-AvSBnI/QoMTXHO6uBT1gtP48fWc+F+ruLZVWUk1Tt+jQMh7/Es7TIr7nYyPqz4H4yeQEmRVbGHgfBjIOEMfQdw==","shasum":"20cfea8099a2992fb6f5b9e39592afe43264ff00","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.1.0-next.1.tgz","fileCount":21,"unpackedSize":1015778,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgOPv3CRA9TVsSAnZWagAA3/EQAJ3WETZlxdxP1FQkdCjd\nVFtABfdG4aA8fVEhVPLNN9HeGdZxUeS6keV89Hr0c4CSV0Pn6kP9dcqhl8gW\nCrvZcl1vOZZ/qeH60qgKxTqvOqSy9891yiTJdFeP4r6H1jvbMe+xt1Flip4/\nnXyx3If1HiOCG0XeS8iAA4GIJDMwXVq1h2dBsAmpCZjCTe98HB7rNUBPZvps\nUjDkNTz8GJTQreOKWBQ5PZDBURqMcKb7sJZY2M6f2Ww0RUXf++Lbzes3gsM1\nZK+RKoqOzgLQBhqB9RTIXdMDfkYiw4rkguvJmnHA1mkYkD8m8iqscfxiaKoC\nDF/RWraOujGXAMbUr7PZBNdu66sh3CuMvutyju2QsMA98oYGm0Ga/ugc9tNF\nAra99zEIdVL1QUBrcdznVkTXQ1prTC9hXi70G/8lJdyqOJSgIsN7XE9GU8Pu\ny8ya4NCbvHJpvHvOJAIHdRrBnrQTpXH+jlkRsa8bA3rx7GarNKBR6gPXyUZv\njBQEebsXu+0ypG09SInxS0ExZIefms6JTkwH9PRn60d+UGQvT1KjdO8Zct4S\nzlcXJN0xVw+MLEDz6qp9M9SvfEE0TwRaBsSS7yl1YGdcZhhLmlT/FRaSuLB6\nx4KdcIYkkwQT5VAo5ruuhHRVZ1LCfaATUfQW1sq856oakX5rstJ6QdZo5qgC\nT55V\r\n=cOKu\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.1.0-next.1_1614347255016_0.41710239928315573"},"_hasShrinkwrap":false},"3.0.0-v3rc.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-v3rc.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-v3rc.0","gatsby-telemetry":"^2.0.0-v3rc.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-v3rc.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-v3rc.0","gatsby-plugin-utils":"^1.0.0-v3rc.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":">2.0.15"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"ca446edb54a924ede2725e8748be1e8046248c06","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-v3rc.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-qPCMmm2vC+cQ0AMZufPEbrriMevov+kePYTmjqjpPkNQdihzp0/g5U2y92cS2UcmFXJMJpoQGStpwWBxizMLLQ==","shasum":"0e0d0fd0c7a2faa282b50dc0e9d4ba229fb17ad5","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-v3rc.0.tgz","fileCount":21,"unpackedSize":1015574,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgORp8CRA9TVsSAnZWagAAPk4P/RoOX99hYEI9KdZe2tOW\nNhGwwuLcx/wyUgV6hcfsI7rO+mUAa+Noq1ix8Z6rbZQD6gsqRhGdGUgbYGgx\nHpTZLFuN4OmyUAOpYUiNukiuiRv7hByiukAAGeE7QO5pJE8e6AzHiQLrIwRM\nzfvLYWWc3CxDg6FInSTKGrgVb5i5mx3XOwYyDhqD0OoHia016yFJBIJ9Ibzm\nQpcimvubLY51Mqu014Ks7hDXae+77LJn0TZ2wvklUxbkhhNnMi0EtRKXmaoy\nzpWLwFrJ/QwG0XCzts9jUAWnICg8u/EjndOdK6WG7UW+x72fCIB2oLZ0Qs0Z\nWy2K6KrDbh2RBAe3+z4oXpQeOYEs+STuWpazl6z9PZK7lkIuXmwGLz0wti1D\nnA1cvGTmMh4HqeyK8c3ZbKCONJziKv65Z9ZLZkIyo67PnBlhJv/JYy4r0d6K\nGdRrKk7w7zenmNnnWblHKdpwXRGQ+U/lE6z1PMk9Gqd5BN+ULHCjSu15Z9G/\nhZN+derMs3Z0rcXgfjJ5t/i04xwB7wtTX4C3HBfEZbcjUhUgGY91AiDHwwEJ\nA4QWuCZhsC8KdVjV7KpREEjHS9nb+3epn15SJtT7fZGOYMjAbxr8S/+Q/b3F\nosBD8NjfQ78Dvdi1u0L9Gqn5wMXrP9exbpnKYHtLYQY/t0QYiWxlq4kZupiF\nh7L8\r\n=PZXT\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-v3rc.0_1614355067766_0.15881457171502755"},"_hasShrinkwrap":false},"3.0.0-v3rc.1":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-v3rc.1","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-v3rc.0","gatsby-telemetry":"^2.0.0-v3rc.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-v3rc.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-v3rc.0","gatsby-plugin-utils":"^1.0.0-v3rc.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^3.0.0-next.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"ea3190077ac055b3c49ffee9c8c70b09428152cf","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-v3rc.1","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-Zr7gvwn9+mWidgZbWAVszcNHx8SZaWRl5YmVKYroWlizzJGskD1gzLoaGXez3kBGKSiM3snoXzVXTxbxl6YP7w==","shasum":"17d3c8beaed6e355f95db9b621c2e5f8fcd6f9fd","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-v3rc.1.tgz","fileCount":21,"unpackedSize":1015784,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPP97CRA9TVsSAnZWagAAyDUP/3S4aMtvxlFScw1+KmDl\nqHeHNG8gzCUhuuKMlyH6k32T9NR2Y7VopHmrNMPd7bINLlc0o4Q2IaLlJRXZ\nUUcH3eTeDlQThWbfr4xIwJ+xGV2ejQpC8+9c749VpYTgMEv6w9n5N5LiDH0s\ncTyCuVbu8igiOGGnHLq1geDrJtVJbxrdRDU8k9K+8/OURg2N0IeDa+ZxvguX\nWFSoHwDHYOL2aeVUgRInn4QfFFULeJEs58/w76E7JtB8t0cQcXko+T8H0BIg\nq5Kg0BaROHvJD53Qun2elSChzTys5EX/QB4yLcoYctyO2vTkEt8CDa8rtNky\nHQn8dbmCOU6aZbxLr10FVlXrhmj9CyjY2eiCik/nAVOBIWCKo7DC+jXtu3EG\nQpcC8w9N+xoYAyBR0pcysAjc9/S/No7T7Mb42h9hPWWAbcZqloF76abYLG0Y\n1udUWYE/SIGdc6mpkYgdHPkMr4kdx1JSTcdpFcxPRCc/5jGa0S5Jfn0hG2cW\nOCzuvmgkrlqZe50wmp/O2D0bUfgoJu8sX3XSXpMZRNQrvxmsMkbtgHtfh/WZ\n1aSUgN2aIcUwYTU0Hg1XxtwgQt/pEoVKlhiiEuoEz+KBVhjODFj0sSCmGa8g\nVN7HR2Oa1LlDPNKvmw9odNHRuKvEoDfHUMeDFLJVMEDQWGCSqVaR09RgV++z\nc9Rc\r\n=NMEu\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-v3rc.1_1614610298402_0.8701267222213307"},"_hasShrinkwrap":false},"3.0.0-v3rc.2":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0-v3rc.2","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0-v3rc.0","gatsby-telemetry":"^2.0.0-v3rc.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0-v3rc.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0-v3rc.1","gatsby-plugin-utils":"^1.0.0-v3rc.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^3.0.0-next.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"c98c87f9533e616b07d94016141f433d21d8037e","readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","readmeFilename":"README.md","_id":"gatsby-plugin-sharp@3.0.0-v3rc.2","_nodeVersion":"14.9.0","_npmVersion":"lerna/3.22.1/node@v14.9.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-3neIn1MMUkLYf+XS+Wy5nvADEdJCCU4QglstSdmVw07m2eVX57UTkKqY52ONUapmLjeTfPGkV1H23npeJlfXTg==","shasum":"6c7efb4f1765fa2e7c6958997751b97bff171c33","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0-v3rc.2.tgz","fileCount":21,"unpackedSize":1015988,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPVX8CRA9TVsSAnZWagAAygsP/3PduSvgveTxOrcuF+Bf\nxAmMuZNtCLZq4ebPMwPGu8EPkOYYE949T0++7tgW5hYQDd1uxAvT7gutayII\nskXlRZJiMXLqpsNEUFd8g9oZHDoLSq1ZUhoQO1krV5fmoA3oltGVWliidgtu\nPxneiI3iu9QrAeDgkKIfydsDcXRcLrbnvh151ZrUn3t9ETpBkrUmJuvCbd0+\nVIfU4Jr5INS2m9Hg46DKbb0ROUdpIGfPV4DXk2LLS6PNrDEib+XPGhe6l+Ms\n1QIIAHeLeMl/NTizTEpg8mFxssc7t2kfFCInxjGJLYaO/mYGahVNLR7fR26F\n0xRINv3r2ERasbWMHuevrHH7kcCfUBgAMOyHd5EPSBmdBOSvBPCZIVzAXnsF\nMVJU26XejkikNJ5LCyDuN4MAlcU65CQz6sRYf+GO0xAUROQTmhzr6JkVEqVz\nDNozoi8uBdGGFJ0KJd3QcMPw6f1g+5s0hDHIxAe8D7wTlcK9/0l7nOseTzGg\n7xRwtwVufi30kwuOmwtDNntAPN1CJ8yJ5D0/Q/T4jVWKhLZf1wR3LwalNVl2\nMhoj2dE1wkR3wjXsOI/Yn8f4aY/ONV/s+SOXgHsubpTnvrmxr7Ct8YE/cZbs\ni3iA7/lrTFEDSpoXjAvW67Cu4u/uvcO1oGNnjP2NFx+77gsdkfzAzwo8cV1t\npPxD\r\n=Kd8f\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0-v3rc.2_1614632443791_0.4345592724980334"},"_hasShrinkwrap":false},"3.0.0":{"name":"gatsby-plugin-sharp","description":"Wrapper of the Sharp image manipulation library for Gatsby plugins","version":"3.0.0","author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"},"dependencies":{"@babel/runtime":"^7.12.5","async":"^3.2.0","bluebird":"^3.7.2","filenamify":"^4.2.0","fs-extra":"^9.1.0","gatsby-core-utils":"^2.0.0","gatsby-telemetry":"^2.0.0","got":"^10.7.0","imagemin":"^7.0.1","imagemin-mozjpeg":"^9.0.0","imagemin-pngquant":"^9.0.1","lodash":"^4.17.20","mini-svg-data-uri":"^1.2.3","potrace":"^2.1.8","probe-image-size":"^6.0.0","progress":"^2.0.3","semver":"^7.3.4","sharp":"^0.27.0","svgo":"1.3.2","uuid":"3.4.0"},"devDependencies":{"@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@types/sharp":"^0.27.1","babel-preset-gatsby-package":"^1.0.0","cross-env":"^7.0.3","gatsby-plugin-image":"^1.0.0","gatsby-plugin-utils":"^1.0.0"},"homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","keywords":["gatsby","gatsby-plugin","image","sharp"],"license":"MIT","main":"index.js","peerDependencies":{"gatsby":"^3.0.0-next.0"},"repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"scripts":{"build":"babel src --out-dir . --ignore \"**/__tests__\" --extensions \".ts,.js\"","prepare":"cross-env NODE_ENV=production npm run build","watch":"babel -w src --out-dir . --ignore \"**/__tests__\"  --extensions \".ts,.js\""},"engines":{"node":">=12.13.0"},"gitHead":"f1d3f7b56bb2633e8e9de2d43c4e08dadfd52597","_id":"gatsby-plugin-sharp@3.0.0","_nodeVersion":"12.20.0","_npmVersion":"lerna/3.22.1/node@v12.20.0+x64 (win32)","_npmUser":{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},"dist":{"integrity":"sha512-gmIzHjv+JaW1Gyyrz81s43yBkqtMpgvGb6qbPzH2ZX8V2YTyd9LnfUxKx/uTwluEB5oz/om4jtHSCH5DSUsTFA==","shasum":"276557883ccfc9ea5503bb16b2fcd24f7a55928e","tarball":"https://registry.npmjs.org/gatsby-plugin-sharp/-/gatsby-plugin-sharp-3.0.0.tgz","fileCount":21,"unpackedSize":1016136,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJgPhagCRA9TVsSAnZWagAAxLwQAIt1noB9oQYClvkbtOr9\njuAQcJctGMQsl5hJKQowcVeelpDdP19QxY2/ajBEkjaQHhAXZCLj/zoXYbgV\nFABnpeloIhZXbIaZdw8JKyy3Pv+iZcYwwtamWAVeORU39Uled1a8DKX99+LV\nR/xcoQK1+jW/RwawgZI2WyNfCPQxeq8fvcfzf4I66cQE86rxytUE5EpimMCP\nOJQRDSnFpi2M8McSA6Adp1/0eWeJ2xLDnr7rcHwOyKcmBUf7xiVG21EJky9v\nRb95AKEpwGlkce7R9GDm+HUq7+4yEMDGOJ/fF9UB/UCTXQz2vEAhFyfLfZC7\nJN/ny7CWWVG1UmxTXqVsqxpDO4fW7k94SBvqsj/3OLOvWbSWE1VO7QzpEWEY\n+L68DUt5ML+NgxSz6NnTW2739vNcS8D/m41vDKhkqE9QNGiSDYoJTuwOjkk6\nOINycN0NQOYXgSIUCXGA9xOqnOr+0BfW4kL6CO1QvdV3T20uwtM8pdr1OoQb\n/qVyKd3hhaxfLPg3Z+OgnfMHGjI/F2V8oh7ilCsklv6mEhEdaj9mQjQJlPG2\n9SOQy0odva9Db86gquTm8Q13gq0bueSschkLeqd6zxV2n4wr8JkjU7tKIjQ9\n5Rlpgpjz1QBDWVGXJDCHaj3Dwb7dOYb3/ubDE6vO87rNqx428kHt2/73fSAc\nSlSQ\r\n=lled\r\n-----END PGP SIGNATURE-----\r\n"},"directories":{},"maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gatsby-plugin-sharp_3.0.0_1614681760411_0.3989700276871586"},"_hasShrinkwrap":false}},"readme":"# gatsby-plugin-sharp\n\nExposes several image processing functions built on the\n[Sharp image processing library](https://github.com/lovell/sharp). This is a\nlow-level helper plugin generally used by other Gatsby plugins. You generally\nshouldn't be using this directly but might find it helpful if doing very custom\nimage processing.\n\nIt aims to provide excellent out-of-the box settings for processing common web\nimage formats.\n\nFor JPEGs it generates progressive images with a default quality level of 50.\n\nFor PNGs it uses [pngquant](https://github.com/pornel/pngquant) to compress\nimages. By default it uses a quality setting of [50-75]. The `pngCompressionSpeed`\nvalue is a speed/quality trade-off from 1 (brute-force) to 10 (fastest). Speed\n10 has 5% lower quality, but is 8 times faster than the default (4). In most\ncases you should stick with the default, but if you have very large numbers\nof PNGs then it can significantly reduce build times.\n\n## Install\n\n`npm install gatsby-plugin-sharp`\n\n## How to use\n\n```javascript\n// In your gatsby-config.js\nplugins: [\n  {\n    resolve: `gatsby-plugin-sharp`,\n    options: {\n      // Defaults used for gatsbyImageData and StaticImage\n      defaults: {},\n      // Set to false to allow builds to continue on image errors\n      failOnError: true,\n      // deprecated options and their defaults:\n      base64Width: 20,\n      forceBase64Format: ``, // valid formats: png,jpg,webp\n      useMozJpeg: process.env.GATSBY_JPEG_ENCODER === `MOZJPEG`,\n      stripMetadata: true,\n      defaultQuality: 50,\n    },\n  },\n]\n```\n\n## Options\n\n- `defaults`: default values used for `gatsbyImageData` and `StaticImage` from [gatsby-plugin-image](https://www.gatsbyjs.com/plugins/gatsby-plugin-image).\n  Available options are: `formats`,`placeholder`,`quality`,`breakpoints`,`backgroundColor`,`tracedSVGOptions`,`blurredOptions`,`jpgOptions`,`pngOptions`,`webpOptions`,`avifOptions`.\n  For details of these, see [the reference guide](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image).\n- `failOnError`: default = `true`. By default builds will fail if there is a corrupted image. Set to false to continue the build on error. The image will return `undefined`.\n\nOther options are deprecated, and should only be used for the legacy `fixed` and `fluid` functions.\n\n## Methods\n\n### resize\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `jpegProgressive` (bool, default: true)\n- `pngCompressionLevel` (int, default: 9)\n- `base64`(bool, default: false)\n\n#### Returns\n\n- `src` (string)\n- `width` (int)\n- `height` (int)\n- `aspectRatio` (float)\n\n### fixed\n\nAutomatically create sizes for different resolutions — we do 1x, 1.5x, and 2x.\n\n#### Parameters\n\n- `width` (int, default: 400)\n- `height` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `width` (float)\n- `height` (float)\n- `src` (string)\n- `srcSet` (string)\n\n### fluid\n\nCreate fluid sizes (in width) for the image. If the max width of the container for the\nrendered markdown file is 800px, the sizes would then be: 200px, 400px, 800px, 1200px,\n1600px – enough to provide close to the optimal image size for every device\nsize / screen resolution.\n\nIf you want more control over which sizes are output you can use the `srcSetBreakpoints`\nparameter. For example, if you want images that are 200, 340, 520, and 890 wide you\ncan add `srcSetBreakpoints: [ 200, 340, 520, 890 ]` as a parameter. You will also get\n`maxWidth` as a breakpoint (which is 800 by default), so you will actually get\n`[ 200, 340, 520, 800, 890 ]` as breakpoints.\n\nOn top of that, `fluid` returns everything else (namely aspectRatio and\na base64 image to use as a placeholder) you need to implement the \"blur up\"\ntechnique popularized by Medium and Facebook (and also available as a Gatsby\nplugin for Markdown content as gatsby-remark-images).\n\nWhen both a `maxWidth` and `maxHeight` are provided, sharp will [resize the image][6] using\n`COVER` as a fit strategy by default. You can choose between `COVER`, `CONTAIN`, `FILL`,\n`INSIDE`, and `OUTSIDE` as a fit strategy. See the [fit parameter below](#fit)\nfor more details.\n\n#### Parameters\n\n- `maxWidth` (int, default: 800)\n- `maxHeight` (int)\n- `quality` (int, default: 50)\n- `jpegQuality` (int)\n- `pngQuality` (int)\n- `webpQuality` (int)\n- `srcSetBreakpoints` (array of int, default: [])\n- `background` (string, default: 'rgba(0,0,0,1)')\n- [deprecated] `sizeByPixelDensity` (bool, default: false)\n  - Pixel density is only used in vector images, which Gatsby’s implementation of Sharp doesn’t support. This option is currently a no-op and will be removed in the next major version of Gatsby.\n\n#### Returns\n\n- `base64` (string)\n- `aspectRatio` (float)\n- `src` (string)\n- `srcSet` (string)\n- `srcSetType` (string)\n- `sizes` (string)\n- `originalImg` (string)\n\n### Shared Options\n\nIn addition to their individual parameters, all methods above share the\nfollowing:\n\n- `grayscale` (bool, default: false)\n- `duotone` (bool|obj, default: false)\n- `toFormat` (string, default: '')\n- `toFormatBase64` (string, default: '')\n- `base64Width` (int, default: 20)\n- `cropFocus` (string, default: 'ATTENTION')\n- `fit` (string, default: 'COVER')\n- `pngCompressionSpeed` (int, default: 4)\n- `rotate` (int, default: 0)\n\n#### toFormat\n\nConvert the source image to one of the following available options: `NO_CHANGE`,\n`JPG`, `PNG`, `WEBP`.\n\n#### toFormatBase64\n\nbase64 image uses the image format from the source, or the value of `toFormat`. This setting allows a different image format instead, available options are: `JPG`, `PNG`, `WEBP`.\n\n`WEBP` allows for a smaller data size, allowing you to reduce your HTML size when transferring over the network, or to use a larger base64 placeholder width default for improved image placeholder quality.\n\n[Not all browsers support `WEBP`](https://caniuse.com/#feat=webp). It would be wasteful to include a fallback image format in this case. Consider also adding a `backgroundColor` placeholder as a fallback instead.\n\nThe plugin config option `forceBase64Format` performs the equivalent functionality by default to all your base64 placeholders. `toFormatBase64` has a higher priority for base64 images that need to selectively use a different format.\n\n#### base64Width\n\nThe width in pixels for your base64 placeholder to use. The height will also be adjusted based on the aspect ratio of the image. Use this to increase the image quality by allowing more pixels to be used at the expense of increasing the file size of the data to be transferred.\n\nThe default for Gatsby is `20`px. This keeps the data size low enough to embed into the HTML document for immediate display on DOM loaded and avoids an additional network request.\n\n[Facebook](https://engineering.fb.com/android/the-technology-behind-preview-photos/) and [Medium](https://jmperezperez.com/medium-image-progressive-loading-placeholder/) are both known to use `42`px width for their image placeholders. However Medium presently uses a solid background color placeholder to load the page as fast as possible, followed by an image placeholder requested over the network instead of embedding it with base64.\n\nThe plugin config has an equivalent option, allowing you to change the default for all base64 placeholders. This parameter option has a higher priority over the plugin config option.\n\n#### cropFocus\n\nChange the cropping focus. Available options: `CENTER`, `NORTH`, `NORTHEAST`,\n`EAST`, `SOUTHEAST`, `SOUTH`, `SOUTHWEST`, `WEST`, `NORTHWEST`, `ENTROPY`,\n`ATTENTION`. See Sharp's [resize][6].\n\n#### fit\n\nSelect the fit strategy for sharp to use when resizing images. Available options\nare: `COVER`, `CONTAIN`, `FILL`, `INSIDE`, `OUTSIDE`. See Sharp's [resize][6].\n\n**Note:** The fit strategies `CONTAIN` and `FILL` will not work when `cropFocus` is\nset to `ENTROPY` or `ATTENTION`.\n\nThe following image shows the effects of each fit option. You can see that the\n`INSIDE` option results in one dimension being smaller than requested, while\nthe `OUTSIDE` option results in one dimension being larger than requested.\n![Sharp transform fit options](./sharp-transform-fit-options.png)\n\n#### pngCompressionSpeed\n\nChange the speed/quality tradeoff for PNG compression from 1 (brute-force) to\n10 (fastest). See pngquant's [options][19].\n\n#### rotate\n\nRotate the image (after cropping). See Sharp's [rotate][7].\n\n#### grayscale\n\nUses Sharp's [greyscale][8] to convert the source image to 8-bit greyscale, 256\nshades of grey, e.g.\n\n```graphql\nallImageSharp {\n  edges {\n    node {\n      ... on ImageSharp {\n        resize(width: 150, height: 150, grayscale: true) {\n          src\n        }\n      }\n    }\n  }\n}\n```\n\n#### duotone\n\nApplys a \"duotone\" effect (see [I][1], [II][2], [III][3]) to the source image if\ngiven two hex colors `shadow` and `highlight` defining start and end color of\nthe duotone gradient, e.g.\n\n```graphql\nfixed(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\"\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nthe source image colors will be converted to match a gradient color chosen based\non each pixel's [relative luminance][4].\\\nLogic is borrowed from [react-duotone][5].\n\nYou can pass a third optional parameter, `opacity`:\n\n```graphql\nfluid(\n  width: 800,\n  duotone: {\n    highlight: \"#f00e2e\",\n    shadow: \"#192550\",\n    opacity: 50\n  }\n) {\n  src\n  srcSet\n  base64\n}\n```\n\nIf set, a semi-transparent version of duotone'd image will be composited over\nthe original image, allowing the original image and its colors to partially\n\"shine through\". _Heads up_: If the original image contains an alpha channel it\nwill be [flattened][15] before creating the composite.\n\nThis works by adding an alpha channel to the duotone'd image - then we let Sharp\ndo its magic via\n[`overlayWith`](http://sharp.pixelplumbing.com/en/stable/api-composite/#overlaywith);\nquoting the Sharp documentation:\n\n> If the overlay image contains an alpha channel then composition with\n> <a href=\"https://en.wikipedia.org/wiki/Alpha_compositing\">premultiplication</a>\n> will occur.\n\n#### tracedSVG\n\nGenerates a traced SVG of the image (see [the original GitHub issue][9]) and\nreturns the SVG as \"[optimized URL-encoded][10]\" `data:` URI. It used in\n[gatsby-image](/plugins/gatsby-image/) to provide an\nalternative to the default inline base64 placeholder image.\n\nUses [node-potrace][11] and [SVGO][12] under the hood. Default settings for\nnode-potrace:\n\n```javascript\n  {\n    color: `lightgray`,\n    optTolerance: 0.4,\n    turdSize: 100,\n    turnPolicy: TURNPOLICY_MAJORITY,\n  }\n```\n\nAll [node-potrace `Potrace` parameters][13] are exposed and can be set via the\n`traceSVG` argument:\n\n```javascript\nfixed(\n  traceSVG: {\n    color: \"#f00e2e\"\n    turnPolicy: TURNPOLICY_MINORITY\n    blackOnWhite: false\n  }\n) {\n  src\n  srcSet\n  tracedSVG\n}\n```\n\n### Setting a default quality\n\nYou can pass a default image quality to `sharp` by setting the `defaultQuality` option.\n\n### Using MozJPEG\n\nYou can opt-in to use [MozJPEG][16] for jpeg-encoding. MozJPEG provides even\nbetter image compression than the default encoder used in `gatsby-plugin-sharp`.\nHowever, when using MozJPEG the build time of your Gatsby project will increase\nsignificantly.\n\nTo enable MozJPEG, you can set the `useMozJpeg` plugin option to `true` in\n`gatsby-config.js`.\n\nFor backwards compatible reasons, if `useMozJpeg` is not defined in the plugin\noptions, the [environment variable](/docs/environment-variables/#environment-variables)\n`GATSBY_JPEG_ENCODER` acts as a fallback if set to `MOZJPEG`:\n\n```shell\nGATSBY_JPEG_ENCODER=MOZJPEG\n```\n\n### Allow build to continue on image processing error\n\nBy default, the build will fail when it encounters an error while processing an image. You can change this so that it continues the build process by setting the plugin option `failOnError` to `false`. Sharp will still throw an error and display it in the console as a GraphQL error, but it will not exit the process. It is important to note that any images that would have otherwise failed will not be accessible via `childImageSharp` until the underlying issue with the image is addressed.\n\n### EXIF and ICC metadata\n\nBy default, `gatsby-plugin-sharp` strips all EXIF, ICC and other metadata\npresent in your source file. This is the recommended default as it leads to\nsmaller file sizes.\n\nHowever, in situations where you wish to preserve EXIF metadata or ICC profiles\n(example: you are building a photography portfolio and wish to conserve\nthe color profile or the copyright information of the photos you've exported\nfrom Adobe Lightroom or Phase One's Capture One), you can set the `stripMetadata`\nplugin option to `false` in `gatsby-config.js`.\n\nIt is important to note that if `stripMetadata` is set to `false`, **all**\nmetadata information will be preserved from the source image, including but not\nlimited to the latitude/longitude information of where the picture was taken\n(if present). If you wish to strip this information from the source file, you\ncan either leave `stripMetadata` to its default of `true`, or manually\npre-process your images with a tool such as [ExifTool][17].\n\n## Troubleshooting\n\n### Incompatible library version: sharp.node requires version X or later, but Z provides version Y\n\nThis means that there are multiple incompatible versions of the `sharp` package installed in `node_modules`. The complete error typically looks like this:\n\n```text\nSomething went wrong installing the \"sharp\" module\n\ndlopen(/Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libglib-2.0.dylib\n  Referenced from: /Users/misiek/dev/gatsby-starter-blog/node_modules/sharp/build/Release/sharp.node\n  Reason: Incompatible library version: sharp.node requires version 6001.0.0 or later, but libglib-2.0.dylib provides version 5801.0.0\n```\n\nTo fix this, you'll need to update all Gatsby plugins in the current project that depend on the `sharp` package. Here's a list of official plugins that you might need to update in case your projects uses them:\n\n- `gatsby-plugin-sharp`\n- `gatsby-plugin-manifest`\n- `gatsby-remark-images-contentful`\n- `gatsby-source-contentful`\n- `gatsby-transformer-sharp`\n- `gatsby-transformer-sqip`\n\nTo update these packages, run:\n\n```shell\nnpm install gatsby-plugin-sharp gatsby-plugin-manifest gatsby-remark-images-contentful gatsby-source-contentful gatsby-transformer-sharp gatsby-transformer-sqip\n```\n\nIf updating these doesn't fix the issue, your project probably uses other plugins from the community that depend on a different version of `sharp`. Try running `npm list sharp` or `yarn why sharp` to see all packages in the current project that use `sharp` and try updating them as well.\n\n[1]: https://alistapart.com/article/finessing-fecolormatrix\n[2]: http://blog.72lions.com/blog/2015/7/7/duotone-in-js\n[3]: https://ines.io/blog/dynamic-duotone-svg-jade\n[4]: https://en.wikipedia.org/wiki/Relative_luminance\n[5]: https://github.com/nagelflorian/react-duotone\n[6]: http://sharp.pixelplumbing.com/en/stable/api-resize/#crop\n[7]: http://sharp.pixelplumbing.com/en/stable/api-operation/#rotate\n[8]: http://sharp.pixelplumbing.com/en/stable/api-colour/#greyscale\n[9]: https://github.com/gatsbyjs/gatsby/issues/2435\n[10]: https://codepen.io/tigt/post/optimizing-svgs-in-data-uris\n[11]: https://github.com/tooolbox/node-potrace\n[12]: https://github.com/svg/svgo\n[13]: https://github.com/tooolbox/node-potrace#parameters\n[14]: https://github.com/oliver-moran/jimp\n[15]: http://sharp.pixelplumbing.com/en/stable/api-operation/#flatten\n[16]: https://github.com/mozilla/mozjpeg\n[17]: https://www.sno.phy.queensu.ca/~phil/exiftool/\n[18]: https://www.npmjs.com/package/color\n[19]: https://pngquant.org/#options\n","maintainers":[{"name":"rachelbahl","email":"rachel@gatsbyjs.com"},{"name":"dschau","email":"dustinschau@gmail.com"},{"name":"jamo","email":"jamo@isotalo.fi"},{"name":"kylemathews","email":"mathews.kyle@gmail.com"},{"name":"pieh","email":"misiek.piechowiak@gmail.com"},{"name":"sidharthachatterjee","email":"me@sidharthachatterjee.com"},{"name":"wardpeet","email":"ward@coding-tech.com"},{"name":"vladar","email":"vladimir.razuvaev@gmail.com"},{"name":"tylerbarnes","email":"tyler@known.design"},{"name":"ascorbic","email":"m@mk.gg"},{"name":"fk","email":"sechskilo@gmail.com"},{"name":"smthomas","email":"shane@codekarate.com"},{"name":"lekoarts","email":"lekoarts@gmail.com"},{"name":"laurieontech","email":"npm.laurie@gmail.com"},{"name":"freiksenet","email":"freiksenet@gmail.com"},{"name":"monastic.panic","email":"monastic.panic@gmail.com"},{"name":"m-allanson","email":"michael.allanson@gmail.com"},{"name":"moocar","email":"anthony@moocar.me"}],"time":{"modified":"2021-03-02T10:42:42.865Z","created":"2017-02-06T19:31:26.367Z","1.0.0-alpha11-alpha.f46304ad":"2017-02-06T19:31:26.367Z","1.0.0-alpha11-alpha.3e341373":"2017-02-06T20:29:49.107Z","1.0.0-alpha11-alpha.c623e1cc":"2017-02-06T23:31:35.701Z","1.0.0-alpha11-alpha.267af45c":"2017-02-07T18:26:13.685Z","1.0.0-alpha11-alpha.2a65312c":"2017-02-07T19:29:48.423Z","1.0.0-alpha11":"2017-02-07T20:38:29.724Z","1.0.0-alpha12-alpha.1dc37e8b":"2017-02-10T18:39:04.258Z","1.0.0-alpha12-alpha.117c94f8":"2017-02-14T00:02:29.165Z","1.0.0-alpha12-alpha.373740a8":"2017-02-14T00:36:20.578Z","1.0.0-alpha12-alpha.bdc68bfd":"2017-02-17T22:20:13.546Z","1.0.0-alpha12-alpha.faff3fa9":"2017-02-17T22:26:14.288Z","1.0.0-alpha12-alpha.a82bd105":"2017-02-18T00:07:25.733Z","1.0.0-alpha12-alpha.d452aed2":"2017-02-20T19:10:10.150Z","1.0.0-alpha12-alpha.40e6a4d1":"2017-02-20T19:29:51.950Z","1.0.0-alpha12-alpha.f4d91ef3":"2017-02-20T20:05:30.947Z","1.0.0-alpha12-alpha.659f61a4":"2017-02-20T23:23:45.463Z","1.0.0-alpha12-alpha.e1a3cfed":"2017-02-20T23:29:24.938Z","1.0.0-alpha12-alpha.70258e9c":"2017-02-22T00:46:31.995Z","1.0.0-alpha12":"2017-02-22T01:12:42.966Z","1.0.0-alpha12-alpha.209952c2":"2017-02-22T18:43:01.533Z","1.0.0-alpha12-alpha.8f812d13":"2017-02-22T19:08:54.282Z","1.0.0-alpha12-alpha.10a12536":"2017-02-22T22:35:32.704Z","1.0.0-alpha12-alpha.d82af48f":"2017-03-06T18:43:05.561Z","1.0.0-alpha12-alpha.9a2a3c59":"2017-03-06T19:06:24.011Z","1.0.0-alpha12-alpha.72e8aced":"2017-03-06T20:02:12.734Z","1.0.0-alpha12-alpha.04c05494":"2017-03-06T20:30:49.235Z","1.0.0-alpha12-alpha.352b3448":"2017-03-06T22:18:22.346Z","1.0.0-alpha12-alpha.f205e4d4":"2017-03-06T22:26:04.780Z","1.0.0-alpha12-alpha.3a216f9f":"2017-03-07T21:32:59.853Z","1.0.0-alpha12-alpha.3f98b323":"2017-03-08T03:20:35.763Z","1.0.0-alpha12-alpha.cfc93fc7":"2017-03-08T03:46:25.716Z","1.0.0-alpha12-alpha.e22dfd31":"2017-03-13T19:58:05.896Z","1.0.0-alpha12-alpha.3e72cc6f":"2017-03-13T20:13:43.575Z","1.0.0-alpha12-alpha.c8cb2100":"2017-03-13T22:29:22.970Z","1.0.0-alpha12-alpha.4ba57c84":"2017-03-14T19:05:12.687Z","1.0.0-alpha12-alpha.a7e9d9c0":"2017-03-14T19:18:24.585Z","1.0.0-alpha12-alpha.75167f51":"2017-03-15T01:04:22.814Z","1.0.0-alpha12-alpha.4af3700e":"2017-03-15T23:20:25.301Z","1.0.0-alpha12-alpha.dfc40de1":"2017-03-17T22:35:25.023Z","1.0.0-alpha12-alpha.f32320b1":"2017-03-20T21:35:07.547Z","1.0.0-alpha12-alpha.547467c5":"2017-03-20T21:48:16.703Z","1.0.0-alpha12-alpha.3d7a5eb6":"2017-03-21T01:49:53.573Z","1.0.0-alpha12-alpha.b3dbfd2b":"2017-03-21T18:21:58.102Z","1.0.0-alpha12-alpha.4575c38e":"2017-03-21T20:12:48.077Z","1.0.0-alpha12-alpha.1b1c742b":"2017-03-21T22:05:26.242Z","1.0.0-alpha12-alpha.545e4a03":"2017-03-21T22:09:14.783Z","1.0.0-alpha12-alpha.4f30010e":"2017-03-21T22:12:22.586Z","1.0.0-alpha12-alpha.e1f27e45":"2017-03-23T18:18:30.185Z","1.0.0-alpha12-alpha.d37d5d32":"2017-03-24T23:55:57.353Z","1.0.0-alpha12-alpha.81355cc0":"2017-03-27T16:11:55.722Z","1.0.0-alpha12-alpha.dbf1a599":"2017-03-27T16:28:38.598Z","1.0.0-alpha12-alpha.10141fd4":"2017-03-27T17:58:57.196Z","1.0.0-alpha12-alpha.6e55cfe7":"2017-03-27T18:40:02.635Z","1.0.0-alpha12-alpha.d7d6ef64":"2017-03-27T22:38:26.071Z","1.0.0-alpha12-alpha.dffeaa1f":"2017-03-28T13:15:14.486Z","1.0.0-alpha12-alpha.c155b956":"2017-03-28T13:39:25.121Z","1.0.0-alpha12-alpha.80e93d69":"2017-03-28T14:40:14.740Z","1.0.0-alpha12-alpha.4e93d2cf":"2017-03-28T19:06:32.429Z","1.0.0-alpha12-alpha.351006cf":"2017-03-28T22:13:20.410Z","1.0.0-alpha12-alpha.0b4b912a":"2017-04-10T22:34:12.156Z","1.0.0-alpha12-alpha.1fdb9004":"2017-04-11T00:38:28.763Z","1.0.0-alpha12-alpha.51e1923f":"2017-04-18T18:41:25.164Z","1.0.0-alpha12-alpha.571b4bbd":"2017-04-19T00:37:16.868Z","1.0.0-alpha12-alpha.c0bba969":"2017-04-19T20:36:50.004Z","1.0.0-alpha12-alpha.89d880ee":"2017-04-21T00:30:43.461Z","1.0.0-alpha12-alpha.b66dd8d3":"2017-04-21T00:37:29.393Z","1.0.0-alpha12-alpha.577b9e82":"2017-04-22T00:34:43.232Z","1.0.0-alpha12-alpha.8370739a":"2017-04-23T03:15:45.500Z","1.0.0-alpha13":"2017-04-24T22:09:20.915Z","1.0.0-alpha13-alpha.c6e3cbb2":"2017-04-26T19:36:54.787Z","1.0.0-alpha13-alpha.91dbde54":"2017-04-26T21:08:49.702Z","1.0.0-alpha13-alpha.ec011f40":"2017-04-27T00:58:05.867Z","1.0.0-alpha13-alpha.537d11c6":"2017-04-27T04:11:27.543Z","1.0.0-alpha13-alpha.0189ea42":"2017-04-28T22:29:29.027Z","1.0.0-alpha13-alpha.215cabc2":"2017-05-01T23:02:07.337Z","1.0.0-alpha13-alpha.526805ab":"2017-05-03T22:17:32.199Z","1.0.0-alpha13-alpha.0f0222b8":"2017-05-04T16:09:19.244Z","1.0.0-alpha13-alpha.7d186994":"2017-05-04T16:29:42.136Z","1.0.0-alpha13-alpha.a3ef328b":"2017-05-04T19:51:58.332Z","1.0.0-alpha13-alpha.84bd4b24":"2017-05-04T20:33:26.663Z","1.0.0-alpha13-alpha.7efda7f0":"2017-05-04T23:03:14.866Z","1.0.0-alpha13-alpha.435e0178":"2017-05-05T18:26:06.401Z","1.0.0-alpha13-alpha.e4457d15":"2017-05-05T19:35:41.080Z","1.0.0-alpha13-alpha.43a3774e":"2017-05-06T00:32:18.531Z","1.0.0-alpha14":"2017-05-06T01:18:17.311Z","1.0.0-alpha14-alpha.3145bea2":"2017-05-08T17:23:04.828Z","1.0.0-alpha14-alpha.e5097827":"2017-05-10T07:07:08.292Z","1.0.0-alpha14-alpha.5f9232df":"2017-05-11T14:45:11.382Z","1.0.0-alpha14-alpha.48e2735c":"2017-05-11T18:44:03.261Z","1.0.0-alpha14-alpha.42f0e16a":"2017-05-11T18:55:05.197Z","1.0.0-alpha14-alpha.1ebda6e4":"2017-05-11T19:12:04.424Z","1.0.0-alpha14-alpha.a4a50ee4":"2017-05-11T19:32:34.673Z","1.0.0-alpha14-alpha.6611f24e":"2017-05-11T22:34:08.572Z","1.0.0-alpha14-alpha.ac7022a4":"2017-05-11T23:39:28.560Z","1.0.0-alpha15":"2017-05-16T09:12:46.624Z","1.0.0-alpha15-alpha.6c40594a":"2017-05-16T13:55:30.923Z","1.0.0-alpha15-alpha.17ca92e9":"2017-05-16T17:29:55.994Z","1.0.0-alpha15-alpha.7211d781":"2017-05-17T11:33:39.446Z","1.0.0-alpha15-alpha.11f194aa":"2017-05-18T16:22:05.234Z","1.0.0-alpha15-alpha.62fcc2e1":"2017-05-20T10:11:36.424Z","1.0.0-alpha15-alpha.336b6aa8":"2017-05-22T14:14:29.107Z","1.0.0-alpha15-alpha.6ffaa855":"2017-05-22T14:29:52.051Z","1.0.0-alpha15-alpha.14012332":"2017-05-22T23:05:56.553Z","1.0.0-alpha15-alpha.94fac7a9":"2017-05-23T12:27:07.859Z","1.0.0-alpha15-alpha.330d917d":"2017-05-23T17:42:51.282Z","1.0.0-alpha15-alpha.4784b06f":"2017-05-25T18:40:04.845Z","1.0.0-alpha16":"2017-05-26T09:30:26.498Z","1.0.0-alpha16-alpha.c28a693a":"2017-05-27T15:00:44.825Z","1.0.0-alpha16-alpha.0e39282b":"2017-05-30T01:47:45.139Z","1.0.0-alpha16-alpha.b47e49cb":"2017-05-30T04:10:22.294Z","1.0.0-alpha16-alpha.a48b771d":"2017-05-30T05:59:22.998Z","1.0.0-alpha16-alpha.102adc51":"2017-05-31T02:37:52.110Z","1.0.0-alpha16-alpha.d918ccdc":"2017-06-01T16:16:48.203Z","1.0.0-alpha16-alpha.7b3bcd50":"2017-06-01T18:44:33.264Z","1.0.0-alpha16-alpha.4482ff94":"2017-06-01T21:37:45.172Z","1.0.0-alpha17":"2017-06-02T18:44:55.632Z","1.0.0-alpha18":"2017-06-02T20:32:28.874Z","1.0.0-alpha19":"2017-06-03T02:02:27.755Z","1.0.0-alpha19-alpha.81f2510a":"2017-06-03T02:36:45.044Z","1.0.0-alpha19-alpha.a2f3e881":"2017-06-03T15:37:58.709Z","1.0.0-alpha19-alpha.3c6183a4":"2017-06-03T19:39:04.021Z","1.0.0-alpha19-alpha.62172e76":"2017-06-03T23:33:57.330Z","1.0.0-alpha19-alpha.dcf76508":"2017-06-05T23:17:18.318Z","1.0.0-alpha19-alpha.0ae0ee2a":"2017-06-05T23:52:00.477Z","1.0.0-alpha.22":"2017-06-08T04:27:54.914Z","1.0.0-alpha.22-alpha.19f7c727":"2017-06-10T17:40:09.170Z","1.0.0-alpha.22-alpha.acbc22e8":"2017-06-10T22:37:25.206Z","1.0.0-alpha.22-alpha.0be09b66":"2017-06-11T01:14:43.899Z","1.0.0-alpha.22-alpha.96b0b727":"2017-06-11T01:21:17.714Z","1.0.0-alpha.22-alpha.2d2aa0ef":"2017-06-13T01:25:55.528Z","1.0.0-alpha.22-alpha.18f02e94":"2017-06-13T19:07:24.196Z","1.0.0-alpha.23":"2017-06-14T00:30:13.090Z","1.0.0-beta.1":"2017-06-15T20:25:51.587Z","1.0.0-beta.1-alpha.82c23a65":"2017-06-16T16:17:12.727Z","1.0.0-beta.2":"2017-06-16T18:00:28.168Z","1.0.0-beta.2-alpha.4bef9d1e":"2017-06-18T06:20:25.684Z","1.0.0-beta.2-alpha.a1195641":"2017-06-20T03:50:33.295Z","1.0.0-beta.2-alpha.38d760b4":"2017-06-21T00:35:52.645Z","1.0.0-beta.3-alpha.404a27c8":"2017-06-22T01:38:16.250Z","1.0.0-beta.3-alpha.1cb4cf8b":"2017-06-22T05:41:37.114Z","1.0.0-beta.3-alpha.15f49df0":"2017-06-22T16:01:45.659Z","1.0.0-beta.3-alpha.a694e4ac":"2017-06-22T16:19:03.698Z","1.0.0-beta.3-alpha.590c01b7":"2017-06-23T00:06:53.456Z","1.0.0-beta.3-alpha.9451bcd6":"2017-06-23T01:45:40.338Z","1.0.0-beta.4":"2017-06-23T23:12:16.907Z","1.0.0-beta.4-alpha.83182d4c":"2017-06-24T00:19:45.563Z","1.0.0-beta.5-alpha.c64a932e":"2017-06-27T02:33:41.266Z","1.0.0-beta.5-alpha.1a65ba72":"2017-06-27T04:15:21.446Z","1.0.0-beta.5-alpha.fb30fcd6":"2017-06-29T04:20:28.363Z","1.0.0-beta.5-alpha.08bddd92":"2017-06-30T23:11:05.403Z","1.0.0-beta.5-alpha.c16c2913":"2017-07-01T19:21:58.271Z","1.0.0-beta.5-alpha.dfde8a10":"2017-07-02T03:05:20.656Z","1.0.0-beta.6":"2017-07-02T06:43:01.789Z","1.0.0-beta.6-alpha.320adb17":"2017-07-03T23:40:54.120Z","1.0.0-beta.7":"2017-07-04T00:12:33.231Z","1.0.0-beta.7-alpha.60d2ce84":"2017-07-04T23:24:36.253Z","1.0.0-beta.7-alpha.7dc2afa2":"2017-07-05T19:27:35.200Z","1.0.0-beta.7-alpha.594d939c":"2017-07-06T16:30:09.561Z","1.0.0":"2017-07-06T19:43:29.881Z","1.0.1":"2017-07-06T19:48:56.785Z","1.3.0":"2017-07-19T06:31:55.264Z","1.4.1":"2017-07-26T17:33:51.261Z","1.5.0":"2017-07-27T19:27:40.233Z","1.6.0":"2017-08-04T17:58:39.866Z","1.6.1":"2017-08-11T14:03:15.032Z","1.6.2":"2017-08-19T01:52:26.663Z","1.7.0-alpha.22c8a6f1":"2017-08-24T16:12:26.154Z","2.0.0":"2017-08-25T18:06:58.903Z","1.6.3":"2017-08-25T18:21:51.856Z","1.6.4":"2017-08-30T22:58:39.784Z","1.6.5":"2017-08-31T23:41:33.882Z","1.6.6":"2017-09-01T22:07:30.447Z","1.6.7":"2017-09-07T14:24:27.411Z","1.7.0-alpha.76b32701":"2017-09-15T18:01:13.934Z","1.7.0-alpha.2e1e7782":"2017-09-15T18:12:46.725Z","1.7.0-alpha.93f2e2a2":"2017-09-16T11:50:16.398Z","1.7.0-alpha.5db7a275":"2017-09-16T13:46:09.207Z","1.7.0-alpha.1460dad9":"2017-09-18T12:28:58.587Z","1.6.8":"2017-09-22T21:26:46.035Z","1.6.9":"2017-10-07T04:08:19.127Z","1.6.10":"2017-10-20T16:34:08.395Z","1.6.11":"2017-10-25T20:07:54.064Z","1.6.12":"2017-10-26T06:26:19.194Z","1.6.13":"2017-10-26T21:46:25.169Z","1.6.14":"2017-11-01T16:46:59.292Z","1.6.15":"2017-11-01T18:01:45.810Z","1.6.17":"2017-11-01T20:29:31.690Z","1.6.18":"2017-11-02T18:06:47.016Z","1.6.19":"2017-11-03T18:13:47.375Z","1.6.20":"2017-11-07T08:15:49.764Z","1.6.21":"2017-11-14T17:49:43.591Z","1.6.22":"2017-11-29T00:09:39.126Z","1.6.23":"2017-12-10T00:45:30.892Z","1.6.24":"2017-12-14T19:57:58.586Z","1.7.0-alpha.f20ac0ed":"2018-01-11T18:39:09.842Z","1.7.0-alpha.a0a09c94":"2018-01-11T18:48:02.892Z","1.7.0-alpha.b50f2063":"2018-01-11T18:55:07.575Z","1.7.0-alpha.03b9df85":"2018-01-12T14:36:15.766Z","1.7.0-alpha.e9df8e57":"2018-01-12T14:47:30.951Z","1.7.0-alpha.8c822451":"2018-01-12T15:00:57.919Z","1.7.0-alpha.e5586916":"2018-01-12T15:22:31.404Z","1.7.0-alpha.9da1bca1":"2018-01-12T18:07:36.744Z","1.6.25":"2018-01-16T20:09:21.656Z","1.7.0-alpha.aeb05561":"2018-01-18T01:53:07.655Z","1.7.0-alpha.7b47e00d":"2018-01-18T02:10:08.306Z","1.7.0-alpha.f5c1df61":"2018-01-18T17:30:32.994Z","1.7.0-alpha.926cb6da":"2018-01-21T01:42:22.854Z","1.7.0-alpha.3f307d61":"2018-01-21T02:23:02.880Z","1.6.26":"2018-01-23T19:19:04.776Z","1.7.0-alpha.d1544e1b":"2018-01-25T00:14:29.131Z","1.6.27":"2018-01-25T22:22:58.989Z","1.7.0-alpha.53bbd4cd":"2018-02-10T20:34:51.060Z","1.7.0-alpha.2b695217":"2018-02-10T22:36:51.166Z","1.7.0-alpha.32ef58da":"2018-02-11T03:44:50.957Z","1.7.0-alpha.5182142b":"2018-02-11T04:12:42.137Z","1.6.28":"2018-02-13T01:12:06.078Z","1.7.0-alpha.6ab84875":"2018-02-15T02:06:53.970Z","1.7.0-alpha.9d4de2a6":"2018-02-15T20:32:32.206Z","1.7.0-alpha.9e381f74":"2018-02-15T21:12:40.634Z","1.7.0-alpha.dd504153":"2018-02-15T21:29:49.200Z","1.7.0-alpha.b68b7f5c":"2018-02-15T22:00:53.355Z","1.7.0-alpha.bb258cb5":"2018-02-16T00:29:46.321Z","1.7.0-alpha.e28a1c8e":"2018-02-16T01:11:11.525Z","1.6.29":"2018-02-16T20:44:25.485Z","1.6.30":"2018-02-16T23:22:34.815Z","1.7.0-alpha.067e672c":"2018-02-17T02:45:19.886Z","1.7.0-alpha.d0b8dd9e":"2018-02-17T19:05:17.581Z","1.6.29-0":"2018-02-17T19:31:13.029Z","2.0.0-alpha.2":"2018-02-17T20:00:22.226Z","2.0.0-alpha.3":"2018-02-17T20:02:26.863Z","2.0.0-alpha.4":"2018-02-17T20:07:54.460Z","1.6.31":"2018-02-19T19:39:38.267Z","1.6.32":"2018-02-21T20:41:21.638Z","1.6.33":"2018-02-22T23:37:07.538Z","1.6.34":"2018-02-24T00:10:30.746Z","1.6.35":"2018-02-26T23:28:10.806Z","2.0.0-alpha.e66c6c9c":"2018-02-27T01:25:04.177Z","1.6.36":"2018-02-28T06:37:52.043Z","1.6.37":"2018-02-28T20:40:09.266Z","2.0.0-alpha.2cbec6d6":"2018-03-03T06:46:49.171Z","2.0.0-alpha.5":"2018-03-03T07:24:09.902Z","1.6.38":"2018-03-04T07:23:36.278Z","1.6.39":"2018-03-05T19:55:07.725Z","2.0.0-alpha.f98688ee":"2018-03-07T02:25:54.958Z","2.0.0-alpha.6":"2018-03-07T02:34:42.799Z","1.6.40":"2018-03-07T18:06:27.670Z","2.0.0-alpha.7":"2018-03-07T23:55:10.751Z","2.0.0-alpha.9fe50b00":"2018-03-08T03:04:30.469Z","1.6.41":"2018-03-08T05:23:53.348Z","2.0.0-alpha.34eda94b":"2018-03-17T21:22:24.815Z","2.0.0-alpha.12622d64":"2018-03-18T00:00:22.806Z","2.0.0-alpha.84bd71b4":"2018-03-18T00:40:13.226Z","2.0.0-alpha.6ad61a13":"2018-03-21T17:49:45.954Z","2.0.0-alpha.5f47082e":"2018-03-23T22:47:52.943Z","2.0.0-alpha.8":"2018-03-23T23:19:11.415Z","2.0.0-alpha.95fcd4af":"2018-03-29T02:22:45.884Z","2.0.0-alpha.20252dc3":"2018-03-29T02:44:32.260Z","2.0.0-alpha.4a09f745":"2018-04-05T22:15:02.045Z","2.0.0-alpha.76793cd8":"2018-04-07T22:12:32.706Z","1.6.42":"2018-04-11T01:35:13.873Z","1.6.43":"2018-04-19T16:33:18.224Z","2.0.0-alpha.5c9569c0":"2018-04-19T16:57:16.294Z","2.0.0-alpha.523a4286":"2018-04-19T23:52:23.740Z","2.0.0-alpha.5421f383":"2018-04-20T06:53:10.282Z","2.0.0-alpha.e9c3027b":"2018-04-20T17:56:51.003Z","2.0.0-alpha.9":"2018-04-22T01:54:19.040Z","2.0.0-alpha.10":"2018-04-25T16:25:34.016Z","2.0.0-alpha.11":"2018-04-26T18:19:50.482Z","1.6.44":"2018-05-01T06:24:18.267Z","2.0.0-alpha.12":"2018-05-02T23:03:34.628Z","2.0.0-alpha.13":"2018-05-11T21:44:05.856Z","2.0.0-alpha.15":"2018-05-15T20:15:22.300Z","2.0.0-alpha.16":"2018-05-18T15:35:21.559Z","1.6.45":"2018-05-31T12:38:31.988Z","2.0.0-alpha.17":"2018-05-31T13:11:30.244Z","2.0.0-alpha.18":"2018-05-31T14:05:18.377Z","2.0.0-alpha.19":"2018-05-31T17:17:17.289Z","1.6.46":"2018-05-31T18:46:16.102Z","1.6.47":"2018-06-06T22:18:53.989Z","2.0.0-alpha.20":"2018-06-11T15:23:55.389Z","2.0.0-alpha.21":"2018-06-11T16:55:26.562Z","2.0.0-alpha.22":"2018-06-16T19:09:05.744Z","2.0.0-alpha.8ac171a1":"2018-06-16T19:25:39.760Z","2.0.0-alpha.e328d33f":"2018-06-16T19:33:05.316Z","2.0.0-alpha.80a21f04":"2018-06-16T19:37:17.935Z","2.0.0-alpha.23":"2018-06-16T23:33:01.237Z","1.6.48":"2018-06-17T01:53:15.121Z","2.0.0-beta.0":"2018-06-17T06:54:00.349Z","2.0.0-beta.1":"2018-06-17T08:12:58.429Z","2.0.0-beta.2":"2018-06-20T20:45:35.620Z","2.0.0-beta.3":"2018-07-11T02:58:18.183Z","2.0.0-beta.5":"2018-07-13T02:25:24.805Z","2.0.0-beta.6":"2018-07-20T14:48:17.290Z","2.0.0-beta.7":"2018-07-21T16:00:12.822Z","2.0.0-beta.8":"2018-08-16T13:11:19.187Z","2.0.0-beta.9":"2018-08-16T14:54:08.239Z","2.0.0-rc.0":"2018-08-21T00:58:49.711Z","2.0.0-rc.1":"2018-08-29T17:08:13.832Z","2.0.0-rc.2":"2018-08-29T18:29:08.955Z","2.0.0-rc.3":"2018-08-31T15:11:34.807Z","2.0.0-rc.5":"2018-09-11T10:48:53.736Z","2.0.0-rc.6":"2018-09-11T11:23:10.377Z","2.0.0-rc.7":"2018-09-11T12:12:15.640Z","2.0.5":"2018-09-17T20:42:19.249Z","2.0.6":"2018-10-03T17:58:53.828Z","2.0.7":"2018-10-16T00:45:43.842Z","2.0.8":"2018-10-24T17:05:40.036Z","2.0.9":"2018-10-29T15:24:11.334Z","2.0.10":"2018-10-29T16:19:19.315Z","2.0.11":"2018-11-01T15:35:19.514Z","2.0.12":"2018-11-06T01:40:04.265Z","2.0.13":"2018-11-21T13:14:34.610Z","2.0.14":"2018-11-29T12:14:03.094Z","2.0.15":"2018-12-07T16:14:55.963Z","2.0.16":"2018-12-21T13:06:32.222Z","2.0.17":"2018-12-27T16:26:10.564Z","2.0.18":"2019-01-23T15:14:16.228Z","2.0.19":"2019-01-29T15:20:00.302Z","2.0.20":"2019-02-01T12:25:17.871Z","2.0.21":"2019-02-19T18:49:28.994Z","2.0.22":"2019-02-22T14:59:40.065Z","2.0.23":"2019-02-28T11:32:21.345Z","2.0.24-alpha.0":"2019-03-04T07:13:56.741Z","2.0.24":"2019-03-04T09:43:44.184Z","2.0.25":"2019-03-05T21:30:32.455Z","2.0.26":"2019-03-11T13:49:37.136Z","2.0.27":"2019-03-11T15:25:00.692Z","2.0.28":"2019-03-12T20:23:12.222Z","2.0.29":"2019-03-15T15:57:54.518Z","2.0.30":"2019-03-20T14:43:11.298Z","2.0.31":"2019-03-25T20:39:53.051Z","2.0.32":"2019-03-27T14:04:41.595Z","2.0.33":"2019-04-09T22:45:58.474Z","2.0.34":"2019-04-11T20:43:14.422Z","2.0.35":"2019-04-17T01:40:56.377Z","2.0.36":"2019-05-03T13:05:31.043Z","2.0.37":"2019-05-09T21:19:50.486Z","2.1.0":"2019-05-23T15:33:28.650Z","2.1.1":"2019-05-24T22:12:55.760Z","2.1.2":"2019-05-29T11:52:40.499Z","2.1.3":"2019-05-31T07:41:39.213Z","2.1.4":"2019-06-12T11:10:23.085Z","2.1.5":"2019-06-12T23:02:09.003Z","2.1.6":"2019-06-18T12:41:37.806Z","2.1.7-cloud-image-sharp.6":"2019-06-18T18:23:57.571Z","2.1.7-cloud-image-sharp.7":"2019-06-18T18:39:22.749Z","2.1.7-reporter-npm.9":"2019-06-18T20:12:47.643Z","2.1.7":"2019-06-18T20:53:47.174Z","2.1.8-reporter-npm.8":"2019-06-19T08:22:07.687Z","2.1.8":"2019-06-19T09:38:24.975Z","2.1.9":"2019-06-19T10:16:15.050Z","2.2.0":"2019-06-20T13:49:13.971Z","2.2.1":"2019-06-21T08:59:13.528Z","2.2.2":"2019-07-02T20:31:47.304Z","2.2.3":"2019-07-06T11:22:52.193Z","2.2.3-cloud-image-sharp.52":"2019-07-09T23:50:41.358Z","2.2.4":"2019-07-11T10:21:06.699Z","2.2.5":"2019-07-12T13:34:39.146Z","2.2.6":"2019-07-12T15:12:22.269Z","2.2.7":"2019-07-13T19:47:24.587Z","2.2.8":"2019-07-17T17:28:37.826Z","2.2.9":"2019-07-22T20:43:22.376Z","2.1.10-sharp-content-hash.612":"2019-07-23T19:47:18.269Z","2.1.10-sharp-content-hash.614":"2019-07-23T20:16:41.296Z","2.2.10":"2019-08-06T18:27:54.805Z","2.2.11":"2019-08-09T20:34:13.134Z","2.2.12":"2019-08-16T19:43:03.332Z","2.2.13":"2019-08-20T19:12:13.424Z","2.2.14":"2019-08-21T22:02:47.289Z","2.2.15":"2019-08-22T00:25:28.263Z","2.2.16":"2019-08-22T07:51:09.506Z","2.2.17":"2019-08-23T09:25:28.556Z","2.2.18":"2019-08-24T03:28:16.178Z","2.2.19-otp-test.31":"2019-08-26T16:54:14.008Z","2.2.19":"2019-09-01T10:46:00.739Z","2.2.20":"2019-09-05T15:12:31.475Z","2.2.21":"2019-09-09T15:43:34.943Z","2.2.22":"2019-09-13T15:27:27.793Z","2.2.22-cloud-image-sharp.51":"2019-09-13T17:22:05.909Z","2.2.23":"2019-09-18T07:09:22.779Z","2.2.24":"2019-09-18T19:33:00.932Z","2.2.25":"2019-09-20T01:12:57.900Z","2.2.27":"2019-09-26T11:45:08.698Z","2.2.28":"2019-10-04T10:43:29.718Z","2.2.29":"2019-10-09T08:43:15.238Z","2.2.30":"2019-10-14T07:18:36.701Z","2.2.31":"2019-10-14T12:42:19.908Z","2.2.32":"2019-10-16T17:21:48.269Z","2.2.33":"2019-10-28T16:20:36.623Z","2.2.34":"2019-10-28T22:04:20.920Z","2.2.35":"2019-10-29T23:11:28.845Z","2.2.36":"2019-10-29T23:35:35.448Z","2.2.37":"2019-11-10T20:46:21.583Z","2.2.38":"2019-11-13T12:41:25.600Z","2.2.39":"2019-11-15T09:40:14.365Z","2.3.0":"2019-11-15T14:02:27.586Z","2.3.1":"2019-11-18T05:58:51.363Z","2.3.2":"2019-11-18T22:34:10.570Z","2.3.3-sharp-cache.41":"2019-11-22T15:34:20.033Z","2.3.3-sharp-cache.42":"2019-11-22T15:45:16.894Z","2.3.3-sharp-cache.43":"2019-11-22T19:23:51.241Z","2.3.3":"2019-11-25T07:31:58.003Z","2.3.3-sharp-glib.81":"2019-11-25T15:26:29.286Z","2.3.3-sharp-glib.82":"2019-11-26T08:01:49.796Z","2.3.3-sharp-glib.83":"2019-11-26T08:04:47.714Z","2.3.4":"2019-11-26T13:30:48.176Z","2.3.5":"2019-12-02T11:19:40.845Z","2.3.7":"2019-12-10T12:32:07.604Z","2.3.8-sharp-jobs-v2.26":"2019-12-12T10:05:18.093Z","2.3.8":"2019-12-16T07:58:09.701Z","2.3.9":"2019-12-17T14:32:33.160Z","2.3.10":"2019-12-20T17:18:11.929Z","2.3.11-sharp-jobs-v2.63":"2020-01-06T12:57:19.664Z","2.3.11-sharp-jobs-v2.64":"2020-01-07T11:12:53.476Z","2.3.11-sharp-jobs-v2.65":"2020-01-07T15:19:28.124Z","2.3.11-sharp-jobs-v2.66":"2020-01-08T21:35:10.479Z","2.3.12":"2020-01-09T09:08:41.372Z","2.3.11-sharp-jobs-v2.67":"2020-01-09T11:22:41.783Z","2.3.13":"2020-01-09T19:51:23.867Z","2.3.11-sharp-jobs-v2.68":"2020-01-10T11:05:23.105Z","2.3.11-sharp-jobs-v2.70":"2020-01-14T17:07:49.068Z","2.3.11-sharp-jobs-v2.71":"2020-01-16T14:55:35.912Z","2.3.11-sharp-jobs-v2.73":"2020-01-17T07:43:56.768Z","2.3.11-sharp-jobs-v2.74":"2020-01-19T09:27:56.097Z","2.3.11-sharp-jobs-v2.78":"2020-01-20T15:29:04.833Z","2.3.11-sharp-jobs-v2.81":"2020-01-20T20:44:24.606Z","2.3.11-sharp-jobs-v2.82":"2020-01-20T20:49:21.034Z","2.4.0":"2020-01-21T07:48:02.823Z","2.4.1-sharp-cloud.0":"2020-01-21T22:15:48.235Z","2.4.1-progress-fix.27":"2020-01-24T16:44:52.727Z","2.4.1":"2020-01-27T11:45:11.398Z","2.4.2":"2020-01-27T11:52:10.641Z","2.4.3":"2020-01-27T15:50:52.473Z","2.3.14-berry-mdx.56":"2020-01-29T11:42:51.163Z","2.4.4":"2020-01-29T13:54:38.112Z","2.4.5":"2020-02-01T20:40:18.898Z","2.4.6":"2020-03-06T17:07:33.608Z","2.4.7":"2020-03-06T21:22:52.284Z","2.4.8":"2020-03-09T18:18:42.580Z","2.4.9":"2020-03-10T11:55:45.064Z","2.4.10":"2020-03-10T22:56:03.174Z","2.4.11":"2020-03-11T15:55:40.231Z","2.4.12":"2020-03-12T13:31:29.851Z","2.4.13":"2020-03-16T11:34:39.078Z","2.5.0":"2020-03-20T09:16:08.940Z","2.5.1":"2020-03-20T11:30:07.365Z","2.5.2":"2020-03-23T15:27:54.323Z","2.5.3":"2020-03-24T13:41:45.640Z","2.5.4":"2020-04-04T18:49:06.595Z","2.5.5":"2020-04-16T15:37:43.849Z","2.5.6":"2020-04-17T13:56:55.298Z","2.5.7":"2020-04-24T09:03:11.189Z","2.6.0":"2020-04-27T12:10:13.064Z","2.6.1":"2020-05-05T09:33:06.871Z","2.6.2":"2020-05-07T09:51:51.658Z","2.6.3":"2020-05-13T07:58:14.092Z","2.5.4-prompt-restart.105":"2020-05-15T12:31:22.682Z","2.5.4-prompt-restart.109":"2020-05-15T13:01:20.591Z","2.5.4-prompt-restart.110":"2020-05-15T13:15:57.098Z","2.6.4":"2020-05-18T19:39:10.564Z","2.5.4-prompt-restart.123":"2020-05-19T08:19:53.814Z","2.6.5":"2020-05-19T09:34:18.944Z","2.6.6":"2020-05-19T15:15:54.365Z","2.6.7":"2020-05-20T07:40:36.231Z","2.6.8":"2020-05-20T08:18:04.317Z","2.6.9":"2020-05-22T06:45:26.177Z","2.6.10":"2020-06-02T12:19:19.981Z","2.6.11":"2020-06-09T09:29:54.352Z","2.6.12":"2020-06-19T13:53:04.903Z","2.6.13":"2020-06-22T16:04:28.764Z","2.6.14":"2020-06-24T06:09:43.126Z","2.5.6-unifiedroutes.76":"2020-06-25T20:01:11.436Z","2.6.16":"2020-07-01T15:46:16.352Z","2.6.17":"2020-07-02T15:20:43.143Z","2.6.18":"2020-07-06T08:07:32.807Z","2.6.19":"2020-07-09T08:36:19.860Z","2.6.20":"2020-07-20T09:22:13.972Z","2.6.21-telemetry-test.18":"2020-07-20T13:16:03.457Z","2.6.21-telemetry-test.19":"2020-07-20T15:30:13.146Z","2.6.21-telemetry-test.32":"2020-07-21T10:20:19.116Z","2.6.21":"2020-07-21T15:30:49.687Z","2.6.22":"2020-07-24T09:23:57.620Z","2.6.23":"2020-07-28T11:13:55.675Z","2.6.24":"2020-07-30T15:06:42.893Z","2.5.6-unifiedroutes-v2.135":"2020-07-31T20:59:32.170Z","2.6.25":"2020-08-05T14:35:14.244Z","2.6.26":"2020-08-10T20:05:41.508Z","2.6.27":"2020-08-11T16:30:48.035Z","2.6.28-incbuild-collections.83":"2020-08-21T02:54:21.338Z","2.6.28":"2020-08-24T08:54:51.692Z","2.6.29":"2020-08-26T14:11:57.239Z","2.6.30":"2020-08-28T14:07:50.742Z","2.6.31":"2020-08-31T12:00:13.724Z","2.6.32":"2020-09-07T09:57:00.056Z","2.6.33":"2020-09-08T16:28:20.697Z","2.6.34":"2020-09-09T14:09:13.272Z","2.6.35":"2020-09-10T11:03:36.963Z","2.6.36":"2020-09-15T07:10:15.871Z","2.6.37":"2020-09-28T13:12:11.228Z","2.6.38":"2020-10-01T09:01:54.195Z","2.6.39":"2020-10-06T08:02:37.966Z","2.6.40":"2020-10-09T12:43:08.732Z","2.6.41":"2020-10-12T16:49:40.789Z","2.6.42":"2020-10-12T19:55:07.429Z","2.6.43":"2020-10-19T12:31:11.883Z","2.6.29-dev-ssr-2.60":"2020-10-19T17:44:03.429Z","2.6.37-static-image.160":"2020-10-21T09:27:05.965Z","2.6.37-static-image.163":"2020-10-21T09:41:44.963Z","2.6.39-lazy-images.16":"2020-10-21T10:35:34.820Z","2.6.43-lazy-images.60":"2020-10-21T10:55:39.881Z","2.6.43-lazy-images.61":"2020-10-21T16:03:22.023Z","2.6.37-static-image.172":"2020-10-23T12:19:54.806Z","2.6.44":"2020-11-02T08:46:05.924Z","2.7.0":"2020-11-02T13:47:47.311Z","2.8.0-next.0":"2020-11-03T16:35:30.572Z","2.7.1":"2020-11-04T11:41:53.521Z","2.8.0-next.1":"2020-11-10T16:45:43.229Z","2.9.0-next.0":"2020-11-10T17:34:30.842Z","2.8.0":"2020-11-12T17:13:14.483Z","2.10.0-next.0":"2020-11-18T06:18:11.432Z","2.10.0-next.1":"2020-11-18T14:32:26.421Z","2.9.0":"2020-11-19T18:59:33.797Z","2.9.0-image-helpers.55":"2020-11-20T13:23:29.400Z","2.9.0-image-helpers.59":"2020-11-23T15:52:39.764Z","2.11.0-next.0":"2020-11-26T22:01:09.331Z","2.9.1":"2020-11-27T15:36:35.774Z","2.11.0-next.1":"2020-12-01T21:52:10.343Z","2.10.0":"2020-12-02T01:04:40.889Z","2.11.0-next.2":"2020-12-03T16:18:05.979Z","2.11.0-next.3":"2020-12-04T17:49:08.135Z","2.10.1":"2020-12-07T19:13:07.409Z","2.11.0-next.4":"2020-12-08T20:09:27.981Z","2.12.0-next.0":"2020-12-10T21:54:08.649Z","2.12.0-next.1":"2020-12-15T13:50:15.555Z","2.11.0":"2020-12-15T18:00:32.509Z","2.11.1":"2020-12-16T16:35:19.077Z","2.12.0-next.2":"2020-12-17T14:30:25.871Z","2.12.0-next.3":"2020-12-17T14:53:38.807Z","2.12.0-next.4":"2020-12-17T17:38:19.595Z","2.12.0-next.5":"2020-12-18T12:09:10.429Z","2.9.0-telemetry-test.359":"2020-12-22T11:45:31.816Z","2.9.0-telemetry-test.360":"2020-12-22T11:59:48.146Z","2.12.0-avif.11":"2020-12-23T11:39:54.667Z","2.12.0-avif.14":"2020-12-23T14:45:43.038Z","2.11.2":"2020-12-23T16:50:54.305Z","2.12.0-next.6":"2020-12-29T14:37:32.479Z","2.13.0-next.0":"2020-12-29T21:18:24.739Z","2.9.0-telemetry-test.371":"2020-12-30T09:56:08.468Z","2.9.0-telemetry-test2.371":"2020-12-30T10:31:15.487Z","2.9.0-telemetry-test2.372":"2020-12-30T11:05:46.531Z","2.12.0":"2021-01-05T19:42:18.667Z","2.13.0-rc.42":"2021-01-08T15:40:33.889Z","2.9.0-telemetry-test.418":"2021-01-11T13:03:29.000Z","2.13.0-testing-sid.45":"2021-01-12T14:00:25.265Z","2.13.0-incbuilds-special.22":"2021-01-12T14:25:14.853Z","2.13.0-testing-sid.46":"2021-01-12T16:42:46.775Z","2.13.0-next.1":"2021-01-12T20:03:31.157Z","2.13.0-testing-sid.1":"2021-01-12T21:26:29.914Z","2.13.0-testing-sid2.1":"2021-01-12T21:28:47.758Z","2.12.1":"2021-01-13T10:52:14.928Z","2.13.0-testing-sid3.2":"2021-01-13T13:40:22.727Z","2.13.0-query-chunk-stats-base.68":"2021-01-13T19:09:22.362Z","2.13.0-1testing-sid.3":"2021-01-14T12:32:59.857Z","2.13.0-2testing-sid.3":"2021-01-14T12:35:52.472Z","2.13.0-laurie-testing.3":"2021-01-14T12:37:00.746Z","2.12.2":"2021-01-16T11:30:09.176Z","2.14.0-next.0":"2021-01-18T19:26:00.968Z","2.13.0":"2021-01-19T18:46:12.726Z","2.13.1":"2021-01-20T17:24:07.311Z","2.13.2":"2021-01-26T09:27:38.708Z","2.14.0-next.1":"2021-01-26T16:36:03.336Z","2.13.3":"2021-01-28T09:01:23.774Z","2.15.0-next.0":"2021-01-28T16:34:22.204Z","2.13.4":"2021-01-29T16:48:08.556Z","2.14.0-cpb3.26":"2021-01-31T14:38:59.195Z","2.14.0":"2021-02-02T17:05:55.344Z","2.15.0-next.1":"2021-02-04T10:43:38.232Z","3.0.0-next.0":"2021-02-05T12:15:31.918Z","2.14.1":"2021-02-05T17:08:25.094Z","3.0.0-next.1":"2021-02-08T09:29:28.844Z","3.0.0-next.2":"2021-02-11T10:04:01.443Z","3.0.0-next.3":"2021-02-12T09:42:44.645Z","3.0.0-cpb3.33":"2021-02-15T11:58:11.027Z","3.0.0-next.4":"2021-02-17T16:00:24.286Z","3.0.0-next.5":"2021-02-18T10:30:28.472Z","3.0.0-next.6":"2021-02-19T15:58:35.193Z","3.0.0-next.7":"2021-02-19T17:07:07.206Z","3.0.0-next.8":"2021-02-22T07:12:44.513Z","2.14.2":"2021-02-24T14:24:16.415Z","3.0.0-next.9":"2021-02-25T11:03:56.118Z","2.14.3":"2021-02-25T11:14:56.672Z","3.1.0-next.0":"2021-02-26T09:28:15.673Z","3.1.0-next.1":"2021-02-26T13:47:35.399Z","3.0.0-v3rc.0":"2021-02-26T15:57:48.030Z","3.0.0-v3rc.1":"2021-03-01T14:51:38.630Z","3.0.0-v3rc.2":"2021-03-01T21:00:44.033Z","3.0.0":"2021-03-02T10:42:40.568Z"},"keywords":["gatsby","gatsby-plugin","image","sharp"],"author":{"name":"Kyle Mathews","email":"mathews.kyle@gmail.com"},"license":"MIT","readmeFilename":"README.md","homepage":"https://github.com/gatsbyjs/gatsby/tree/master/packages/gatsby-plugin-sharp#readme","repository":{"type":"git","url":"git+https://github.com/gatsbyjs/gatsby.git","directory":"packages/gatsby-plugin-sharp"},"bugs":{"url":"https://github.com/gatsbyjs/gatsby/issues"}}